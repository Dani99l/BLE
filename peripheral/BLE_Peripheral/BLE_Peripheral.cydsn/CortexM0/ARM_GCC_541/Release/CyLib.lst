ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 124 0
  39              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 109 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 124 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 4


  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE2:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoStop,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoStop
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoStop, %function
  58              	CySysClkImoStop:
  59              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  60              		.loc 1 140 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  65              		.loc 1 149 0
  66 0000 024A     		ldr	r2, .L5
 150:Generated_Source\PSoC4/CyLib.c **** }
  67              		.loc 1 150 0
  68              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 150 0
  75 000a 7047     		bx	lr
  76              	.L6:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 5


  77              		.align	2
  78              	.L5:
  79 000c 08010B40 		.word	1074462984
  80              		.cfi_endproc
  81              	.LFE3:
  82              		.size	CySysClkImoStop, .-CySysClkImoStop
  83              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  84              		.align	1
  85              		.global	CySysClkWriteHfclkDirect
  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkWriteHfclkDirect, %function
  89              	CySysClkWriteHfclkDirect:
  90              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 6


 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 7


 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 8


 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 9


 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 10


 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  91              		.loc 1 430 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL0:
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              		.loc 1 430 0
 101 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 102              		.loc 1 434 0
 103 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 104              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 105              		.loc 1 437 0
 106 0008 0723     		movs	r3, #7
 107 000a 0449     		ldr	r1, .L8
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 108              		.loc 1 454 0
 109              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 110              		.loc 1 437 0
 111 000c 0A68     		ldr	r2, [r1]
 112 000e 9A43     		bics	r2, r3
 113              	.LVL2:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 11


 448:Generated_Source\PSoC4/CyLib.c ****     }
 114              		.loc 1 448 0
 115 0010 2340     		ands	r3, r4
 116 0012 1343     		orrs	r3, r2
 117              	.LVL3:
 451:Generated_Source\PSoC4/CyLib.c **** 
 118              		.loc 1 451 0
 119 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 453 0
 121 0016 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL4:
 123              	.LVL5:
 124              		.loc 1 454 0
 125 001a 10BD     		pop	{r4, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 001c 00010B40 		.word	1074462976
 130              		.cfi_endproc
 131              	.LFE4:
 132              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 133              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 134              		.align	1
 135              		.global	CySysEnablePumpClock
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysEnablePumpClock, %function
 139              	CySysEnablePumpClock:
 140              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 141              		.loc 1 474 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 12


 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 094B     		ldr	r3, .L15
 151 0004 094C     		ldr	r4, .L15+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 152              		.loc 1 476 0
 153 0006 C207     		lsls	r2, r0, #31
 154 0008 04D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 155              		.loc 1 478 0
 156 000a 2268     		ldr	r2, [r4]
 157 000c 1968     		ldr	r1, [r3]
 158 000e 5206     		lsls	r2, r2, #25
 159 0010 0A43     		orrs	r2, r1
 160 0012 06E0     		b	.L13
 161              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 162              		.loc 1 482 0
 163 0014 1A68     		ldr	r2, [r3]
 164 0016 1201     		lsls	r2, r2, #4
 165 0018 520F     		lsrs	r2, r2, #29
 166 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 167              		.loc 1 484 0
 168 001c 1968     		ldr	r1, [r3]
 169 001e 044A     		ldr	r2, .L15+8
 170 0020 0A40     		ands	r2, r1
 171              	.L13:
 172 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 173              		.loc 1 498 0
 174              		@ sp needed
 175 0024 10BD     		pop	{r4, pc}
 176              	.L16:
 177 0026 C046     		.align	2
 178              	.L15:
 179 0028 08010B40 		.word	1074462984
 180 002c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 13


 181 0030 FFFFFFF1 		.word	-234881025
 182              		.cfi_endproc
 183              	.LFE5:
 184              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 185              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 186              		.align	1
 187              		.global	CySysClkGetSysclkSource
 188              		.code	16
 189              		.thumb_func
 190              		.type	CySysClkGetSysclkSource, %function
 191              	CySysClkGetSysclkSource:
 192              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 193              		.loc 1 511 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 201              		.loc 1 515 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 204              		.loc 1 525 0
 205 0006 034B     		ldr	r3, .L18
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 14


 531:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 531 0
 207              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 208              		.loc 1 525 0
 209 0008 1C68     		ldr	r4, [r3]
 210              	.LVL8:
 528:Generated_Source\PSoC4/CyLib.c **** 
 211              		.loc 1 528 0
 212 000a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL9:
 530:Generated_Source\PSoC4/CyLib.c **** }
 214              		.loc 1 530 0
 215 000e 0720     		movs	r0, #7
 216 0010 2040     		ands	r0, r4
 217              	.LVL10:
 218              		.loc 1 531 0
 219 0012 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0014 00010B40 		.word	1074462976
 224              		.cfi_endproc
 225              	.LFE6:
 226              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 227              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 228              		.align	1
 229              		.global	CySysClkWriteSysclkDiv
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysClkWriteSysclkDiv, %function
 233              	CySysClkWriteSysclkDiv:
 234              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 15


 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 566 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL11:
 240 0000 70B5     		push	{r4, r5, r6, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 566 0
 247 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 248              		.loc 1 569 0
 249 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 251              		.loc 1 572 0
 252 0008 E104     		lsls	r1, r4, #19
 253 000a E024     		movs	r4, #224
 254              	.LVL13:
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 255              		.loc 1 573 0
 256 000c 054D     		ldr	r5, .L21
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 257              		.loc 1 572 0
 258 000e A403     		lsls	r4, r4, #14
 259              		.loc 1 573 0
 260 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 261              		.loc 1 572 0
 262 0012 054A     		ldr	r2, .L21+4
 263 0014 2140     		ands	r1, r4
 264 0016 1A40     		ands	r2, r3
 265 0018 0B00     		movs	r3, r1
 266 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 267              		.loc 1 571 0
 268 001c 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 16


 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 269              		.loc 1 576 0
 270 001e FFF7FEFF 		bl	CyExitCriticalSection
 271              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 272              		.loc 1 577 0
 273              		@ sp needed
 274 0022 70BD     		pop	{r4, r5, r6, pc}
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0024 00010B40 		.word	1074462976
 279 0028 FFFFC7FF 		.word	-3670017
 280              		.cfi_endproc
 281              	.LFE7:
 282              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 283              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 284              		.align	1
 285              		.global	CySysClkWriteImoFreq
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysClkWriteImoFreq, %function
 289              	CySysClkWriteImoFreq:
 290              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 17


 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 624 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 24
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL15:
 296 0000 10B5     		push	{r4, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
 300 0002 0400     		movs	r4, r0
 301 0004 86B0     		sub	sp, sp, #24
 302              		.cfi_def_cfa_offset 32
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 303              		.loc 1 647 0
 304 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 305              	.LVL16:
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 18


 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 306              		.loc 1 681 0
 307 000a 0E4B     		ldr	r3, .L24
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 308              		.loc 1 692 0
 309 000c 0E49     		ldr	r1, .L24+4
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 310              		.loc 1 681 0
 311 000e 1A68     		ldr	r2, [r3]
 312 0010 02AB     		add	r3, sp, #8
 313 0012 0292     		str	r2, [sp, #8]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 314              		.loc 1 682 0
 315 0014 0D4A     		ldr	r2, .L24+8
 316 0016 1268     		ldr	r2, [r2]
 317 0018 0392     		str	r2, [sp, #12]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 318              		.loc 1 683 0
 319 001a 0D4A     		ldr	r2, .L24+12
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 19


 320 001c 1419     		adds	r4, r2, r4
 321              	.LVL17:
 322 001e 033C     		subs	r4, r4, #3
 323 0020 2278     		ldrb	r2, [r4]
 324 0022 0492     		str	r2, [sp, #16]
 684:Generated_Source\PSoC4/CyLib.c **** 
 325              		.loc 1 684 0
 326 0024 0B4A     		ldr	r2, .L24+16
 327 0026 1268     		ldr	r2, [r2]
 328 0028 0592     		str	r2, [sp, #20]
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 329              		.loc 1 686 0
 330 002a 0B4A     		ldr	r2, .L24+20
 331 002c 0092     		str	r2, [sp]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 332              		.loc 1 691 0
 333 002e 6A46     		mov	r2, sp
 689:Generated_Source\PSoC4/CyLib.c **** 
 334              		.loc 1 689 0
 335 0030 0193     		str	r3, [sp, #4]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 336              		.loc 1 691 0
 337 0032 0A4B     		ldr	r3, .L24+24
 338 0034 1A60     		str	r2, [r3]
 339              		.loc 1 692 0
 340 0036 0A4A     		ldr	r2, .L24+28
 341 0038 1160     		str	r1, [r2]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 342              		.loc 1 693 0
 343 003a 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 20


 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 21


 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 344              		.loc 1 823 0
 345 003c FFF7FEFF 		bl	CyExitCriticalSection
 346              	.LVL18:
 824:Generated_Source\PSoC4/CyLib.c ****     }
 347              		.loc 1 824 0
 348 0040 06B0     		add	sp, sp, #24
 349              		@ sp needed
 350 0042 10BD     		pop	{r4, pc}
 351              	.L25:
 352              		.align	2
 353              	.L24:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 22


 354 0044 08010B40 		.word	1074462984
 355 0048 17000080 		.word	-2147483625
 356 004c 00010B40 		.word	1074462976
 357 0050 00000000 		.word	.LANCHOR1
 358 0054 30001040 		.word	1074790448
 359 0058 B6EA0000 		.word	60086
 360 005c 08001040 		.word	1074790408
 361 0060 04001040 		.word	1074790404
 362              		.cfi_endproc
 363              	.LFE8:
 364              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 365              		.section	.text.CySysClkEcoStop,"ax",%progbits
 366              		.align	1
 367              		.global	CySysClkEcoStop
 368              		.code	16
 369              		.thumb_func
 370              		.type	CySysClkEcoStop, %function
 371              	CySysClkEcoStop:
 372              	.LFB10:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 23


 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 24


 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 25


 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 26


1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 27


1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 28


1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 373              		.loc 1 1170 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 378              		.loc 1 1173 0
 379 0000 0121     		movs	r1, #1
 380 0002 054A     		ldr	r2, .L27
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 381              		.loc 1 1182 0
 382              		@ sp needed
1173:Generated_Source\PSoC4/CyLib.c **** 
 383              		.loc 1 1173 0
 384 0004 1368     		ldr	r3, [r2]
 385 0006 8B43     		bics	r3, r1
 386 0008 1360     		str	r3, [r2]
1176:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 387              		.loc 1 1176 0
 388 000a 044A     		ldr	r2, .L27+4
 389 000c 044B     		ldr	r3, .L27+8
 390 000e 1168     		ldr	r1, [r2]
 391 0010 0B40     		ands	r3, r1
 392 0012 1360     		str	r3, [r2]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 29


 393              		.loc 1 1182 0
 394 0014 7047     		bx	lr
 395              	.L28:
 396 0016 C046     		.align	2
 397              	.L27:
 398 0018 60F02E40 		.word	1076818016
 399 001c 10002E40 		.word	1076756496
 400 0020 FF7FFFFF 		.word	-32769
 401              		.cfi_endproc
 402              	.LFE10:
 403              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 404              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 405              		.align	1
 406              		.global	CySysClkEcoReadStatus
 407              		.code	16
 408              		.thumb_func
 409              		.type	CySysClkEcoReadStatus, %function
 410              	CySysClkEcoReadStatus:
 411              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 412              		.loc 1 1204 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 417              		.loc 1 1208 0
 418 0000 024B     		ldr	r3, .L30
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 30


1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 419              		.loc 1 1221 0
 420              		@ sp needed
1208:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 421              		.loc 1 1208 0
 422 0002 1868     		ldr	r0, [r3]
 423              	.LVL19:
1220:Generated_Source\PSoC4/CyLib.c ****     }
 424              		.loc 1 1220 0
 425 0004 0123     		movs	r3, #1
 426 0006 1840     		ands	r0, r3
 427              	.LVL20:
 428              		.loc 1 1221 0
 429 0008 7047     		bx	lr
 430              	.L31:
 431 000a C046     		.align	2
 432              	.L30:
 433 000c 0C002E40 		.word	1076756492
 434              		.cfi_endproc
 435              	.LFE11:
 436              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 437              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 438              		.align	1
 439              		.global	CySysClkWriteEcoDiv
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteEcoDiv, %function
 443              	CySysClkWriteEcoDiv:
 444              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 31


1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 445              		.loc 1 1251 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL21:
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 450              		.loc 1 1254 0
 451 0000 094B     		ldr	r3, .L37
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 452              		.loc 1 1251 0
 453 0002 10B5     		push	{r4, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 457              		.loc 1 1254 0
 458 0004 1A68     		ldr	r2, [r3]
 459 0006 0723     		movs	r3, #7
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 460              		.loc 1 1251 0
 461 0008 0400     		movs	r4, r0
 462              		.loc 1 1254 0
 463 000a 1340     		ands	r3, r2
 464 000c 022B     		cmp	r3, #2
 465 000e 0AD0     		beq	.L32
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 466              		.loc 1 1256 0
 467 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 468              	.LVL22:
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 469              		.loc 1 1258 0
 470 0014 0321     		movs	r1, #3
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 471              		.loc 1 1259 0
 472 0016 054A     		ldr	r2, .L37+4
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 473              		.loc 1 1258 0
 474 0018 0C40     		ands	r4, r1
 475              	.LVL23:
 476              		.loc 1 1259 0
 477 001a 1368     		ldr	r3, [r2]
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 478              		.loc 1 1258 0
 479 001c 8B43     		bics	r3, r1
 480 001e 2343     		orrs	r3, r4
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 32


 481 0020 1360     		str	r3, [r2]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 482              		.loc 1 1261 0
 483 0022 FFF7FEFF 		bl	CyExitCriticalSection
 484              	.LVL24:
 485              	.L32:
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
 486              		.loc 1 1268 0
 487              		@ sp needed
 488 0026 10BD     		pop	{r4, pc}
 489              	.L38:
 490              		.align	2
 491              	.L37:
 492 0028 00010B40 		.word	1074462976
 493 002c 64F02E40 		.word	1076818020
 494              		.cfi_endproc
 495              	.LFE12:
 496              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 497              		.section	.text.CySysLvdDisable,"ax",%progbits
 498              		.align	1
 499              		.global	CySysLvdDisable
 500              		.code	16
 501              		.thumb_func
 502              		.type	CySysLvdDisable, %function
 503              	CySysLvdDisable:
 504              	.LFB14:
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 33


1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 34


1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 35


1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 36


1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 37


1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 38


1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 39


1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 40


1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 41


1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 42


1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 43


1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 44


1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 45


1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 46


2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 47


2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 48


2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 505              		.loc 1 2149 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 510              		.loc 1 2150 0
 511 0000 0221     		movs	r1, #2
 512 0002 054A     		ldr	r2, .L40
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
 513              		.loc 1 2152 0
 514              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 515              		.loc 1 2150 0
 516 0004 1368     		ldr	r3, [r2]
 517 0006 8B43     		bics	r3, r1
 518 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 519              		.loc 1 2151 0
 520 000a 044A     		ldr	r2, .L40+4
 521 000c 0139     		subs	r1, r1, #1
 522 000e 1368     		ldr	r3, [r2]
 523 0010 8B43     		bics	r3, r1
 524 0012 1360     		str	r3, [r2]
 525              		.loc 1 2152 0
 526 0014 7047     		bx	lr
 527              	.L41:
 528 0016 C046     		.align	2
 529              	.L40:
 530 0018 08000B40 		.word	1074462728
 531 001c 18000B40 		.word	1074462744
 532              		.cfi_endproc
 533              	.LFE14:
 534              		.size	CySysLvdDisable, .-CySysLvdDisable
 535              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 536              		.align	1
 537              		.global	CySysLvdGetInterruptSource
 538              		.code	16
 539              		.thumb_func
 540              		.type	CySysLvdGetInterruptSource, %function
 541              	CySysLvdGetInterruptSource:
 542              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 49


2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 543              		.loc 1 2167 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 548              		.loc 1 2168 0
 549 0000 024B     		ldr	r3, .L43
2169:Generated_Source\PSoC4/CyLib.c ****     }
 550              		.loc 1 2169 0
 551              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 552              		.loc 1 2168 0
 553 0002 1868     		ldr	r0, [r3]
 554 0004 0223     		movs	r3, #2
 555 0006 1840     		ands	r0, r3
 556              		.loc 1 2169 0
 557 0008 7047     		bx	lr
 558              	.L44:
 559 000a C046     		.align	2
 560              	.L43:
 561 000c 04000B40 		.word	1074462724
 562              		.cfi_endproc
 563              	.LFE15:
 564              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 565              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 566              		.align	1
 567              		.global	CySysLvdClearInterrupt
 568              		.code	16
 569              		.thumb_func
 570              		.type	CySysLvdClearInterrupt, %function
 571              	CySysLvdClearInterrupt:
 572              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 573              		.loc 1 2183 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 578              		.loc 1 2184 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 50


 579 0000 0222     		movs	r2, #2
 580 0002 014B     		ldr	r3, .L46
2185:Generated_Source\PSoC4/CyLib.c ****     }
 581              		.loc 1 2185 0
 582              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 583              		.loc 1 2184 0
 584 0004 1A60     		str	r2, [r3]
 585              		.loc 1 2185 0
 586 0006 7047     		bx	lr
 587              	.L47:
 588              		.align	2
 589              	.L46:
 590 0008 04000B40 		.word	1074462724
 591              		.cfi_endproc
 592              	.LFE16:
 593              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 594              		.section	.text.CySysGetResetReason,"ax",%progbits
 595              		.align	1
 596              		.global	CySysGetResetReason
 597              		.code	16
 598              		.thumb_func
 599              		.type	CySysGetResetReason, %function
 600              	CySysGetResetReason:
 601              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 602              		.loc 1 2209 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607              	.LVL25:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 51


2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 608              		.loc 1 2212 0
 609 0000 1923     		movs	r3, #25
 610 0002 0200     		movs	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 611              		.loc 1 2213 0
 612 0004 0249     		ldr	r1, .L49
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 613              		.loc 1 2212 0
 614 0006 1A40     		ands	r2, r3
 615              	.LVL26:
 616              		.loc 1 2213 0
 617 0008 0868     		ldr	r0, [r1]
 618              	.LVL27:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 619              		.loc 1 2218 0
 620              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 621              		.loc 1 2217 0
 622 000a 1840     		ands	r0, r3
 623              	.LVL28:
2215:Generated_Source\PSoC4/CyLib.c **** 
 624              		.loc 1 2215 0
 625 000c 0A60     		str	r2, [r1]
 626              		.loc 1 2218 0
 627 000e 7047     		bx	lr
 628              	.L50:
 629              		.align	2
 630              	.L49:
 631 0010 00030B40 		.word	1074463488
 632              		.cfi_endproc
 633              	.LFE17:
 634              		.size	CySysGetResetReason, .-CySysGetResetReason
 635              		.section	.text.CyDisableInts,"ax",%progbits
 636              		.align	1
 637              		.global	CyDisableInts
 638              		.code	16
 639              		.thumb_func
 640              		.type	CyDisableInts, %function
 641              	CyDisableInts:
 642              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 52


2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 643              		.loc 1 2232 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 648              		.loc 1 2239 0
 649 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 650              		.loc 1 2236 0
 651 0002 024B     		ldr	r3, .L52
 652              		.loc 1 2239 0
 653 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 654              		.loc 1 2236 0
 655 0006 1868     		ldr	r0, [r3]
 656              	.LVL29:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 657              		.loc 1 2242 0
 658              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 659              		.loc 1 2239 0
 660 0008 1A60     		str	r2, [r3]
 661              		.loc 1 2242 0
 662 000a 7047     		bx	lr
 663              	.L53:
 664              		.align	2
 665              	.L52:
 666 000c 80E100E0 		.word	-536813184
 667              		.cfi_endproc
 668              	.LFE18:
 669              		.size	CyDisableInts, .-CyDisableInts
 670              		.section	.text.CyEnableInts,"ax",%progbits
 671              		.align	1
 672              		.global	CyEnableInts
 673              		.code	16
 674              		.thumb_func
 675              		.type	CyEnableInts, %function
 676              	CyEnableInts:
 677              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 53


2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 678              		.loc 1 2255 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683              	.LVL30:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 684              		.loc 1 2256 0
 685 0000 014B     		ldr	r3, .L55
2257:Generated_Source\PSoC4/CyLib.c **** }
 686              		.loc 1 2257 0
 687              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 688              		.loc 1 2256 0
 689 0002 1860     		str	r0, [r3]
 690              		.loc 1 2257 0
 691 0004 7047     		bx	lr
 692              	.L56:
 693 0006 C046     		.align	2
 694              	.L55:
 695 0008 00E100E0 		.word	-536813312
 696              		.cfi_endproc
 697              	.LFE19:
 698              		.size	CyEnableInts, .-CyEnableInts
 699              		.section	.text.CyIntSetSysVector,"ax",%progbits
 700              		.align	1
 701              		.global	CyIntSetSysVector
 702              		.code	16
 703              		.thumb_func
 704              		.type	CyIntSetSysVector, %function
 705              	CyIntSetSysVector:
 706              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 54


2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 707              		.loc 1 2280 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL31:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 713              		.loc 1 2287 0
 714 0000 8023     		movs	r3, #128
 715 0002 8000     		lsls	r0, r0, #2
 716              	.LVL32:
 717 0004 9B05     		lsls	r3, r3, #22
 718 0006 C318     		adds	r3, r0, r3
 719 0008 1868     		ldr	r0, [r3]
 720              	.LVL33:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 721              		.loc 1 2293 0
 722              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2290 0
 724 000a 1960     		str	r1, [r3]
 725              		.loc 1 2293 0
 726 000c 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE20:
 729              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 730              		.section	.text.CyIntGetSysVector,"ax",%progbits
 731              		.align	1
 732              		.global	CyIntGetSysVector
 733              		.code	16
 734              		.thumb_func
 735              		.type	CyIntGetSysVector, %function
 736              	CyIntGetSysVector:
 737              	.LFB21:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 55


2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 738              		.loc 1 2314 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL34:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 744              		.loc 1 2319 0
 745 0000 8023     		movs	r3, #128
 746 0002 8000     		lsls	r0, r0, #2
 747              	.LVL35:
 748 0004 9B05     		lsls	r3, r3, #22
 749 0006 C018     		adds	r0, r0, r3
 750 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 751              		.loc 1 2320 0
 752              		@ sp needed
 753 000a 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE21:
 756              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 757              		.section	.text.CyIntSetVector,"ax",%progbits
 758              		.align	1
 759              		.global	CyIntSetVector
 760              		.code	16
 761              		.thumb_func
 762              		.type	CyIntSetVector, %function
 763              	CyIntSetVector:
 764              	.LFB22:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 56


2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 765              		.loc 1 2336 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL36:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 771              		.loc 1 2343 0
 772 0000 024B     		ldr	r3, .L60
 773 0002 8000     		lsls	r0, r0, #2
 774              	.LVL37:
 775 0004 C318     		adds	r3, r0, r3
 776 0006 1868     		ldr	r0, [r3]
 777              	.LVL38:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 778              		.loc 1 2349 0
 779              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 780              		.loc 1 2346 0
 781 0008 1960     		str	r1, [r3]
 782              		.loc 1 2349 0
 783 000a 7047     		bx	lr
 784              	.L61:
 785              		.align	2
 786              	.L60:
 787 000c 40000020 		.word	536870976
 788              		.cfi_endproc
 789              	.LFE22:
 790              		.size	CyIntSetVector, .-CyIntSetVector
 791              		.section	.text.CyIntGetVector,"ax",%progbits
 792              		.align	1
 793              		.global	CyIntGetVector
 794              		.code	16
 795              		.thumb_func
 796              		.type	CyIntGetVector, %function
 797              	CyIntGetVector:
 798              	.LFB23:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 57


2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 799              		.loc 1 2364 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL39:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 805              		.loc 1 2369 0
 806 0000 024B     		ldr	r3, .L63
 807 0002 8000     		lsls	r0, r0, #2
 808              	.LVL40:
 809 0004 C018     		adds	r0, r0, r3
 810 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 811              		.loc 1 2370 0
 812              		@ sp needed
 813 0008 7047     		bx	lr
 814              	.L64:
 815 000a C046     		.align	2
 816              	.L63:
 817 000c 40000020 		.word	536870976
 818              		.cfi_endproc
 819              	.LFE23:
 820              		.size	CyIntGetVector, .-CyIntGetVector
 821              		.section	.text.CyIntSetPriority,"ax",%progbits
 822              		.align	1
 823              		.global	CyIntSetPriority
 824              		.code	16
 825              		.thumb_func
 826              		.type	CyIntSetPriority, %function
 827              	CyIntSetPriority:
 828              	.LFB24:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 58


2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 829              		.loc 1 2383 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              	.LVL41:
 834 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 835              		.cfi_def_cfa_offset 24
 836              		.cfi_offset 3, -24
 837              		.cfi_offset 4, -20
 838              		.cfi_offset 5, -16
 839              		.cfi_offset 6, -12
 840              		.cfi_offset 7, -8
 841              		.cfi_offset 14, -4
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 842              		.loc 1 2391 0
 843 0002 0326     		movs	r6, #3
 844 0004 0500     		movs	r5, r0
 845 0006 3540     		ands	r5, r6
 846 0008 B540     		lsls	r5, r5, r6
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 847              		.loc 1 2383 0
 848 000a 0F00     		movs	r7, r1
 849 000c 0400     		movs	r4, r0
 850              		.loc 1 2391 0
 851 000e 0635     		adds	r5, r5, #6
 852              	.LVL42:
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 853              		.loc 1 2396 0
 854 0010 AE40     		lsls	r6, r6, r5
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 855              		.loc 1 2397 0
 856 0012 AF40     		lsls	r7, r7, r5
2393:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2393 0
 858 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 859              	.LVL43:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 860              		.loc 1 2395 0
 861 0018 A408     		lsrs	r4, r4, #2
 862 001a 054B     		ldr	r3, .L66
 863 001c A400     		lsls	r4, r4, #2
 864 001e E418     		adds	r4, r4, r3
 865 0020 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 59


 866              	.LVL44:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 867              		.loc 1 2401 0
 868              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 869              		.loc 1 2396 0
 870 0022 B343     		bics	r3, r6
 871              	.LVL45:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 872              		.loc 1 2397 0
 873 0024 1F43     		orrs	r7, r3
 874              	.LVL46:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 875              		.loc 1 2398 0
 876 0026 2760     		str	r7, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 877              		.loc 1 2400 0
 878 0028 FFF7FEFF 		bl	CyExitCriticalSection
 879              	.LVL47:
 880              	.LVL48:
 881              	.LVL49:
 882              		.loc 1 2401 0
 883 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 884              	.L67:
 885 002e C046     		.align	2
 886              	.L66:
 887 0030 00E400E0 		.word	-536812544
 888              		.cfi_endproc
 889              	.LFE24:
 890              		.size	CyIntSetPriority, .-CyIntSetPriority
 891              		.section	.text.CyIntGetPriority,"ax",%progbits
 892              		.align	1
 893              		.global	CyIntGetPriority
 894              		.code	16
 895              		.thumb_func
 896              		.type	CyIntGetPriority, %function
 897              	CyIntGetPriority:
 898              	.LFB25:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 60


 899              		.loc 1 2417 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904              	.LVL50:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 905              		.loc 1 2422 0
 906 0000 8308     		lsrs	r3, r0, #2
 907 0002 064A     		ldr	r2, .L69
 908 0004 9B00     		lsls	r3, r3, #2
 909 0006 9B18     		adds	r3, r3, r2
 910 0008 1968     		ldr	r1, [r3]
 911              	.LVL51:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 912              		.loc 1 2424 0
 913 000a 0322     		movs	r2, #3
 914 000c 0300     		movs	r3, r0
 915 000e 1340     		ands	r3, r2
 916 0010 9340     		lsls	r3, r3, r2
 917 0012 0633     		adds	r3, r3, #6
 918 0014 D940     		lsrs	r1, r1, r3
 919              	.LVL52:
 920 0016 0800     		movs	r0, r1
 921              	.LVL53:
2425:Generated_Source\PSoC4/CyLib.c **** }
 922              		.loc 1 2425 0
 923              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 924              		.loc 1 2424 0
 925 0018 1040     		ands	r0, r2
 926              		.loc 1 2425 0
 927 001a 7047     		bx	lr
 928              	.L70:
 929              		.align	2
 930              	.L69:
 931 001c 00E400E0 		.word	-536812544
 932              		.cfi_endproc
 933              	.LFE25:
 934              		.size	CyIntGetPriority, .-CyIntGetPriority
 935              		.section	.text.CyIntEnable,"ax",%progbits
 936              		.align	1
 937              		.global	CyIntEnable
 938              		.code	16
 939              		.thumb_func
 940              		.type	CyIntEnable, %function
 941              	CyIntEnable:
 942              	.LFB26:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 61


2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 943              		.loc 1 2438 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948              	.LVL54:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 949              		.loc 1 2439 0
 950 0000 1F23     		movs	r3, #31
 951 0002 1840     		ands	r0, r3
 952              	.LVL55:
 953 0004 1E3B     		subs	r3, r3, #30
 954 0006 8340     		lsls	r3, r3, r0
 955 0008 014A     		ldr	r2, .L72
2440:Generated_Source\PSoC4/CyLib.c **** }
 956              		.loc 1 2440 0
 957              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 958              		.loc 1 2439 0
 959 000a 1360     		str	r3, [r2]
 960              		.loc 1 2440 0
 961 000c 7047     		bx	lr
 962              	.L73:
 963 000e C046     		.align	2
 964              	.L72:
 965 0010 00E100E0 		.word	-536813312
 966              		.cfi_endproc
 967              	.LFE26:
 968              		.size	CyIntEnable, .-CyIntEnable
 969              		.section	.text.CyIntGetState,"ax",%progbits
 970              		.align	1
 971              		.global	CyIntGetState
 972              		.code	16
 973              		.thumb_func
 974              		.type	CyIntGetState, %function
 975              	CyIntGetState:
 976              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 62


2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 977              		.loc 1 2456 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL56:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 983              		.loc 1 2458 0
 984 0000 1F22     		movs	r2, #31
 985 0002 044B     		ldr	r3, .L75
 986 0004 1040     		ands	r0, r2
 987              	.LVL57:
 988 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 989              		.loc 1 2459 0
 990              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 991              		.loc 1 2458 0
 992 0008 C340     		lsrs	r3, r3, r0
 993 000a 1800     		movs	r0, r3
 994 000c 0123     		movs	r3, #1
 995 000e 1840     		ands	r0, r3
 996              		.loc 1 2459 0
 997 0010 7047     		bx	lr
 998              	.L76:
 999 0012 C046     		.align	2
 1000              	.L75:
 1001 0014 00E100E0 		.word	-536813312
 1002              		.cfi_endproc
 1003              	.LFE27:
 1004              		.size	CyIntGetState, .-CyIntGetState
 1005              		.section	.text.CyIntDisable,"ax",%progbits
 1006              		.align	1
 1007              		.global	CyIntDisable
 1008              		.code	16
 1009              		.thumb_func
 1010              		.type	CyIntDisable, %function
 1011              	CyIntDisable:
 1012              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 63


2472:Generated_Source\PSoC4/CyLib.c **** {
 1013              		.loc 1 2472 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018              	.LVL58:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1019              		.loc 1 2473 0
 1020 0000 1F23     		movs	r3, #31
 1021 0002 1840     		ands	r0, r3
 1022              	.LVL59:
 1023 0004 1E3B     		subs	r3, r3, #30
 1024 0006 8340     		lsls	r3, r3, r0
 1025 0008 014A     		ldr	r2, .L78
2474:Generated_Source\PSoC4/CyLib.c **** }
 1026              		.loc 1 2474 0
 1027              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1028              		.loc 1 2473 0
 1029 000a 1360     		str	r3, [r2]
 1030              		.loc 1 2474 0
 1031 000c 7047     		bx	lr
 1032              	.L79:
 1033 000e C046     		.align	2
 1034              	.L78:
 1035 0010 80E100E0 		.word	-536813184
 1036              		.cfi_endproc
 1037              	.LFE28:
 1038              		.size	CyIntDisable, .-CyIntDisable
 1039              		.section	.text.CyIntSetPending,"ax",%progbits
 1040              		.align	1
 1041              		.global	CyIntSetPending
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CyIntSetPending, %function
 1045              	CyIntSetPending:
 1046              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1047              		.loc 1 2486 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
 1052              	.LVL60:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 64


 1053              		.loc 1 2487 0
 1054 0000 1F23     		movs	r3, #31
 1055 0002 1840     		ands	r0, r3
 1056              	.LVL61:
 1057 0004 1E3B     		subs	r3, r3, #30
 1058 0006 8340     		lsls	r3, r3, r0
 1059 0008 014A     		ldr	r2, .L81
2488:Generated_Source\PSoC4/CyLib.c **** }
 1060              		.loc 1 2488 0
 1061              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1062              		.loc 1 2487 0
 1063 000a 1360     		str	r3, [r2]
 1064              		.loc 1 2488 0
 1065 000c 7047     		bx	lr
 1066              	.L82:
 1067 000e C046     		.align	2
 1068              	.L81:
 1069 0010 00E200E0 		.word	-536813056
 1070              		.cfi_endproc
 1071              	.LFE29:
 1072              		.size	CyIntSetPending, .-CyIntSetPending
 1073              		.section	.text.CyIntClearPending,"ax",%progbits
 1074              		.align	1
 1075              		.global	CyIntClearPending
 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	CyIntClearPending, %function
 1079              	CyIntClearPending:
 1080              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1081              		.loc 1 2501 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL62:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1087              		.loc 1 2502 0
 1088 0000 1F23     		movs	r3, #31
 1089 0002 1840     		ands	r0, r3
 1090              	.LVL63:
 1091 0004 1E3B     		subs	r3, r3, #30
 1092 0006 8340     		lsls	r3, r3, r0
 1093 0008 014A     		ldr	r2, .L84
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 65


2503:Generated_Source\PSoC4/CyLib.c **** }
 1094              		.loc 1 2503 0
 1095              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1096              		.loc 1 2502 0
 1097 000a 1360     		str	r3, [r2]
 1098              		.loc 1 2503 0
 1099 000c 7047     		bx	lr
 1100              	.L85:
 1101 000e C046     		.align	2
 1102              	.L84:
 1103 0010 80E200E0 		.word	-536812928
 1104              		.cfi_endproc
 1105              	.LFE30:
 1106              		.size	CyIntClearPending, .-CyIntClearPending
 1107              		.section	.text.CyHalt,"ax",%progbits
 1108              		.align	1
 1109              		.global	CyHalt
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CyHalt, %function
 1113              	CyHalt:
 1114              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1115              		.loc 1 2516 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120              	.LVL64:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1121              		.loc 1 2525 0
 1122              		.syntax divided
 1123              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1124 0000 01BE     		    bkpt    1
 1125              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 66


2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1126              		.loc 1 2529 0
 1127              		.thumb
 1128              		.syntax unified
 1129              		@ sp needed
 1130 0002 7047     		bx	lr
 1131              		.cfi_endproc
 1132              	.LFE31:
 1133              		.size	CyHalt, .-CyHalt
 1134              		.section	.text.CySoftwareReset,"ax",%progbits
 1135              		.align	1
 1136              		.global	CySoftwareReset
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	CySoftwareReset, %function
 1140              	CySoftwareReset:
 1141              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1142              		.loc 1 2540 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1147              		.loc 1 2545 0
 1148 0000 034A     		ldr	r2, .L88
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1149              		.loc 1 2546 0
 1150 0002 0449     		ldr	r1, .L88+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1151              		.loc 1 2545 0
 1152 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1153              		.loc 1 2547 0
 1154              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1155              		.loc 1 2546 0
 1156 0006 9BB2     		uxth	r3, r3
 1157 0008 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1158              		.loc 1 2545 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 67


 1159 000a 1360     		str	r3, [r2]
 1160              		.loc 1 2547 0
 1161 000c 7047     		bx	lr
 1162              	.L89:
 1163 000e C046     		.align	2
 1164              	.L88:
 1165 0010 0CED00E0 		.word	-536810228
 1166 0014 0400FA05 		.word	100270084
 1167              		.cfi_endproc
 1168              	.LFE32:
 1169              		.size	CySoftwareReset, .-CySoftwareReset
 1170              		.section	.text.CyDelay,"ax",%progbits
 1171              		.align	1
 1172              		.global	CyDelay
 1173              		.code	16
 1174              		.thumb_func
 1175              		.type	CyDelay, %function
 1176              	CyDelay:
 1177              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1178              		.loc 1 2560 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              	.LVL65:
 1183 0000 70B5     		push	{r4, r5, r6, lr}
 1184              		.cfi_def_cfa_offset 16
 1185              		.cfi_offset 4, -16
 1186              		.cfi_offset 5, -12
 1187              		.cfi_offset 6, -8
 1188              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1189              		.loc 1 2561 0
 1190 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1191              		.loc 1 2560 0
 1192 0004 0400     		movs	r4, r0
 1193              		.loc 1 2561 0
 1194 0006 2D02     		lsls	r5, r5, #8
 1195              	.LVL66:
 1196              	.L91:
 1197 0008 064B     		ldr	r3, .L94
 1198 000a AC42     		cmp	r4, r5
 1199 000c 05D9     		bls	.L93
2562:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 68


2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1200              		.loc 1 2566 0
 1201 000e 5868     		ldr	r0, [r3, #4]
 1202 0010 FFF7FEFF 		bl	CyDelayCycles
 1203              	.LVL67:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1204              		.loc 1 2567 0
 1205 0014 044B     		ldr	r3, .L94+4
 1206 0016 E418     		adds	r4, r4, r3
 1207              	.LVL68:
 1208 0018 F6E7     		b	.L91
 1209              	.L93:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1210              		.loc 1 2570 0
 1211 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1212              		.loc 1 2571 0
 1213              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1214              		.loc 1 2570 0
 1215 001c 6043     		muls	r0, r4
 1216 001e FFF7FEFF 		bl	CyDelayCycles
 1217              	.LVL69:
 1218              	.LVL70:
 1219              		.loc 1 2571 0
 1220 0022 70BD     		pop	{r4, r5, r6, pc}
 1221              	.L95:
 1222              		.align	2
 1223              	.L94:
 1224 0024 00000000 		.word	.LANCHOR0
 1225 0028 0080FFFF 		.word	-32768
 1226              		.cfi_endproc
 1227              	.LFE33:
 1228              		.size	CyDelay, .-CyDelay
 1229              		.section	.text.CyDelayUs,"ax",%progbits
 1230              		.align	1
 1231              		.global	CyDelayUs
 1232              		.code	16
 1233              		.thumb_func
 1234              		.type	CyDelayUs, %function
 1235              	CyDelayUs:
 1236              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 69


2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1237              		.loc 1 2583 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              	.LVL71:
 1242 0000 10B5     		push	{r4, lr}
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 4, -8
 1245              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1246              		.loc 1 2584 0
 1247 0002 034B     		ldr	r3, .L97
2585:Generated_Source\PSoC4/CyLib.c **** }
 1248              		.loc 1 2585 0
 1249              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1250              		.loc 1 2584 0
 1251 0004 1B7B     		ldrb	r3, [r3, #12]
 1252 0006 5843     		muls	r0, r3
 1253              	.LVL72:
 1254 0008 FFF7FEFF 		bl	CyDelayCycles
 1255              	.LVL73:
 1256              		.loc 1 2585 0
 1257 000c 10BD     		pop	{r4, pc}
 1258              	.L98:
 1259 000e C046     		.align	2
 1260              	.L97:
 1261 0010 00000000 		.word	.LANCHOR0
 1262              		.cfi_endproc
 1263              	.LFE34:
 1264              		.size	CyDelayUs, .-CyDelayUs
 1265              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1266              		.align	1
 1267              		.global	CySysClkEcoStart
 1268              		.code	16
 1269              		.thumb_func
 1270              		.type	CySysClkEcoStart, %function
 1271              	CySysClkEcoStart:
 1272              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1273              		.loc 1 1028 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              	.LVL74:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1278              		.loc 1 1033 0
 1279 0000 0123     		movs	r3, #1
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1280              		.loc 1 1028 0
 1281 0002 70B5     		push	{r4, r5, r6, lr}
 1282              		.cfi_def_cfa_offset 16
 1283              		.cfi_offset 4, -16
 1284              		.cfi_offset 5, -12
 1285              		.cfi_offset 6, -8
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 70


 1286              		.cfi_offset 14, -4
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1287              		.loc 1 1028 0
 1288 0004 0400     		movs	r4, r0
1039:Generated_Source\PSoC4/CyLib.c ****         
 1289              		.loc 1 1039 0
 1290 0006 8020     		movs	r0, #128
 1291              	.LVL75:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1292              		.loc 1 1033 0
 1293 0008 0E49     		ldr	r1, .L106
1039:Generated_Source\PSoC4/CyLib.c ****         
 1294              		.loc 1 1039 0
 1295 000a 0002     		lsls	r0, r0, #8
1033:Generated_Source\PSoC4/CyLib.c **** 
 1296              		.loc 1 1033 0
 1297 000c 0A68     		ldr	r2, [r1]
1143:Generated_Source\PSoC4/CyLib.c **** 
 1298              		.loc 1 1143 0
 1299 000e 1D00     		movs	r5, r3
1033:Generated_Source\PSoC4/CyLib.c **** 
 1300              		.loc 1 1033 0
 1301 0010 1A43     		orrs	r2, r3
 1302 0012 0A60     		str	r2, [r1]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1303              		.loc 1 1036 0
 1304 0014 0C49     		ldr	r1, .L106+4
 1305 0016 0D4A     		ldr	r2, .L106+8
 1306 0018 1160     		str	r1, [r2]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1307              		.loc 1 1039 0
 1308 001a 0D49     		ldr	r1, .L106+12
 1309 001c 0A68     		ldr	r2, [r1]
 1310 001e 0243     		orrs	r2, r0
 1311 0020 0A60     		str	r2, [r1]
1137:Generated_Source\PSoC4/CyLib.c ****         {
 1312              		.loc 1 1137 0
 1313 0022 002C     		cmp	r4, #0
 1314 0024 01D1     		bne	.L104
 1315              	.L102:
1029:Generated_Source\PSoC4/CyLib.c **** 
 1316              		.loc 1 1029 0
 1317 0026 0020     		movs	r0, #0
 1318 0028 0AE0     		b	.L101
 1319              	.L104:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1320              		.loc 1 1143 0
 1321 002a 0120     		movs	r0, #1
 1322 002c FFF7FEFF 		bl	CyDelayUs
 1323              	.LVL76:
 1324              	.LBB14:
 1325              	.LBB15:
1208:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 1326              		.loc 1 1208 0
 1327 0030 084B     		ldr	r3, .L106+16
 1328 0032 1B68     		ldr	r3, [r3]
 1329              	.LBE15:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 71


 1330              	.LBE14:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1331              		.loc 1 1145 0
 1332 0034 2B42     		tst	r3, r5
 1333 0036 F6D1     		bne	.L102
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1334              		.loc 1 1141 0
 1335 0038 013C     		subs	r4, r4, #1
 1336              	.LVL77:
 1337 003a 002C     		cmp	r4, #0
 1338 003c F5D1     		bne	.L104
1139:Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 1139 0
 1340 003e 1020     		movs	r0, #16
 1341              	.L101:
 1342              	.LVL78:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1343              		.loc 1 1155 0
 1344              		@ sp needed
 1345              	.LVL79:
 1346 0040 70BD     		pop	{r4, r5, r6, pc}
 1347              	.L107:
 1348 0042 C046     		.align	2
 1349              	.L106:
 1350 0044 60F02E40 		.word	1076818016
 1351 0048 02200000 		.word	8194
 1352 004c 78002E40 		.word	1076756600
 1353 0050 10002E40 		.word	1076756496
 1354 0054 0C002E40 		.word	1076756492
 1355              		.cfi_endproc
 1356              	.LFE9:
 1357              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1358              		.section	.text.CySysLvdEnable,"ax",%progbits
 1359              		.align	1
 1360              		.global	CySysLvdEnable
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CySysLvdEnable, %function
 1364              	CySysLvdEnable:
 1365              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1366              		.loc 1 2119 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              	.LVL80:
 1371 0000 70B5     		push	{r4, r5, r6, lr}
 1372              		.cfi_def_cfa_offset 16
 1373              		.cfi_offset 4, -16
 1374              		.cfi_offset 5, -12
 1375              		.cfi_offset 6, -8
 1376              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 2121 0
 1378 0002 0225     		movs	r5, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1379              		.loc 1 2124 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 72


 1380 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1381              		.loc 1 2121 0
 1382 0006 0C4C     		ldr	r4, .L109
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1383              		.loc 1 2124 0
 1384 0008 0C4A     		ldr	r2, .L109+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1385              		.loc 1 2121 0
 1386 000a 2368     		ldr	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1387              		.loc 1 2124 0
 1388 000c 4000     		lsls	r0, r0, #1
 1389              	.LVL81:
2121:Generated_Source\PSoC4/CyLib.c **** 
 1390              		.loc 1 2121 0
 1391 000e AB43     		bics	r3, r5
 1392 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1393              		.loc 1 2124 0
 1394 0012 1368     		ldr	r3, [r2]
 1395 0014 0840     		ands	r0, r1
 1396 0016 8B43     		bics	r3, r1
 1397 0018 1843     		orrs	r0, r3
 1398 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1399              		.loc 1 2131 0
 1400 001c FA20     		movs	r0, #250
2128:Generated_Source\PSoC4/CyLib.c **** 
 1401              		.loc 1 2128 0
 1402 001e 1368     		ldr	r3, [r2]
 1403 0020 1D39     		subs	r1, r1, #29
 1404 0022 0B43     		orrs	r3, r1
 1405 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1406              		.loc 1 2131 0
 1407 0026 8000     		lsls	r0, r0, #2
 1408 0028 FFF7FEFF 		bl	CyDelayUs
 1409              	.LVL82:
 1410              	.LBB16:
 1411              	.LBB17:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1412              		.loc 1 2184 0
 1413 002c 044B     		ldr	r3, .L109+8
 1414              	.LBE17:
 1415              	.LBE16:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1416              		.loc 1 2138 0
 1417              		@ sp needed
 1418              	.LBB19:
 1419              	.LBB18:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1420              		.loc 1 2184 0
 1421 002e 1D60     		str	r5, [r3]
 1422              	.LBE18:
 1423              	.LBE19:
2137:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 73


 1424              		.loc 1 2137 0
 1425 0030 2368     		ldr	r3, [r4]
 1426 0032 1D43     		orrs	r5, r3
 1427 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1428              		.loc 1 2138 0
 1429 0036 70BD     		pop	{r4, r5, r6, pc}
 1430              	.L110:
 1431              		.align	2
 1432              	.L109:
 1433 0038 08000B40 		.word	1074462728
 1434 003c 18000B40 		.word	1074462744
 1435 0040 04000B40 		.word	1074462724
 1436              		.cfi_endproc
 1437              	.LFE13:
 1438              		.size	CySysLvdEnable, .-CySysLvdEnable
 1439              		.global	__aeabi_uidiv
 1440              		.section	.text.CyDelayFreq,"ax",%progbits
 1441              		.align	1
 1442              		.global	CyDelayFreq
 1443              		.code	16
 1444              		.thumb_func
 1445              		.type	CyDelayFreq, %function
 1446              	CyDelayFreq:
 1447              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1448              		.loc 1 2597 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              	.LVL83:
 1453 0000 70B5     		push	{r4, r5, r6, lr}
 1454              		.cfi_def_cfa_offset 16
 1455              		.cfi_offset 4, -16
 1456              		.cfi_offset 5, -12
 1457              		.cfi_offset 6, -8
 1458              		.cfi_offset 14, -4
 1459 0002 0C4C     		ldr	r4, .L114
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1460              		.loc 1 2598 0
 1461 0004 0028     		cmp	r0, #0
 1462 0006 01D0     		beq	.L112
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1463              		.loc 1 2600 0
 1464 0008 2061     		str	r0, [r4, #16]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 74


 1465 000a 01E0     		b	.L113
 1466              	.L112:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1467              		.loc 1 2604 0
 1468 000c 0A4B     		ldr	r3, .L114+4
 1469 000e 2361     		str	r3, [r4, #16]
 1470              	.L113:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1471              		.loc 1 2607 0
 1472 0010 2569     		ldr	r5, [r4, #16]
 1473 0012 0A4B     		ldr	r3, .L114+8
 1474 0014 0A49     		ldr	r1, .L114+12
 1475 0016 E818     		adds	r0, r5, r3
 1476              	.LVL84:
 1477 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1478              	.LVL85:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1479              		.loc 1 2608 0
 1480 001c FA21     		movs	r1, #250
 1481 001e 094B     		ldr	r3, .L114+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1482              		.loc 1 2607 0
 1483 0020 2073     		strb	r0, [r4, #12]
 1484              		.loc 1 2608 0
 1485 0022 8900     		lsls	r1, r1, #2
 1486 0024 E818     		adds	r0, r5, r3
 1487 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1488              	.LVL86:
 1489 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1490              		.loc 1 2609 0
 1491 002c C003     		lsls	r0, r0, #15
 1492 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1493              		.loc 1 2610 0
 1494              		@ sp needed
 1495 0030 70BD     		pop	{r4, r5, r6, pc}
 1496              	.L115:
 1497 0032 C046     		.align	2
 1498              	.L114:
 1499 0034 00000000 		.word	.LANCHOR0
 1500 0038 006CDC02 		.word	48000000
 1501 003c 3F420F00 		.word	999999
 1502 0040 40420F00 		.word	1000000
 1503 0044 E7030000 		.word	999
 1504              		.cfi_endproc
 1505              	.LFE35:
 1506              		.size	CyDelayFreq, .-CyDelayFreq
 1507              		.section	.text.CySysTickInit,"ax",%progbits
 1508              		.align	1
 1509              		.global	CySysTickInit
 1510              		.code	16
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 75


 1511              		.thumb_func
 1512              		.type	CySysTickInit, %function
 1513              	CySysTickInit:
 1514              	.LFB37:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1515              		.loc 1 2658 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              	.LVL87:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 76


 1520 0000 10B5     		push	{r4, lr}
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 4, -8
 1523              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1524              		.loc 1 2663 0
 1525 0002 0024     		movs	r4, #0
 1526              	.LBB30:
 1527              	.LBB31:
 1528              	.LBB32:
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 77


2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 78


2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 79


2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1529              		.loc 1 2821 0
 1530 0004 0421     		movs	r1, #4
 1531              	.LBE32:
 1532              	.LBE31:
 1533              	.LBE30:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1534              		.loc 1 2663 0
 1535 0006 0C4B     		ldr	r3, .L117
 1536              	.LBB37:
 1537              	.LBB38:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1538              		.loc 1 2290 0
 1539 0008 0C4A     		ldr	r2, .L117+4
 1540              	.LBE38:
 1541              	.LBE37:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1542              		.loc 1 2663 0
 1543 000a 1C60     		str	r4, [r3]
 1544              	.LVL88:
 1545 000c 1C61     		str	r4, [r3, #16]
 1546 000e 5C60     		str	r4, [r3, #4]
 1547              	.LVL89:
 1548 0010 9C60     		str	r4, [r3, #8]
 1549              	.LVL90:
 1550 0012 DC60     		str	r4, [r3, #12]
 1551              	.LVL91:
 1552              	.LBB41:
 1553              	.LBB39:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1554              		.loc 1 2290 0
 1555 0014 0A4B     		ldr	r3, .L117+8
 1556              	.LVL92:
 1557              	.LBE39:
 1558              	.LBE41:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1559              		.loc 1 2674 0
 1560              		@ sp needed
 1561              	.LBB42:
 1562              	.LBB40:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1563              		.loc 1 2290 0
 1564 0016 1A60     		str	r2, [r3]
 1565              	.LVL93:
 1566              	.LBE40:
 1567              	.LBE42:
 1568              	.LBB43:
 1569              	.LBB35:
 1570              	.LBB33:
 1571              		.loc 1 2821 0
 1572 0018 0A4A     		ldr	r2, .L117+12
 1573 001a 1368     		ldr	r3, [r2]
 1574 001c 0B43     		orrs	r3, r1
 1575              	.LBE33:
 1576              	.LBE35:
 1577              	.LBE43:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 80


 1578              		.loc 1 2672 0
 1579 001e FA21     		movs	r1, #250
 1580              	.LBB44:
 1581              	.LBB36:
 1582              	.LBB34:
 1583              		.loc 1 2821 0
 1584 0020 1360     		str	r3, [r2]
 1585              	.LVL94:
 1586              	.LBE34:
 1587              	.LBE36:
 1588              	.LBE44:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1589              		.loc 1 2672 0
 1590 0022 094B     		ldr	r3, .L117+16
 1591 0024 8900     		lsls	r1, r1, #2
 1592 0026 1869     		ldr	r0, [r3, #16]
 1593 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1594              	.LVL95:
 1595              	.LBB45:
 1596              	.LBB46:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1597              		.loc 1 2755 0
 1598 002c 074B     		ldr	r3, .L117+20
 1599 002e 1860     		str	r0, [r3]
 1600              	.LVL96:
 1601              	.LBE46:
 1602              	.LBE45:
 1603              	.LBB47:
 1604              	.LBB48:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 81


2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1605              		.loc 1 2880 0
 1606 0030 074B     		ldr	r3, .L117+24
 1607 0032 1C60     		str	r4, [r3]
 1608              	.LBE48:
 1609              	.LBE47:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1610              		.loc 1 2674 0
 1611 0034 10BD     		pop	{r4, pc}
 1612              	.L118:
 1613 0036 C046     		.align	2
 1614              	.L117:
 1615 0038 00000000 		.word	.LANCHOR2
 1616 003c 00000000 		.word	CySysTickServiceCallbacks
 1617 0040 3C000020 		.word	536870972
 1618 0044 10E000E0 		.word	-536813552
 1619 0048 00000000 		.word	.LANCHOR0
 1620 004c 14E000E0 		.word	-536813548
 1621 0050 18E000E0 		.word	-536813544
 1622              		.cfi_endproc
 1623              	.LFE37:
 1624              		.size	CySysTickInit, .-CySysTickInit
 1625              		.section	.text.CySysTickStop,"ax",%progbits
 1626              		.align	1
 1627              		.global	CySysTickStop
 1628              		.code	16
 1629              		.thumb_func
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 82


 1630              		.type	CySysTickStop, %function
 1631              	CySysTickStop:
 1632              	.LFB39:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1633              		.loc 1 2705 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 1638              		.loc 1 2706 0
 1639 0000 0121     		movs	r1, #1
 1640 0002 024A     		ldr	r2, .L120
2707:Generated_Source\PSoC4/CyLib.c **** 
 1641              		.loc 1 2707 0
 1642              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 1643              		.loc 1 2706 0
 1644 0004 1368     		ldr	r3, [r2]
 1645 0006 8B43     		bics	r3, r1
 1646 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 1647              		.loc 1 2707 0
 1648 000a 7047     		bx	lr
 1649              	.L121:
 1650              		.align	2
 1651              	.L120:
 1652 000c 10E000E0 		.word	-536813552
 1653              		.cfi_endproc
 1654              	.LFE39:
 1655              		.size	CySysTickStop, .-CySysTickStop
 1656              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1657              		.align	1
 1658              		.global	CySysTickEnableInterrupt
 1659              		.code	16
 1660              		.thumb_func
 1661              		.type	CySysTickEnableInterrupt, %function
 1662              	CySysTickEnableInterrupt:
 1663              	.LFB40:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1664              		.loc 1 2721 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 2722 0
 1670 0000 0221     		movs	r1, #2
 1671 0002 024A     		ldr	r2, .L123
2723:Generated_Source\PSoC4/CyLib.c **** 
 1672              		.loc 1 2723 0
 1673              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 1674              		.loc 1 2722 0
 1675 0004 1368     		ldr	r3, [r2]
 1676 0006 0B43     		orrs	r3, r1
 1677 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 83


2723:Generated_Source\PSoC4/CyLib.c **** 
 1678              		.loc 1 2723 0
 1679 000a 7047     		bx	lr
 1680              	.L124:
 1681              		.align	2
 1682              	.L123:
 1683 000c 10E000E0 		.word	-536813552
 1684              		.cfi_endproc
 1685              	.LFE40:
 1686              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1687              		.section	.text.CySysTickEnable,"ax",%progbits
 1688              		.align	1
 1689              		.global	CySysTickEnable
 1690              		.code	16
 1691              		.thumb_func
 1692              		.type	CySysTickEnable, %function
 1693              	CySysTickEnable:
 1694              	.LFB38:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1695              		.loc 1 2688 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699 0000 10B5     		push	{r4, lr}
 1700              		.cfi_def_cfa_offset 8
 1701              		.cfi_offset 4, -8
 1702              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1703              		.loc 1 2689 0
 1704 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1705              	.LVL97:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1706              		.loc 1 2690 0
 1707 0006 0121     		movs	r1, #1
 1708 0008 024A     		ldr	r2, .L126
2691:Generated_Source\PSoC4/CyLib.c **** 
 1709              		.loc 1 2691 0
 1710              		@ sp needed
2690:Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 2690 0
 1712 000a 1368     		ldr	r3, [r2]
 1713 000c 0B43     		orrs	r3, r1
 1714 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1715              		.loc 1 2691 0
 1716 0010 10BD     		pop	{r4, pc}
 1717              	.L127:
 1718 0012 C046     		.align	2
 1719              	.L126:
 1720 0014 10E000E0 		.word	-536813552
 1721              		.cfi_endproc
 1722              	.LFE38:
 1723              		.size	CySysTickEnable, .-CySysTickEnable
 1724              		.section	.text.CySysTickStart,"ax",%progbits
 1725              		.align	1
 1726              		.global	CySysTickStart
 1727              		.code	16
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 84


 1728              		.thumb_func
 1729              		.type	CySysTickStart, %function
 1730              	CySysTickStart:
 1731              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1732              		.loc 1 2629 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736 0000 10B5     		push	{r4, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 4, -8
 1739              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1740              		.loc 1 2630 0
 1741 0002 054C     		ldr	r4, .L130
 1742 0004 6369     		ldr	r3, [r4, #20]
 1743 0006 002B     		cmp	r3, #0
 1744 0008 03D1     		bne	.L129
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1745              		.loc 1 2632 0
 1746 000a FFF7FEFF 		bl	CySysTickInit
 1747              	.LVL98:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1748              		.loc 1 2633 0
 1749 000e 0123     		movs	r3, #1
 1750 0010 6361     		str	r3, [r4, #20]
 1751              	.L129:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1752              		.loc 1 2636 0
 1753 0012 FFF7FEFF 		bl	CySysTickEnable
 1754              	.LVL99:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1755              		.loc 1 2637 0
 1756              		@ sp needed
 1757 0016 10BD     		pop	{r4, pc}
 1758              	.L131:
 1759              		.align	2
 1760              	.L130:
 1761 0018 00000000 		.word	.LANCHOR2
 1762              		.cfi_endproc
 1763              	.LFE36:
 1764              		.size	CySysTickStart, .-CySysTickStart
 1765              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1766              		.align	1
 1767              		.global	CySysTickDisableInterrupt
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	CySysTickDisableInterrupt, %function
 1771              	CySysTickDisableInterrupt:
 1772              	.LFB41:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1773              		.loc 1 2737 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 85


2738:Generated_Source\PSoC4/CyLib.c **** }
 1778              		.loc 1 2738 0
 1779 0000 0221     		movs	r1, #2
 1780 0002 024A     		ldr	r2, .L133
2739:Generated_Source\PSoC4/CyLib.c **** 
 1781              		.loc 1 2739 0
 1782              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 1783              		.loc 1 2738 0
 1784 0004 1368     		ldr	r3, [r2]
 1785 0006 8B43     		bics	r3, r1
 1786 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 1787              		.loc 1 2739 0
 1788 000a 7047     		bx	lr
 1789              	.L134:
 1790              		.align	2
 1791              	.L133:
 1792 000c 10E000E0 		.word	-536813552
 1793              		.cfi_endproc
 1794              	.LFE41:
 1795              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1796              		.section	.text.CySysTickSetReload,"ax",%progbits
 1797              		.align	1
 1798              		.global	CySysTickSetReload
 1799              		.code	16
 1800              		.thumb_func
 1801              		.type	CySysTickSetReload, %function
 1802              	CySysTickSetReload:
 1803              	.LFB42:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1804              		.loc 1 2754 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 1808              		@ link register save eliminated.
 1809              	.LVL100:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 2755 0
 1811 0000 024B     		ldr	r3, .L136
 1812 0002 0002     		lsls	r0, r0, #8
 1813              	.LVL101:
 1814 0004 000A     		lsrs	r0, r0, #8
 1815 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 1816              		.loc 1 2756 0
 1817              		@ sp needed
 1818 0008 7047     		bx	lr
 1819              	.L137:
 1820 000a C046     		.align	2
 1821              	.L136:
 1822 000c 14E000E0 		.word	-536813548
 1823              		.cfi_endproc
 1824              	.LFE42:
 1825              		.size	CySysTickSetReload, .-CySysTickSetReload
 1826              		.section	.text.CySysTickGetReload,"ax",%progbits
 1827              		.align	1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 86


 1828              		.global	CySysTickGetReload
 1829              		.code	16
 1830              		.thumb_func
 1831              		.type	CySysTickGetReload, %function
 1832              	CySysTickGetReload:
 1833              	.LFB43:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1834              		.loc 1 2770 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 1838              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 1839              		.loc 1 2771 0
 1840 0000 024B     		ldr	r3, .L139
2772:Generated_Source\PSoC4/CyLib.c **** 
 1841              		.loc 1 2772 0
 1842              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 1843              		.loc 1 2771 0
 1844 0002 1868     		ldr	r0, [r3]
 1845 0004 0002     		lsls	r0, r0, #8
 1846 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 1847              		.loc 1 2772 0
 1848 0008 7047     		bx	lr
 1849              	.L140:
 1850 000a C046     		.align	2
 1851              	.L139:
 1852 000c 14E000E0 		.word	-536813548
 1853              		.cfi_endproc
 1854              	.LFE43:
 1855              		.size	CySysTickGetReload, .-CySysTickGetReload
 1856              		.section	.text.CySysTickGetValue,"ax",%progbits
 1857              		.align	1
 1858              		.global	CySysTickGetValue
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	CySysTickGetValue, %function
 1862              	CySysTickGetValue:
 1863              	.LFB44:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1864              		.loc 1 2786 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 1869              		.loc 1 2787 0
 1870 0000 024B     		ldr	r3, .L142
2788:Generated_Source\PSoC4/CyLib.c **** 
 1871              		.loc 1 2788 0
 1872              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 1873              		.loc 1 2787 0
 1874 0002 1868     		ldr	r0, [r3]
 1875 0004 0002     		lsls	r0, r0, #8
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 87


 1876 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 1877              		.loc 1 2788 0
 1878 0008 7047     		bx	lr
 1879              	.L143:
 1880 000a C046     		.align	2
 1881              	.L142:
 1882 000c 18E000E0 		.word	-536813544
 1883              		.cfi_endproc
 1884              	.LFE44:
 1885              		.size	CySysTickGetValue, .-CySysTickGetValue
 1886              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1887              		.align	1
 1888              		.global	CySysTickSetClockSource
 1889              		.code	16
 1890              		.thumb_func
 1891              		.type	CySysTickSetClockSource, %function
 1892              	CySysTickSetClockSource:
 1893              	.LFB45:
2818:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1894              		.loc 1 2818 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
 1899              	.LVL102:
 1900 0000 044B     		ldr	r3, .L148
 1901 0002 0421     		movs	r1, #4
 1902              	.LBB51:
 1903              	.LBB52:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1904              		.loc 1 2821 0
 1905 0004 1A68     		ldr	r2, [r3]
 1906              	.LBE52:
 1907              	.LBE51:
2819:Generated_Source\PSoC4/CyLib.c ****         {
 1908              		.loc 1 2819 0
 1909 0006 0128     		cmp	r0, #1
 1910 0008 01D1     		bne	.L145
 1911              	.LVL103:
 1912              	.LBB54:
 1913              	.LBB53:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1914              		.loc 1 2821 0
 1915 000a 0A43     		orrs	r2, r1
 1916 000c 00E0     		b	.L147
 1917              	.LVL104:
 1918              	.L145:
 1919              	.LBE53:
 1920              	.LBE54:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 1921              		.loc 1 2825 0
 1922 000e 8A43     		bics	r2, r1
 1923              	.L147:
 1924 0010 1A60     		str	r2, [r3]
2827:Generated_Source\PSoC4/CyLib.c **** 
 1925              		.loc 1 2827 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 88


 1926              		@ sp needed
 1927 0012 7047     		bx	lr
 1928              	.L149:
 1929              		.align	2
 1930              	.L148:
 1931 0014 10E000E0 		.word	-536813552
 1932              		.cfi_endproc
 1933              	.LFE45:
 1934              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1935              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1936              		.align	1
 1937              		.global	CySysTickGetClockSource
 1938              		.code	16
 1939              		.thumb_func
 1940              		.type	CySysTickGetClockSource, %function
 1941              	CySysTickGetClockSource:
 1942              	.LFB46:
2843:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1943              		.loc 1 2843 0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 0
 1946              		@ frame_needed = 0, uses_anonymous_args = 0
 1947              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     }
 1948              		.loc 1 2844 0
 1949 0000 024B     		ldr	r3, .L151
2845:Generated_Source\PSoC4/CyLib.c ****     
 1950              		.loc 1 2845 0
 1951              		@ sp needed
2844:Generated_Source\PSoC4/CyLib.c ****     }
 1952              		.loc 1 2844 0
 1953 0002 1868     		ldr	r0, [r3]
 1954 0004 4007     		lsls	r0, r0, #29
 1955 0006 C00F     		lsrs	r0, r0, #31
2845:Generated_Source\PSoC4/CyLib.c ****     
 1956              		.loc 1 2845 0
 1957 0008 7047     		bx	lr
 1958              	.L152:
 1959 000a C046     		.align	2
 1960              	.L151:
 1961 000c 10E000E0 		.word	-536813552
 1962              		.cfi_endproc
 1963              	.LFE46:
 1964              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1965              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1966              		.align	1
 1967              		.global	CySysTickGetCountFlag
 1968              		.code	16
 1969              		.thumb_func
 1970              		.type	CySysTickGetCountFlag, %function
 1971              	CySysTickGetCountFlag:
 1972              	.LFB47:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1973              		.loc 1 2866 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 89


 1977              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 1978              		.loc 1 2867 0
 1979 0000 024B     		ldr	r3, .L154
2868:Generated_Source\PSoC4/CyLib.c **** 
 1980              		.loc 1 2868 0
 1981              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 1982              		.loc 1 2867 0
 1983 0002 1868     		ldr	r0, [r3]
 1984 0004 C003     		lsls	r0, r0, #15
 1985 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 1986              		.loc 1 2868 0
 1987 0008 7047     		bx	lr
 1988              	.L155:
 1989 000a C046     		.align	2
 1990              	.L154:
 1991 000c 10E000E0 		.word	-536813552
 1992              		.cfi_endproc
 1993              	.LFE47:
 1994              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1995              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1996              		.align	1
 1997              		.code	16
 1998              		.thumb_func
 1999              		.type	CySysTickServiceCallbacks, %function
 2000              	CySysTickServiceCallbacks:
 2001              	.LFB51:
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 90


2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2002              		.loc 1 2951 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006 0000 10B5     		push	{r4, lr}
 2007              		.cfi_def_cfa_offset 8
 2008              		.cfi_offset 4, -8
 2009              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2010              		.loc 1 2955 0
 2011 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 91


 2012              	.LVL105:
 2013 0006 0128     		cmp	r0, #1
 2014 0008 08D1     		bne	.L156
 2015 000a 0024     		movs	r4, #0
 2016              	.L159:
 2017              	.LBB57:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2018              		.loc 1 2959 0
 2019 000c 044B     		ldr	r3, .L165
 2020 000e E358     		ldr	r3, [r4, r3]
 2021 0010 002B     		cmp	r3, #0
 2022 0012 00D0     		beq	.L158
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2023              		.loc 1 2961 0
 2024 0014 9847     		blx	r3
 2025              	.LVL106:
 2026              	.L158:
 2027 0016 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2028              		.loc 1 2957 0
 2029 0018 142C     		cmp	r4, #20
 2030 001a F7D1     		bne	.L159
 2031              	.L156:
 2032              	.LBE57:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2033              		.loc 1 2965 0
 2034              		@ sp needed
 2035 001c 10BD     		pop	{r4, pc}
 2036              	.L166:
 2037 001e C046     		.align	2
 2038              	.L165:
 2039 0020 00000000 		.word	.LANCHOR2
 2040              		.cfi_endproc
 2041              	.LFE51:
 2042              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2043              		.section	.text.CySysTickClear,"ax",%progbits
 2044              		.align	1
 2045              		.global	CySysTickClear
 2046              		.code	16
 2047              		.thumb_func
 2048              		.type	CySysTickClear, %function
 2049              	CySysTickClear:
 2050              	.LFB48:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2051              		.loc 1 2879 0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 0
 2054              		@ frame_needed = 0, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 92


 2056              		.loc 1 2880 0
 2057 0000 0022     		movs	r2, #0
 2058 0002 014B     		ldr	r3, .L168
2881:Generated_Source\PSoC4/CyLib.c **** 
 2059              		.loc 1 2881 0
 2060              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 2061              		.loc 1 2880 0
 2062 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 2063              		.loc 1 2881 0
 2064 0006 7047     		bx	lr
 2065              	.L169:
 2066              		.align	2
 2067              	.L168:
 2068 0008 18E000E0 		.word	-536813544
 2069              		.cfi_endproc
 2070              	.LFE48:
 2071              		.size	CySysTickClear, .-CySysTickClear
 2072              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2073              		.align	1
 2074              		.global	CySysTickSetCallback
 2075              		.code	16
 2076              		.thumb_func
 2077              		.type	CySysTickSetCallback, %function
 2078              	CySysTickSetCallback:
 2079              	.LFB49:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2080              		.loc 1 2914 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 0
 2083              		@ frame_needed = 0, uses_anonymous_args = 0
 2084              		@ link register save eliminated.
 2085              	.LVL107:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2086              		.loc 1 2917 0
 2087 0000 024A     		ldr	r2, .L171
 2088 0002 8300     		lsls	r3, r0, #2
 2089 0004 9858     		ldr	r0, [r3, r2]
 2090              	.LVL108:
2920:Generated_Source\PSoC4/CyLib.c **** 
 2091              		.loc 1 2920 0
 2092              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2093              		.loc 1 2918 0
 2094 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2095              		.loc 1 2920 0
 2096 0008 7047     		bx	lr
 2097              	.L172:
 2098 000a C046     		.align	2
 2099              	.L171:
 2100 000c 00000000 		.word	.LANCHOR2
 2101              		.cfi_endproc
 2102              	.LFE49:
 2103              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2104              		.section	.text.CySysTickGetCallback,"ax",%progbits
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 93


 2105              		.align	1
 2106              		.global	CySysTickGetCallback
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickGetCallback, %function
 2110              	CySysTickGetCallback:
 2111              	.LFB50:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2112              		.loc 1 2938 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116              		@ link register save eliminated.
 2117              	.LVL109:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2118              		.loc 1 2939 0
 2119 0000 014B     		ldr	r3, .L174
 2120 0002 8000     		lsls	r0, r0, #2
 2121              	.LVL110:
 2122 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2123              		.loc 1 2940 0
 2124              		@ sp needed
 2125 0006 7047     		bx	lr
 2126              	.L175:
 2127              		.align	2
 2128              	.L174:
 2129 0008 00000000 		.word	.LANCHOR2
 2130              		.cfi_endproc
 2131              	.LFE50:
 2132              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2133              		.section	.text.CyGetUniqueId,"ax",%progbits
 2134              		.align	1
 2135              		.global	CyGetUniqueId
 2136              		.code	16
 2137              		.thumb_func
 2138              		.type	CyGetUniqueId, %function
 2139              	CyGetUniqueId:
 2140              	.LFB52:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 94


 2141              		.loc 1 2983 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
 2146              	.LVL111:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2147              		.loc 1 2985 0
 2148 0000 144B     		ldr	r3, .L177
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2149              		.loc 1 3005 0
 2150              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2151              		.loc 1 2985 0
 2152 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2153              		.loc 1 2986 0
 2154 0004 144B     		ldr	r3, .L177+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2155              		.loc 1 2985 0
 2156 0006 D1B2     		uxtb	r1, r2
 2157 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2158              		.loc 1 2986 0
 2159 000a 1B78     		ldrb	r3, [r3]
 2160 000c 1B02     		lsls	r3, r3, #8
 2161 000e 0B43     		orrs	r3, r1
 2162 0010 1A00     		movs	r2, r3
 2163 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2164              		.loc 1 2987 0
 2165 0014 114B     		ldr	r3, .L177+8
 2166 0016 1B78     		ldrb	r3, [r3]
 2167 0018 1B04     		lsls	r3, r3, #16
 2168 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2169              		.loc 1 2988 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 95


 2170 001c 104A     		ldr	r2, .L177+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2171              		.loc 1 2987 0
 2172 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2173              		.loc 1 2988 0
 2174 0020 1278     		ldrb	r2, [r2]
 2175 0022 1206     		lsls	r2, r2, #24
 2176 0024 1343     		orrs	r3, r2
 2177 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2178              		.loc 1 2990 0
 2179 0028 0E4B     		ldr	r3, .L177+16
 2180 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2181              		.loc 1 2991 0
 2182 002c 0E4B     		ldr	r3, .L177+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2183              		.loc 1 2990 0
 2184 002e D1B2     		uxtb	r1, r2
 2185 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2186              		.loc 1 2991 0
 2187 0032 1B78     		ldrb	r3, [r3]
 2188 0034 1B02     		lsls	r3, r3, #8
 2189 0036 0B43     		orrs	r3, r1
 2190 0038 1A00     		movs	r2, r3
 2191 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2192              		.loc 1 2992 0
 2193 003c 0B4B     		ldr	r3, .L177+24
 2194 003e 1B78     		ldrb	r3, [r3]
 2195 0040 1B04     		lsls	r3, r3, #16
 2196 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2197              		.loc 1 2993 0
 2198 0044 0A4A     		ldr	r2, .L177+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2199              		.loc 1 2992 0
 2200 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2201              		.loc 1 2993 0
 2202 0048 1278     		ldrb	r2, [r2]
 2203 004a 1206     		lsls	r2, r2, #24
 2204 004c 1343     		orrs	r3, r2
 2205 004e 4360     		str	r3, [r0, #4]
 2206              		.loc 1 3005 0
 2207 0050 7047     		bx	lr
 2208              	.L178:
 2209 0052 C046     		.align	2
 2210              	.L177:
 2211 0054 78F1FF0F 		.word	268431736
 2212 0058 79F1FF0F 		.word	268431737
 2213 005c 7AF1FF0F 		.word	268431738
 2214 0060 7BF1FF0F 		.word	268431739
 2215 0064 7CF1FF0F 		.word	268431740
 2216 0068 7DF1FF0F 		.word	268431741
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 96


 2217 006c 7EF1FF0F 		.word	268431742
 2218 0070 7FF1FF0F 		.word	268431743
 2219              		.cfi_endproc
 2220              	.LFE52:
 2221              		.size	CyGetUniqueId, .-CyGetUniqueId
 2222              		.global	CySysClkPumpConfig
 2223              		.global	cyImoFreqMhz2Reg
 2224              		.global	CySysTickInitVar
 2225              		.global	cydelay32kMs
 2226              		.global	cydelayFreqMhz
 2227              		.global	cydelayFreqKhz
 2228              		.global	cydelayFreqHz
 2229              		.section	.rodata
 2230              		.set	.LANCHOR1,. + 0
 2231              		.type	cyImoFreqMhz2Reg, %object
 2232              		.size	cyImoFreqMhz2Reg, 46
 2233              	cyImoFreqMhz2Reg:
 2234 0000 03       		.byte	3
 2235 0001 04       		.byte	4
 2236 0002 05       		.byte	5
 2237 0003 06       		.byte	6
 2238 0004 07       		.byte	7
 2239 0005 08       		.byte	8
 2240 0006 09       		.byte	9
 2241 0007 0A       		.byte	10
 2242 0008 0B       		.byte	11
 2243 0009 0C       		.byte	12
 2244 000a 0E       		.byte	14
 2245 000b 0F       		.byte	15
 2246 000c 10       		.byte	16
 2247 000d 11       		.byte	17
 2248 000e 12       		.byte	18
 2249 000f 13       		.byte	19
 2250 0010 14       		.byte	20
 2251 0011 15       		.byte	21
 2252 0012 16       		.byte	22
 2253 0013 17       		.byte	23
 2254 0014 18       		.byte	24
 2255 0015 19       		.byte	25
 2256 0016 1B       		.byte	27
 2257 0017 1C       		.byte	28
 2258 0018 1D       		.byte	29
 2259 0019 1E       		.byte	30
 2260 001a 1F       		.byte	31
 2261 001b 20       		.byte	32
 2262 001c 21       		.byte	33
 2263 001d 22       		.byte	34
 2264 001e 23       		.byte	35
 2265 001f 25       		.byte	37
 2266 0020 26       		.byte	38
 2267 0021 27       		.byte	39
 2268 0022 28       		.byte	40
 2269 0023 29       		.byte	41
 2270 0024 2A       		.byte	42
 2271 0025 2B       		.byte	43
 2272 0026 2E       		.byte	46
 2273 0027 2F       		.byte	47
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 97


 2274 0028 30       		.byte	48
 2275 0029 31       		.byte	49
 2276 002a 32       		.byte	50
 2277 002b 33       		.byte	51
 2278 002c 34       		.byte	52
 2279 002d 35       		.byte	53
 2280              		.data
 2281              		.align	2
 2282              		.set	.LANCHOR0,. + 0
 2283              		.type	CySysClkPumpConfig, %object
 2284              		.size	CySysClkPumpConfig, 4
 2285              	CySysClkPumpConfig:
 2286 0000 01000000 		.word	1
 2287              		.type	cydelay32kMs, %object
 2288              		.size	cydelay32kMs, 4
 2289              	cydelay32kMs:
 2290 0004 0000C05D 		.word	1572864000
 2291              		.type	cydelayFreqKhz, %object
 2292              		.size	cydelayFreqKhz, 4
 2293              	cydelayFreqKhz:
 2294 0008 80BB0000 		.word	48000
 2295              		.type	cydelayFreqMhz, %object
 2296              		.size	cydelayFreqMhz, 1
 2297              	cydelayFreqMhz:
 2298 000c 30       		.byte	48
 2299 000d 000000   		.space	3
 2300              		.type	cydelayFreqHz, %object
 2301              		.size	cydelayFreqHz, 4
 2302              	cydelayFreqHz:
 2303 0010 006CDC02 		.word	48000000
 2304              		.bss
 2305              		.align	2
 2306              		.set	.LANCHOR2,. + 0
 2307              		.type	CySysTickCallbacks, %object
 2308              		.size	CySysTickCallbacks, 20
 2309              	CySysTickCallbacks:
 2310 0000 00000000 		.space	20
 2310      00000000 
 2310      00000000 
 2310      00000000 
 2310      00000000 
 2311              		.type	CySysTickInitVar, %object
 2312              		.size	CySysTickInitVar, 4
 2313              	CySysTickInitVar:
 2314 0014 00000000 		.space	4
 2315              		.text
 2316              	.Letext0:
 2317              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2318              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2319              		.section	.debug_info,"",%progbits
 2320              	.Ldebug_info0:
 2321 0000 490C0000 		.4byte	0xc49
 2322 0004 0400     		.2byte	0x4
 2323 0006 00000000 		.4byte	.Ldebug_abbrev0
 2324 000a 04       		.byte	0x4
 2325 000b 01       		.uleb128 0x1
 2326 000c A7030000 		.4byte	.LASF112
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 98


 2327 0010 0C       		.byte	0xc
 2328 0011 F0060000 		.4byte	.LASF113
 2329 0015 62050000 		.4byte	.LASF114
 2330 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2331 001d 00000000 		.4byte	0
 2332 0021 00000000 		.4byte	.Ldebug_line0
 2333 0025 02       		.uleb128 0x2
 2334 0026 01       		.byte	0x1
 2335 0027 06       		.byte	0x6
 2336 0028 DB000000 		.4byte	.LASF0
 2337 002c 02       		.uleb128 0x2
 2338 002d 01       		.byte	0x1
 2339 002e 08       		.byte	0x8
 2340 002f 0A050000 		.4byte	.LASF1
 2341 0033 02       		.uleb128 0x2
 2342 0034 02       		.byte	0x2
 2343 0035 05       		.byte	0x5
 2344 0036 1F050000 		.4byte	.LASF2
 2345 003a 02       		.uleb128 0x2
 2346 003b 02       		.byte	0x2
 2347 003c 07       		.byte	0x7
 2348 003d BF020000 		.4byte	.LASF3
 2349 0041 02       		.uleb128 0x2
 2350 0042 04       		.byte	0x4
 2351 0043 05       		.byte	0x5
 2352 0044 1A010000 		.4byte	.LASF4
 2353 0048 02       		.uleb128 0x2
 2354 0049 04       		.byte	0x4
 2355 004a 07       		.byte	0x7
 2356 004b 32020000 		.4byte	.LASF5
 2357 004f 02       		.uleb128 0x2
 2358 0050 08       		.byte	0x8
 2359 0051 05       		.byte	0x5
 2360 0052 CD000000 		.4byte	.LASF6
 2361 0056 02       		.uleb128 0x2
 2362 0057 08       		.byte	0x8
 2363 0058 07       		.byte	0x7
 2364 0059 67000000 		.4byte	.LASF7
 2365 005d 03       		.uleb128 0x3
 2366 005e 04       		.byte	0x4
 2367 005f 05       		.byte	0x5
 2368 0060 696E7400 		.ascii	"int\000"
 2369 0064 02       		.uleb128 0x2
 2370 0065 04       		.byte	0x4
 2371 0066 07       		.byte	0x7
 2372 0067 16020000 		.4byte	.LASF8
 2373 006b 04       		.uleb128 0x4
 2374 006c 3A010000 		.4byte	.LASF9
 2375 0070 02       		.byte	0x2
 2376 0071 D201     		.2byte	0x1d2
 2377 0073 2C000000 		.4byte	0x2c
 2378 0077 04       		.uleb128 0x4
 2379 0078 0F000000 		.4byte	.LASF10
 2380 007c 02       		.byte	0x2
 2381 007d D301     		.2byte	0x1d3
 2382 007f 3A000000 		.4byte	0x3a
 2383 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 99


 2384 0084 7A010000 		.4byte	.LASF11
 2385 0088 02       		.byte	0x2
 2386 0089 D401     		.2byte	0x1d4
 2387 008b 48000000 		.4byte	0x48
 2388 008f 02       		.uleb128 0x2
 2389 0090 04       		.byte	0x4
 2390 0091 04       		.byte	0x4
 2391 0092 8D040000 		.4byte	.LASF12
 2392 0096 02       		.uleb128 0x2
 2393 0097 08       		.byte	0x8
 2394 0098 04       		.byte	0x4
 2395 0099 56010000 		.4byte	.LASF13
 2396 009d 02       		.uleb128 0x2
 2397 009e 01       		.byte	0x1
 2398 009f 08       		.byte	0x8
 2399 00a0 CF050000 		.4byte	.LASF14
 2400 00a4 04       		.uleb128 0x4
 2401 00a5 D6060000 		.4byte	.LASF15
 2402 00a9 02       		.byte	0x2
 2403 00aa 7402     		.2byte	0x274
 2404 00ac 48000000 		.4byte	0x48
 2405 00b0 04       		.uleb128 0x4
 2406 00b1 F4040000 		.4byte	.LASF16
 2407 00b5 02       		.byte	0x2
 2408 00b6 7C02     		.2byte	0x27c
 2409 00b8 BC000000 		.4byte	0xbc
 2410 00bc 05       		.uleb128 0x5
 2411 00bd 6B000000 		.4byte	0x6b
 2412 00c1 04       		.uleb128 0x4
 2413 00c2 45030000 		.4byte	.LASF17
 2414 00c6 02       		.byte	0x2
 2415 00c7 7E02     		.2byte	0x27e
 2416 00c9 CD000000 		.4byte	0xcd
 2417 00cd 05       		.uleb128 0x5
 2418 00ce 83000000 		.4byte	0x83
 2419 00d2 04       		.uleb128 0x4
 2420 00d3 D4050000 		.4byte	.LASF18
 2421 00d7 02       		.byte	0x2
 2422 00d8 8E02     		.2byte	0x28e
 2423 00da DE000000 		.4byte	0xde
 2424 00de 06       		.uleb128 0x6
 2425 00df 04       		.byte	0x4
 2426 00e0 E4000000 		.4byte	0xe4
 2427 00e4 07       		.uleb128 0x7
 2428 00e5 02       		.uleb128 0x2
 2429 00e6 08       		.byte	0x8
 2430 00e7 04       		.byte	0x4
 2431 00e8 93030000 		.4byte	.LASF19
 2432 00ec 02       		.uleb128 0x2
 2433 00ed 04       		.byte	0x4
 2434 00ee 07       		.byte	0x7
 2435 00ef 67030000 		.4byte	.LASF20
 2436 00f3 08       		.uleb128 0x8
 2437 00f4 B8040000 		.4byte	.LASF21
 2438 00f8 03       		.byte	0x3
 2439 00f9 F5       		.byte	0xf5
 2440 00fa DE000000 		.4byte	0xde
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 100


 2441 00fe 09       		.uleb128 0x9
 2442 00ff 81010000 		.4byte	.LASF29
 2443 0103 01       		.byte	0x1
 2444 0104 B304     		.2byte	0x4b3
 2445 0106 83000000 		.4byte	0x83
 2446 010a 01       		.byte	0x1
 2447 010b 1C010000 		.4byte	0x11c
 2448 010f 0A       		.uleb128 0xa
 2449 0110 36070000 		.4byte	.LASF22
 2450 0114 01       		.byte	0x1
 2451 0115 B504     		.2byte	0x4b5
 2452 0117 83000000 		.4byte	0x83
 2453 011b 00       		.byte	0
 2454 011c 0B       		.uleb128 0xb
 2455 011d 63010000 		.4byte	.LASF23
 2456 0121 01       		.byte	0x1
 2457 0122 8608     		.2byte	0x886
 2458 0124 01       		.byte	0x1
 2459 0125 0C       		.uleb128 0xc
 2460 0126 D2020000 		.4byte	.LASF25
 2461 012a 01       		.byte	0x1
 2462 012b 010B     		.2byte	0xb01
 2463 012d 01       		.byte	0x1
 2464 012e 3F010000 		.4byte	0x13f
 2465 0132 0D       		.uleb128 0xd
 2466 0133 E6010000 		.4byte	.LASF27
 2467 0137 01       		.byte	0x1
 2468 0138 010B     		.2byte	0xb01
 2469 013a 83000000 		.4byte	0x83
 2470 013e 00       		.byte	0
 2471 013f 0E       		.uleb128 0xe
 2472 0140 B5050000 		.4byte	.LASF115
 2473 0144 01       		.byte	0x1
 2474 0145 860B     		.2byte	0xb86
 2475 0147 01       		.byte	0x1
 2476 0148 57010000 		.4byte	0x157
 2477 014c 0F       		.uleb128 0xf
 2478 014d 6900     		.ascii	"i\000"
 2479 014f 01       		.byte	0x1
 2480 0150 880B     		.2byte	0xb88
 2481 0152 83000000 		.4byte	0x83
 2482 0156 00       		.byte	0
 2483 0157 0B       		.uleb128 0xb
 2484 0158 23020000 		.4byte	.LASF24
 2485 015c 01       		.byte	0x1
 2486 015d 3E0B     		.2byte	0xb3e
 2487 015f 01       		.byte	0x1
 2488 0160 0C       		.uleb128 0xc
 2489 0161 23070000 		.4byte	.LASF26
 2490 0165 01       		.byte	0x1
 2491 0166 C10A     		.2byte	0xac1
 2492 0168 01       		.byte	0x1
 2493 0169 7A010000 		.4byte	0x17a
 2494 016d 0D       		.uleb128 0xd
 2495 016e E0010000 		.4byte	.LASF28
 2496 0172 01       		.byte	0x1
 2497 0173 C10A     		.2byte	0xac1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 101


 2498 0175 83000000 		.4byte	0x83
 2499 0179 00       		.byte	0
 2500 017a 09       		.uleb128 0x9
 2501 017b 1E030000 		.4byte	.LASF30
 2502 017f 01       		.byte	0x1
 2503 0180 E708     		.2byte	0x8e7
 2504 0182 D2000000 		.4byte	0xd2
 2505 0186 01       		.byte	0x1
 2506 0187 BC010000 		.4byte	0x1bc
 2507 018b 0D       		.uleb128 0xd
 2508 018c F9020000 		.4byte	.LASF31
 2509 0190 01       		.byte	0x1
 2510 0191 E708     		.2byte	0x8e7
 2511 0193 6B000000 		.4byte	0x6b
 2512 0197 0D       		.uleb128 0xd
 2513 0198 9F030000 		.4byte	.LASF32
 2514 019c 01       		.byte	0x1
 2515 019d E708     		.2byte	0x8e7
 2516 019f D2000000 		.4byte	0xd2
 2517 01a3 0A       		.uleb128 0xa
 2518 01a4 4B000000 		.4byte	.LASF33
 2519 01a8 01       		.byte	0x1
 2520 01a9 E908     		.2byte	0x8e9
 2521 01ab D2000000 		.4byte	0xd2
 2522 01af 0A       		.uleb128 0xa
 2523 01b0 00000000 		.4byte	.LASF34
 2524 01b4 01       		.byte	0x1
 2525 01b5 EA08     		.2byte	0x8ea
 2526 01b7 BC010000 		.4byte	0x1bc
 2527 01bb 00       		.byte	0
 2528 01bc 06       		.uleb128 0x6
 2529 01bd 04       		.byte	0x4
 2530 01be D2000000 		.4byte	0xd2
 2531 01c2 10       		.uleb128 0x10
 2532 01c3 DF060000 		.4byte	.LASF35
 2533 01c7 01       		.byte	0x1
 2534 01c8 6B       		.byte	0x6b
 2535 01c9 00000000 		.4byte	.LFB2
 2536 01cd 14000000 		.4byte	.LFE2-.LFB2
 2537 01d1 01       		.uleb128 0x1
 2538 01d2 9C       		.byte	0x9c
 2539 01d3 10       		.uleb128 0x10
 2540 01d4 5F020000 		.4byte	.LASF36
 2541 01d8 01       		.byte	0x1
 2542 01d9 8B       		.byte	0x8b
 2543 01da 00000000 		.4byte	.LFB3
 2544 01de 10000000 		.4byte	.LFE3-.LFB3
 2545 01e2 01       		.uleb128 0x1
 2546 01e3 9C       		.byte	0x9c
 2547 01e4 11       		.uleb128 0x11
 2548 01e5 1F000000 		.4byte	.LASF39
 2549 01e9 01       		.byte	0x1
 2550 01ea AD01     		.2byte	0x1ad
 2551 01ec 00000000 		.4byte	.LFB4
 2552 01f0 20000000 		.4byte	.LFE4-.LFB4
 2553 01f4 01       		.uleb128 0x1
 2554 01f5 9C       		.byte	0x9c
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 102


 2555 01f6 3D020000 		.4byte	0x23d
 2556 01fa 12       		.uleb128 0x12
 2557 01fb 47050000 		.4byte	.LASF41
 2558 01ff 01       		.byte	0x1
 2559 0200 AD01     		.2byte	0x1ad
 2560 0202 83000000 		.4byte	0x83
 2561 0206 00000000 		.4byte	.LLST0
 2562 020a 13       		.uleb128 0x13
 2563 020b F8000000 		.4byte	.LASF37
 2564 020f 01       		.byte	0x1
 2565 0210 AF01     		.2byte	0x1af
 2566 0212 6B000000 		.4byte	0x6b
 2567 0216 2C000000 		.4byte	.LLST1
 2568 021a 13       		.uleb128 0x13
 2569 021b 1C070000 		.4byte	.LASF38
 2570 021f 01       		.byte	0x1
 2571 0220 B001     		.2byte	0x1b0
 2572 0222 83000000 		.4byte	0x83
 2573 0226 3F000000 		.4byte	.LLST2
 2574 022a 14       		.uleb128 0x14
 2575 022b 08000000 		.4byte	.LVL1
 2576 022f 2B0C0000 		.4byte	0xc2b
 2577 0233 14       		.uleb128 0x14
 2578 0234 1A000000 		.4byte	.LVL4
 2579 0238 360C0000 		.4byte	0xc36
 2580 023c 00       		.byte	0
 2581 023d 11       		.uleb128 0x11
 2582 023e 30030000 		.4byte	.LASF40
 2583 0242 01       		.byte	0x1
 2584 0243 D901     		.2byte	0x1d9
 2585 0245 00000000 		.4byte	.LFB5
 2586 0249 34000000 		.4byte	.LFE5-.LFB5
 2587 024d 01       		.uleb128 0x1
 2588 024e 9C       		.byte	0x9c
 2589 024f 62020000 		.4byte	0x262
 2590 0253 15       		.uleb128 0x15
 2591 0254 4F010000 		.4byte	.LASF42
 2592 0258 01       		.byte	0x1
 2593 0259 D901     		.2byte	0x1d9
 2594 025b 83000000 		.4byte	0x83
 2595 025f 01       		.uleb128 0x1
 2596 0260 50       		.byte	0x50
 2597 0261 00       		.byte	0
 2598 0262 16       		.uleb128 0x16
 2599 0263 9C010000 		.4byte	.LASF53
 2600 0267 01       		.byte	0x1
 2601 0268 FE01     		.2byte	0x1fe
 2602 026a 83000000 		.4byte	0x83
 2603 026e 00000000 		.4byte	.LFB6
 2604 0272 18000000 		.4byte	.LFE6-.LFB6
 2605 0276 01       		.uleb128 0x1
 2606 0277 9C       		.byte	0x9c
 2607 0278 AF020000 		.4byte	0x2af
 2608 027c 13       		.uleb128 0x13
 2609 027d F8000000 		.4byte	.LASF37
 2610 0281 01       		.byte	0x1
 2611 0282 0002     		.2byte	0x200
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 103


 2612 0284 6B000000 		.4byte	0x6b
 2613 0288 5D000000 		.4byte	.LLST3
 2614 028c 13       		.uleb128 0x13
 2615 028d 35040000 		.4byte	.LASF43
 2616 0291 01       		.byte	0x1
 2617 0292 0102     		.2byte	0x201
 2618 0294 83000000 		.4byte	0x83
 2619 0298 70000000 		.4byte	.LLST4
 2620 029c 14       		.uleb128 0x14
 2621 029d 06000000 		.4byte	.LVL7
 2622 02a1 2B0C0000 		.4byte	0xc2b
 2623 02a5 14       		.uleb128 0x14
 2624 02a6 0E000000 		.4byte	.LVL9
 2625 02aa 360C0000 		.4byte	0xc36
 2626 02ae 00       		.byte	0
 2627 02af 11       		.uleb128 0x11
 2628 02b0 F1050000 		.4byte	.LASF44
 2629 02b4 01       		.byte	0x1
 2630 02b5 3502     		.2byte	0x235
 2631 02b7 00000000 		.4byte	.LFB7
 2632 02bb 2C000000 		.4byte	.LFE7-.LFB7
 2633 02bf 01       		.uleb128 0x1
 2634 02c0 9C       		.byte	0x9c
 2635 02c1 F8020000 		.4byte	0x2f8
 2636 02c5 12       		.uleb128 0x12
 2637 02c6 BA060000 		.4byte	.LASF45
 2638 02ca 01       		.byte	0x1
 2639 02cb 3502     		.2byte	0x235
 2640 02cd 83000000 		.4byte	0x83
 2641 02d1 92000000 		.4byte	.LLST5
 2642 02d5 13       		.uleb128 0x13
 2643 02d6 F8000000 		.4byte	.LASF37
 2644 02da 01       		.byte	0x1
 2645 02db 3702     		.2byte	0x237
 2646 02dd 6B000000 		.4byte	0x6b
 2647 02e1 BE000000 		.4byte	.LLST6
 2648 02e5 14       		.uleb128 0x14
 2649 02e6 08000000 		.4byte	.LVL12
 2650 02ea 2B0C0000 		.4byte	0xc2b
 2651 02ee 14       		.uleb128 0x14
 2652 02ef 22000000 		.4byte	.LVL14
 2653 02f3 360C0000 		.4byte	0xc36
 2654 02f7 00       		.byte	0
 2655 02f8 11       		.uleb128 0x11
 2656 02f9 09030000 		.4byte	.LASF46
 2657 02fd 01       		.byte	0x1
 2658 02fe 6F02     		.2byte	0x26f
 2659 0300 00000000 		.4byte	.LFB8
 2660 0304 64000000 		.4byte	.LFE8-.LFB8
 2661 0308 01       		.uleb128 0x1
 2662 0309 9C       		.byte	0x9c
 2663 030a 5F030000 		.4byte	0x35f
 2664 030e 12       		.uleb128 0x12
 2665 030f E7000000 		.4byte	.LASF47
 2666 0313 01       		.byte	0x1
 2667 0314 6F02     		.2byte	0x26f
 2668 0316 83000000 		.4byte	0x83
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 104


 2669 031a D1000000 		.4byte	.LLST7
 2670 031e 17       		.uleb128 0x17
 2671 031f 7E000000 		.4byte	.LASF48
 2672 0323 01       		.byte	0x1
 2673 0324 7202     		.2byte	0x272
 2674 0326 6F030000 		.4byte	0x36f
 2675 032a 02       		.uleb128 0x2
 2676 032b 91       		.byte	0x91
 2677 032c 60       		.sleb128 -32
 2678 032d 17       		.uleb128 0x17
 2679 032e 30010000 		.4byte	.LASF49
 2680 0332 01       		.byte	0x1
 2681 0333 7302     		.2byte	0x273
 2682 0335 84030000 		.4byte	0x384
 2683 0339 02       		.uleb128 0x2
 2684 033a 91       		.byte	0x91
 2685 033b 68       		.sleb128 -24
 2686 033c 13       		.uleb128 0x13
 2687 033d F8000000 		.4byte	.LASF37
 2688 0341 01       		.byte	0x1
 2689 0342 8402     		.2byte	0x284
 2690 0344 6B000000 		.4byte	0x6b
 2691 0348 FD000000 		.4byte	.LLST8
 2692 034c 14       		.uleb128 0x14
 2693 034d 0A000000 		.4byte	.LVL16
 2694 0351 2B0C0000 		.4byte	0xc2b
 2695 0355 14       		.uleb128 0x14
 2696 0356 40000000 		.4byte	.LVL18
 2697 035a 360C0000 		.4byte	0xc36
 2698 035e 00       		.byte	0
 2699 035f 18       		.uleb128 0x18
 2700 0360 CD000000 		.4byte	0xcd
 2701 0364 6F030000 		.4byte	0x36f
 2702 0368 19       		.uleb128 0x19
 2703 0369 EC000000 		.4byte	0xec
 2704 036d 01       		.byte	0x1
 2705 036e 00       		.byte	0
 2706 036f 05       		.uleb128 0x5
 2707 0370 5F030000 		.4byte	0x35f
 2708 0374 18       		.uleb128 0x18
 2709 0375 CD000000 		.4byte	0xcd
 2710 0379 84030000 		.4byte	0x384
 2711 037d 19       		.uleb128 0x19
 2712 037e EC000000 		.4byte	0xec
 2713 0382 03       		.byte	0x3
 2714 0383 00       		.byte	0
 2715 0384 05       		.uleb128 0x5
 2716 0385 74030000 		.4byte	0x374
 2717 0389 1A       		.uleb128 0x1a
 2718 038a 92060000 		.4byte	.LASF50
 2719 038e 01       		.byte	0x1
 2720 038f 9104     		.2byte	0x491
 2721 0391 00000000 		.4byte	.LFB10
 2722 0395 24000000 		.4byte	.LFE10-.LFB10
 2723 0399 01       		.uleb128 0x1
 2724 039a 9C       		.byte	0x9c
 2725 039b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 105


 2726 039c FE000000 		.4byte	0xfe
 2727 03a0 00000000 		.4byte	.LFB11
 2728 03a4 10000000 		.4byte	.LFE11-.LFB11
 2729 03a8 01       		.uleb128 0x1
 2730 03a9 9C       		.byte	0x9c
 2731 03aa B8030000 		.4byte	0x3b8
 2732 03ae 1C       		.uleb128 0x1c
 2733 03af 0F010000 		.4byte	0x10f
 2734 03b3 10010000 		.4byte	.LLST9
 2735 03b7 00       		.byte	0
 2736 03b8 11       		.uleb128 0x11
 2737 03b9 C2060000 		.4byte	.LASF51
 2738 03bd 01       		.byte	0x1
 2739 03be E204     		.2byte	0x4e2
 2740 03c0 00000000 		.4byte	.LFB12
 2741 03c4 30000000 		.4byte	.LFE12-.LFB12
 2742 03c8 01       		.uleb128 0x1
 2743 03c9 9C       		.byte	0x9c
 2744 03ca 01040000 		.4byte	0x401
 2745 03ce 12       		.uleb128 0x12
 2746 03cf BA060000 		.4byte	.LASF45
 2747 03d3 01       		.byte	0x1
 2748 03d4 E204     		.2byte	0x4e2
 2749 03d6 83000000 		.4byte	0x83
 2750 03da 32010000 		.4byte	.LLST10
 2751 03de 13       		.uleb128 0x13
 2752 03df F8000000 		.4byte	.LASF37
 2753 03e3 01       		.byte	0x1
 2754 03e4 E404     		.2byte	0x4e4
 2755 03e6 6B000000 		.4byte	0x6b
 2756 03ea 5E010000 		.4byte	.LLST11
 2757 03ee 14       		.uleb128 0x14
 2758 03ef 14000000 		.4byte	.LVL22
 2759 03f3 2B0C0000 		.4byte	0xc2b
 2760 03f7 14       		.uleb128 0x14
 2761 03f8 26000000 		.4byte	.LVL24
 2762 03fc 360C0000 		.4byte	0xc36
 2763 0400 00       		.byte	0
 2764 0401 1A       		.uleb128 0x1a
 2765 0402 73060000 		.4byte	.LASF52
 2766 0406 01       		.byte	0x1
 2767 0407 6408     		.2byte	0x864
 2768 0409 00000000 		.4byte	.LFB14
 2769 040d 20000000 		.4byte	.LFE14-.LFB14
 2770 0411 01       		.uleb128 0x1
 2771 0412 9C       		.byte	0x9c
 2772 0413 1D       		.uleb128 0x1d
 2773 0414 44020000 		.4byte	.LASF90
 2774 0418 01       		.byte	0x1
 2775 0419 7608     		.2byte	0x876
 2776 041b 83000000 		.4byte	0x83
 2777 041f 00000000 		.4byte	.LFB15
 2778 0423 10000000 		.4byte	.LFE15-.LFB15
 2779 0427 01       		.uleb128 0x1
 2780 0428 9C       		.byte	0x9c
 2781 0429 1E       		.uleb128 0x1e
 2782 042a 1C010000 		.4byte	0x11c
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 106


 2783 042e 00000000 		.4byte	.LFB16
 2784 0432 0C000000 		.4byte	.LFE16-.LFB16
 2785 0436 01       		.uleb128 0x1
 2786 0437 9C       		.byte	0x9c
 2787 0438 16       		.uleb128 0x16
 2788 0439 AB020000 		.4byte	.LASF54
 2789 043d 01       		.byte	0x1
 2790 043e A008     		.2byte	0x8a0
 2791 0440 83000000 		.4byte	0x83
 2792 0444 00000000 		.4byte	.LFB17
 2793 0448 14000000 		.4byte	.LFE17-.LFB17
 2794 044c 01       		.uleb128 0x1
 2795 044d 9C       		.byte	0x9c
 2796 044e 73040000 		.4byte	0x473
 2797 0452 12       		.uleb128 0x12
 2798 0453 18050000 		.4byte	.LASF55
 2799 0457 01       		.byte	0x1
 2800 0458 A008     		.2byte	0x8a0
 2801 045a 83000000 		.4byte	0x83
 2802 045e 71010000 		.4byte	.LLST12
 2803 0462 13       		.uleb128 0x13
 2804 0463 5A030000 		.4byte	.LASF56
 2805 0467 01       		.byte	0x1
 2806 0468 A208     		.2byte	0x8a2
 2807 046a 83000000 		.4byte	0x83
 2808 046e 8F010000 		.4byte	.LLST13
 2809 0472 00       		.byte	0
 2810 0473 16       		.uleb128 0x16
 2811 0474 59000000 		.4byte	.LASF57
 2812 0478 01       		.byte	0x1
 2813 0479 B708     		.2byte	0x8b7
 2814 047b 83000000 		.4byte	0x83
 2815 047f 00000000 		.4byte	.LFB18
 2816 0483 10000000 		.4byte	.LFE18-.LFB18
 2817 0487 01       		.uleb128 0x1
 2818 0488 9C       		.byte	0x9c
 2819 0489 9C040000 		.4byte	0x49c
 2820 048d 17       		.uleb128 0x17
 2821 048e 16000000 		.4byte	.LASF58
 2822 0492 01       		.byte	0x1
 2823 0493 B908     		.2byte	0x8b9
 2824 0495 83000000 		.4byte	0x83
 2825 0499 01       		.uleb128 0x1
 2826 049a 50       		.byte	0x50
 2827 049b 00       		.byte	0
 2828 049c 11       		.uleb128 0x11
 2829 049d 89000000 		.4byte	.LASF59
 2830 04a1 01       		.byte	0x1
 2831 04a2 CE08     		.2byte	0x8ce
 2832 04a4 00000000 		.4byte	.LFB19
 2833 04a8 0C000000 		.4byte	.LFE19-.LFB19
 2834 04ac 01       		.uleb128 0x1
 2835 04ad 9C       		.byte	0x9c
 2836 04ae C1040000 		.4byte	0x4c1
 2837 04b2 15       		.uleb128 0x15
 2838 04b3 97010000 		.4byte	.LASF60
 2839 04b7 01       		.byte	0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 107


 2840 04b8 CE08     		.2byte	0x8ce
 2841 04ba 83000000 		.4byte	0x83
 2842 04be 01       		.uleb128 0x1
 2843 04bf 50       		.byte	0x50
 2844 04c0 00       		.byte	0
 2845 04c1 1B       		.uleb128 0x1b
 2846 04c2 7A010000 		.4byte	0x17a
 2847 04c6 00000000 		.4byte	.LFB20
 2848 04ca 0E000000 		.4byte	.LFE20-.LFB20
 2849 04ce 01       		.uleb128 0x1
 2850 04cf 9C       		.byte	0x9c
 2851 04d0 F5040000 		.4byte	0x4f5
 2852 04d4 1F       		.uleb128 0x1f
 2853 04d5 8B010000 		.4byte	0x18b
 2854 04d9 B1010000 		.4byte	.LLST14
 2855 04dd 20       		.uleb128 0x20
 2856 04de 97010000 		.4byte	0x197
 2857 04e2 01       		.uleb128 0x1
 2858 04e3 51       		.byte	0x51
 2859 04e4 21       		.uleb128 0x21
 2860 04e5 A3010000 		.4byte	0x1a3
 2861 04e9 01       		.uleb128 0x1
 2862 04ea 50       		.byte	0x50
 2863 04eb 22       		.uleb128 0x22
 2864 04ec AF010000 		.4byte	0x1af
 2865 04f0 00000020 		.4byte	0x20000000
 2866 04f4 00       		.byte	0
 2867 04f5 16       		.uleb128 0x16
 2868 04f6 35050000 		.4byte	.LASF61
 2869 04fa 01       		.byte	0x1
 2870 04fb 0909     		.2byte	0x909
 2871 04fd D2000000 		.4byte	0xd2
 2872 0501 00000000 		.4byte	.LFB21
 2873 0505 0C000000 		.4byte	.LFE21-.LFB21
 2874 0509 01       		.uleb128 0x1
 2875 050a 9C       		.byte	0x9c
 2876 050b 30050000 		.4byte	0x530
 2877 050f 12       		.uleb128 0x12
 2878 0510 F9020000 		.4byte	.LASF31
 2879 0514 01       		.byte	0x1
 2880 0515 0909     		.2byte	0x909
 2881 0517 6B000000 		.4byte	0x6b
 2882 051b D2010000 		.4byte	.LLST15
 2883 051f 23       		.uleb128 0x23
 2884 0520 00000000 		.4byte	.LASF34
 2885 0524 01       		.byte	0x1
 2886 0525 0B09     		.2byte	0x90b
 2887 0527 BC010000 		.4byte	0x1bc
 2888 052b 00000020 		.4byte	0x20000000
 2889 052f 00       		.byte	0
 2890 0530 16       		.uleb128 0x16
 2891 0531 EA020000 		.4byte	.LASF62
 2892 0535 01       		.byte	0x1
 2893 0536 1F09     		.2byte	0x91f
 2894 0538 D2000000 		.4byte	0xd2
 2895 053c 00000000 		.4byte	.LFB22
 2896 0540 10000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 108


 2897 0544 01       		.uleb128 0x1
 2898 0545 9C       		.byte	0x9c
 2899 0546 87050000 		.4byte	0x587
 2900 054a 12       		.uleb128 0x12
 2901 054b F9020000 		.4byte	.LASF31
 2902 054f 01       		.byte	0x1
 2903 0550 1F09     		.2byte	0x91f
 2904 0552 6B000000 		.4byte	0x6b
 2905 0556 F3010000 		.4byte	.LLST16
 2906 055a 15       		.uleb128 0x15
 2907 055b 9F030000 		.4byte	.LASF32
 2908 055f 01       		.byte	0x1
 2909 0560 1F09     		.2byte	0x91f
 2910 0562 D2000000 		.4byte	0xd2
 2911 0566 01       		.uleb128 0x1
 2912 0567 51       		.byte	0x51
 2913 0568 17       		.uleb128 0x17
 2914 0569 4B000000 		.4byte	.LASF33
 2915 056d 01       		.byte	0x1
 2916 056e 2109     		.2byte	0x921
 2917 0570 D2000000 		.4byte	0xd2
 2918 0574 01       		.uleb128 0x1
 2919 0575 50       		.byte	0x50
 2920 0576 23       		.uleb128 0x23
 2921 0577 00000000 		.4byte	.LASF34
 2922 057b 01       		.byte	0x1
 2923 057c 2209     		.2byte	0x922
 2924 057e BC010000 		.4byte	0x1bc
 2925 0582 00000020 		.4byte	0x20000000
 2926 0586 00       		.byte	0
 2927 0587 16       		.uleb128 0x16
 2928 0588 CA040000 		.4byte	.LASF63
 2929 058c 01       		.byte	0x1
 2930 058d 3B09     		.2byte	0x93b
 2931 058f D2000000 		.4byte	0xd2
 2932 0593 00000000 		.4byte	.LFB23
 2933 0597 10000000 		.4byte	.LFE23-.LFB23
 2934 059b 01       		.uleb128 0x1
 2935 059c 9C       		.byte	0x9c
 2936 059d C2050000 		.4byte	0x5c2
 2937 05a1 12       		.uleb128 0x12
 2938 05a2 F9020000 		.4byte	.LASF31
 2939 05a6 01       		.byte	0x1
 2940 05a7 3B09     		.2byte	0x93b
 2941 05a9 6B000000 		.4byte	0x6b
 2942 05ad 14020000 		.4byte	.LLST17
 2943 05b1 23       		.uleb128 0x23
 2944 05b2 00000000 		.4byte	.LASF34
 2945 05b6 01       		.byte	0x1
 2946 05b7 3D09     		.2byte	0x93d
 2947 05b9 BC010000 		.4byte	0x1bc
 2948 05bd 00000020 		.4byte	0x20000000
 2949 05c1 00       		.byte	0
 2950 05c2 11       		.uleb128 0x11
 2951 05c3 7C040000 		.4byte	.LASF64
 2952 05c7 01       		.byte	0x1
 2953 05c8 4E09     		.2byte	0x94e
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 109


 2954 05ca 00000000 		.4byte	.LFB24
 2955 05ce 34000000 		.4byte	.LFE24-.LFB24
 2956 05d2 01       		.uleb128 0x1
 2957 05d3 9C       		.byte	0x9c
 2958 05d4 3B060000 		.4byte	0x63b
 2959 05d8 12       		.uleb128 0x12
 2960 05d9 F9020000 		.4byte	.LASF31
 2961 05dd 01       		.byte	0x1
 2962 05de 4E09     		.2byte	0x94e
 2963 05e0 6B000000 		.4byte	0x6b
 2964 05e4 35020000 		.4byte	.LLST18
 2965 05e8 12       		.uleb128 0x12
 2966 05e9 00030000 		.4byte	.LASF65
 2967 05ed 01       		.byte	0x1
 2968 05ee 4E09     		.2byte	0x94e
 2969 05f0 6B000000 		.4byte	0x6b
 2970 05f4 56020000 		.4byte	.LLST19
 2971 05f8 13       		.uleb128 0x13
 2972 05f9 F8000000 		.4byte	.LASF37
 2973 05fd 01       		.byte	0x1
 2974 05fe 5009     		.2byte	0x950
 2975 0600 6B000000 		.4byte	0x6b
 2976 0604 77020000 		.4byte	.LLST20
 2977 0608 13       		.uleb128 0x13
 2978 0609 5D010000 		.4byte	.LASF66
 2979 060d 01       		.byte	0x1
 2980 060e 5109     		.2byte	0x951
 2981 0610 83000000 		.4byte	0x83
 2982 0614 8A020000 		.4byte	.LLST21
 2983 0618 13       		.uleb128 0x13
 2984 0619 E0010000 		.4byte	.LASF28
 2985 061d 01       		.byte	0x1
 2986 061e 5209     		.2byte	0x952
 2987 0620 83000000 		.4byte	0x83
 2988 0624 9D020000 		.4byte	.LLST22
 2989 0628 14       		.uleb128 0x14
 2990 0629 18000000 		.4byte	.LVL43
 2991 062d 2B0C0000 		.4byte	0xc2b
 2992 0631 14       		.uleb128 0x14
 2993 0632 2C000000 		.4byte	.LVL47
 2994 0636 360C0000 		.4byte	0xc36
 2995 063a 00       		.byte	0
 2996 063b 16       		.uleb128 0x16
 2997 063c B4010000 		.4byte	.LASF67
 2998 0640 01       		.byte	0x1
 2999 0641 7009     		.2byte	0x970
 3000 0643 6B000000 		.4byte	0x6b
 3001 0647 00000000 		.4byte	.LFB25
 3002 064b 20000000 		.4byte	.LFE25-.LFB25
 3003 064f 01       		.uleb128 0x1
 3004 0650 9C       		.byte	0x9c
 3005 0651 76060000 		.4byte	0x676
 3006 0655 12       		.uleb128 0x12
 3007 0656 F9020000 		.4byte	.LASF31
 3008 065a 01       		.byte	0x1
 3009 065b 7009     		.2byte	0x970
 3010 065d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 110


 3011 0661 BB020000 		.4byte	.LLST23
 3012 0665 13       		.uleb128 0x13
 3013 0666 00030000 		.4byte	.LASF65
 3014 066a 01       		.byte	0x1
 3015 066b 7209     		.2byte	0x972
 3016 066d 6B000000 		.4byte	0x6b
 3017 0671 DC020000 		.4byte	.LLST24
 3018 0675 00       		.byte	0
 3019 0676 11       		.uleb128 0x11
 3020 0677 29050000 		.4byte	.LASF68
 3021 067b 01       		.byte	0x1
 3022 067c 8509     		.2byte	0x985
 3023 067e 00000000 		.4byte	.LFB26
 3024 0682 14000000 		.4byte	.LFE26-.LFB26
 3025 0686 01       		.uleb128 0x1
 3026 0687 9C       		.byte	0x9c
 3027 0688 9D060000 		.4byte	0x69d
 3028 068c 12       		.uleb128 0x12
 3029 068d F9020000 		.4byte	.LASF31
 3030 0691 01       		.byte	0x1
 3031 0692 8509     		.2byte	0x985
 3032 0694 6B000000 		.4byte	0x6b
 3033 0698 FD020000 		.4byte	.LLST25
 3034 069c 00       		.byte	0
 3035 069d 16       		.uleb128 0x16
 3036 069e BF000000 		.4byte	.LASF69
 3037 06a2 01       		.byte	0x1
 3038 06a3 9709     		.2byte	0x997
 3039 06a5 6B000000 		.4byte	0x6b
 3040 06a9 00000000 		.4byte	.LFB27
 3041 06ad 18000000 		.4byte	.LFE27-.LFB27
 3042 06b1 01       		.uleb128 0x1
 3043 06b2 9C       		.byte	0x9c
 3044 06b3 C8060000 		.4byte	0x6c8
 3045 06b7 12       		.uleb128 0x12
 3046 06b8 F9020000 		.4byte	.LASF31
 3047 06bc 01       		.byte	0x1
 3048 06bd 9709     		.2byte	0x997
 3049 06bf 6B000000 		.4byte	0x6b
 3050 06c3 1E030000 		.4byte	.LLST26
 3051 06c7 00       		.byte	0
 3052 06c8 11       		.uleb128 0x11
 3053 06c9 23010000 		.4byte	.LASF70
 3054 06cd 01       		.byte	0x1
 3055 06ce A709     		.2byte	0x9a7
 3056 06d0 00000000 		.4byte	.LFB28
 3057 06d4 14000000 		.4byte	.LFE28-.LFB28
 3058 06d8 01       		.uleb128 0x1
 3059 06d9 9C       		.byte	0x9c
 3060 06da EF060000 		.4byte	0x6ef
 3061 06de 12       		.uleb128 0x12
 3062 06df F9020000 		.4byte	.LASF31
 3063 06e3 01       		.byte	0x1
 3064 06e4 A709     		.2byte	0x9a7
 3065 06e6 6B000000 		.4byte	0x6b
 3066 06ea 3F030000 		.4byte	.LLST27
 3067 06ee 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 111


 3068 06ef 11       		.uleb128 0x11
 3069 06f0 86020000 		.4byte	.LASF71
 3070 06f4 01       		.byte	0x1
 3071 06f5 B509     		.2byte	0x9b5
 3072 06f7 00000000 		.4byte	.LFB29
 3073 06fb 14000000 		.4byte	.LFE29-.LFB29
 3074 06ff 01       		.uleb128 0x1
 3075 0700 9C       		.byte	0x9c
 3076 0701 16070000 		.4byte	0x716
 3077 0705 12       		.uleb128 0x12
 3078 0706 F9020000 		.4byte	.LASF31
 3079 070a 01       		.byte	0x1
 3080 070b B509     		.2byte	0x9b5
 3081 070d 6B000000 		.4byte	0x6b
 3082 0711 60030000 		.4byte	.LLST28
 3083 0715 00       		.byte	0
 3084 0716 11       		.uleb128 0x11
 3085 0717 81030000 		.4byte	.LASF72
 3086 071b 01       		.byte	0x1
 3087 071c C409     		.2byte	0x9c4
 3088 071e 00000000 		.4byte	.LFB30
 3089 0722 14000000 		.4byte	.LFE30-.LFB30
 3090 0726 01       		.uleb128 0x1
 3091 0727 9C       		.byte	0x9c
 3092 0728 3D070000 		.4byte	0x73d
 3093 072c 12       		.uleb128 0x12
 3094 072d F9020000 		.4byte	.LASF31
 3095 0731 01       		.byte	0x1
 3096 0732 C409     		.2byte	0x9c4
 3097 0734 6B000000 		.4byte	0x6b
 3098 0738 81030000 		.4byte	.LLST29
 3099 073c 00       		.byte	0
 3100 073d 11       		.uleb128 0x11
 3101 073e 03050000 		.4byte	.LASF73
 3102 0742 01       		.byte	0x1
 3103 0743 D309     		.2byte	0x9d3
 3104 0745 00000000 		.4byte	.LFB31
 3105 0749 04000000 		.4byte	.LFE31-.LFB31
 3106 074d 01       		.uleb128 0x1
 3107 074e 9C       		.byte	0x9c
 3108 074f 62070000 		.4byte	0x762
 3109 0753 15       		.uleb128 0x15
 3110 0754 18050000 		.4byte	.LASF55
 3111 0758 01       		.byte	0x1
 3112 0759 D309     		.2byte	0x9d3
 3113 075b 6B000000 		.4byte	0x6b
 3114 075f 01       		.uleb128 0x1
 3115 0760 50       		.byte	0x50
 3116 0761 00       		.byte	0
 3117 0762 1A       		.uleb128 0x1a
 3118 0763 96000000 		.4byte	.LASF74
 3119 0767 01       		.byte	0x1
 3120 0768 EB09     		.2byte	0x9eb
 3121 076a 00000000 		.4byte	.LFB32
 3122 076e 18000000 		.4byte	.LFE32-.LFB32
 3123 0772 01       		.uleb128 0x1
 3124 0773 9C       		.byte	0x9c
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 112


 3125 0774 11       		.uleb128 0x11
 3126 0775 39060000 		.4byte	.LASF75
 3127 0779 01       		.byte	0x1
 3128 077a FF09     		.2byte	0x9ff
 3129 077c 00000000 		.4byte	.LFB33
 3130 0780 2C000000 		.4byte	.LFE33-.LFB33
 3131 0784 01       		.uleb128 0x1
 3132 0785 9C       		.byte	0x9c
 3133 0786 AD070000 		.4byte	0x7ad
 3134 078a 12       		.uleb128 0x12
 3135 078b D9040000 		.4byte	.LASF76
 3136 078f 01       		.byte	0x1
 3137 0790 FF09     		.2byte	0x9ff
 3138 0792 83000000 		.4byte	0x83
 3139 0796 A2030000 		.4byte	.LLST30
 3140 079a 14       		.uleb128 0x14
 3141 079b 14000000 		.4byte	.LVL67
 3142 079f 410C0000 		.4byte	0xc41
 3143 07a3 14       		.uleb128 0x14
 3144 07a4 22000000 		.4byte	.LVL69
 3145 07a8 410C0000 		.4byte	0xc41
 3146 07ac 00       		.byte	0
 3147 07ad 11       		.uleb128 0x11
 3148 07ae AB050000 		.4byte	.LASF77
 3149 07b2 01       		.byte	0x1
 3150 07b3 160A     		.2byte	0xa16
 3151 07b5 00000000 		.4byte	.LFB34
 3152 07b9 14000000 		.4byte	.LFE34-.LFB34
 3153 07bd 01       		.uleb128 0x1
 3154 07be 9C       		.byte	0x9c
 3155 07bf DD070000 		.4byte	0x7dd
 3156 07c3 12       		.uleb128 0x12
 3157 07c4 0F070000 		.4byte	.LASF78
 3158 07c8 01       		.byte	0x1
 3159 07c9 160A     		.2byte	0xa16
 3160 07cb 77000000 		.4byte	0x77
 3161 07cf C0030000 		.4byte	.LLST31
 3162 07d3 14       		.uleb128 0x14
 3163 07d4 0C000000 		.4byte	.LVL73
 3164 07d8 410C0000 		.4byte	0xc41
 3165 07dc 00       		.byte	0
 3166 07dd 16       		.uleb128 0x16
 3167 07de 51050000 		.4byte	.LASF79
 3168 07e2 01       		.byte	0x1
 3169 07e3 0304     		.2byte	0x403
 3170 07e5 A4000000 		.4byte	0xa4
 3171 07e9 00000000 		.4byte	.LFB9
 3172 07ed 58000000 		.4byte	.LFE9-.LFB9
 3173 07f1 01       		.uleb128 0x1
 3174 07f2 9C       		.byte	0x9c
 3175 07f3 4C080000 		.4byte	0x84c
 3176 07f7 12       		.uleb128 0x12
 3177 07f8 B0060000 		.4byte	.LASF80
 3178 07fc 01       		.byte	0x1
 3179 07fd 0304     		.2byte	0x403
 3180 07ff 83000000 		.4byte	0x83
 3181 0803 E1030000 		.4byte	.LLST32
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 113


 3182 0807 13       		.uleb128 0x13
 3183 0808 5A030000 		.4byte	.LASF56
 3184 080c 01       		.byte	0x1
 3185 080d 0504     		.2byte	0x405
 3186 080f A4000000 		.4byte	0xa4
 3187 0813 FF030000 		.4byte	.LLST33
 3188 0817 24       		.uleb128 0x24
 3189 0818 FE000000 		.4byte	0xfe
 3190 081c 30000000 		.4byte	.LBB14
 3191 0820 04000000 		.4byte	.LBE14-.LBB14
 3192 0824 01       		.byte	0x1
 3193 0825 7904     		.2byte	0x479
 3194 0827 3B080000 		.4byte	0x83b
 3195 082b 25       		.uleb128 0x25
 3196 082c 30000000 		.4byte	.LBB15
 3197 0830 04000000 		.4byte	.LBE15-.LBB15
 3198 0834 26       		.uleb128 0x26
 3199 0835 0F010000 		.4byte	0x10f
 3200 0839 00       		.byte	0
 3201 083a 00       		.byte	0
 3202 083b 27       		.uleb128 0x27
 3203 083c 30000000 		.4byte	.LVL76
 3204 0840 AD070000 		.4byte	0x7ad
 3205 0844 28       		.uleb128 0x28
 3206 0845 01       		.uleb128 0x1
 3207 0846 50       		.byte	0x50
 3208 0847 02       		.uleb128 0x2
 3209 0848 75       		.byte	0x75
 3210 0849 00       		.sleb128 0
 3211 084a 00       		.byte	0
 3212 084b 00       		.byte	0
 3213 084c 11       		.uleb128 0x11
 3214 084d A9040000 		.4byte	.LASF81
 3215 0851 01       		.byte	0x1
 3216 0852 4608     		.2byte	0x846
 3217 0854 00000000 		.4byte	.LFB13
 3218 0858 44000000 		.4byte	.LFE13-.LFB13
 3219 085c 01       		.uleb128 0x1
 3220 085d 9C       		.byte	0x9c
 3221 085e 94080000 		.4byte	0x894
 3222 0862 12       		.uleb128 0x12
 3223 0863 F9040000 		.4byte	.LASF82
 3224 0867 01       		.byte	0x1
 3225 0868 4608     		.2byte	0x846
 3226 086a 83000000 		.4byte	0x83
 3227 086e 1E040000 		.4byte	.LLST34
 3228 0872 29       		.uleb128 0x29
 3229 0873 1C010000 		.4byte	0x11c
 3230 0877 2C000000 		.4byte	.LBB16
 3231 087b 00000000 		.4byte	.Ldebug_ranges0+0
 3232 087f 01       		.byte	0x1
 3233 0880 5608     		.2byte	0x856
 3234 0882 27       		.uleb128 0x27
 3235 0883 2C000000 		.4byte	.LVL82
 3236 0887 AD070000 		.4byte	0x7ad
 3237 088b 28       		.uleb128 0x28
 3238 088c 01       		.uleb128 0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 114


 3239 088d 50       		.byte	0x50
 3240 088e 03       		.uleb128 0x3
 3241 088f 0A       		.byte	0xa
 3242 0890 E803     		.2byte	0x3e8
 3243 0892 00       		.byte	0
 3244 0893 00       		.byte	0
 3245 0894 2A       		.uleb128 0x2a
 3246 0895 EC000000 		.4byte	.LASF83
 3247 0899 01       		.byte	0x1
 3248 089a 240A     		.2byte	0xa24
 3249 089c 00000000 		.4byte	.LFB35
 3250 08a0 48000000 		.4byte	.LFE35-.LFB35
 3251 08a4 01       		.uleb128 0x1
 3252 08a5 9C       		.byte	0x9c
 3253 08a6 BB080000 		.4byte	0x8bb
 3254 08aa 12       		.uleb128 0x12
 3255 08ab E7000000 		.4byte	.LASF47
 3256 08af 01       		.byte	0x1
 3257 08b0 240A     		.2byte	0xa24
 3258 08b2 83000000 		.4byte	0x83
 3259 08b6 3F040000 		.4byte	.LLST35
 3260 08ba 00       		.byte	0
 3261 08bb 2A       		.uleb128 0x2a
 3262 08bc D2010000 		.4byte	.LASF84
 3263 08c0 01       		.byte	0x1
 3264 08c1 610A     		.2byte	0xa61
 3265 08c3 00000000 		.4byte	.LFB37
 3266 08c7 54000000 		.4byte	.LFE37-.LFB37
 3267 08cb 01       		.uleb128 0x1
 3268 08cc 9C       		.byte	0x9c
 3269 08cd 7A090000 		.4byte	0x97a
 3270 08d1 2B       		.uleb128 0x2b
 3271 08d2 6900     		.ascii	"i\000"
 3272 08d4 01       		.byte	0x1
 3273 08d5 630A     		.2byte	0xa63
 3274 08d7 83000000 		.4byte	0x83
 3275 08db 60040000 		.4byte	.LLST36
 3276 08df 2C       		.uleb128 0x2c
 3277 08e0 25010000 		.4byte	0x125
 3278 08e4 04000000 		.4byte	.LBB30
 3279 08e8 18000000 		.4byte	.Ldebug_ranges0+0x18
 3280 08ec 01       		.byte	0x1
 3281 08ed 6D0A     		.2byte	0xa6d
 3282 08ef 0C090000 		.4byte	0x90c
 3283 08f3 1F       		.uleb128 0x1f
 3284 08f4 32010000 		.4byte	0x132
 3285 08f8 A4040000 		.4byte	.LLST37
 3286 08fc 2D       		.uleb128 0x2d
 3287 08fd 18000000 		.4byte	.Ldebug_ranges0+0x18
 3288 0901 1F       		.uleb128 0x1f
 3289 0902 32010000 		.4byte	0x132
 3290 0906 A4040000 		.4byte	.LLST37
 3291 090a 00       		.byte	0
 3292 090b 00       		.byte	0
 3293 090c 2C       		.uleb128 0x2c
 3294 090d 7A010000 		.4byte	0x17a
 3295 0911 08000000 		.4byte	.LBB37
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 115


 3296 0915 38000000 		.4byte	.Ldebug_ranges0+0x38
 3297 0919 01       		.byte	0x1
 3298 091a 6A0A     		.2byte	0xa6a
 3299 091c 4B090000 		.4byte	0x94b
 3300 0920 1F       		.uleb128 0x1f
 3301 0921 97010000 		.4byte	0x197
 3302 0925 B8040000 		.4byte	.LLST39
 3303 0929 1F       		.uleb128 0x1f
 3304 092a 8B010000 		.4byte	0x18b
 3305 092e D0040000 		.4byte	.LLST40
 3306 0932 2D       		.uleb128 0x2d
 3307 0933 38000000 		.4byte	.Ldebug_ranges0+0x38
 3308 0937 1C       		.uleb128 0x1c
 3309 0938 A3010000 		.4byte	0x1a3
 3310 093c E4040000 		.4byte	.LLST41
 3311 0940 22       		.uleb128 0x22
 3312 0941 AF010000 		.4byte	0x1af
 3313 0945 00000020 		.4byte	0x20000000
 3314 0949 00       		.byte	0
 3315 094a 00       		.byte	0
 3316 094b 24       		.uleb128 0x24
 3317 094c 60010000 		.4byte	0x160
 3318 0950 2C000000 		.4byte	.LBB45
 3319 0954 04000000 		.4byte	.LBE45-.LBB45
 3320 0958 01       		.byte	0x1
 3321 0959 700A     		.2byte	0xa70
 3322 095b 69090000 		.4byte	0x969
 3323 095f 1F       		.uleb128 0x1f
 3324 0960 6D010000 		.4byte	0x16d
 3325 0964 07050000 		.4byte	.LLST42
 3326 0968 00       		.byte	0
 3327 0969 2E       		.uleb128 0x2e
 3328 096a 57010000 		.4byte	0x157
 3329 096e 30000000 		.4byte	.LBB47
 3330 0972 04000000 		.4byte	.LBE47-.LBB47
 3331 0976 01       		.byte	0x1
 3332 0977 710A     		.2byte	0xa71
 3333 0979 00       		.byte	0
 3334 097a 1A       		.uleb128 0x1a
 3335 097b A2060000 		.4byte	.LASF85
 3336 097f 01       		.byte	0x1
 3337 0980 900A     		.2byte	0xa90
 3338 0982 00000000 		.4byte	.LFB39
 3339 0986 10000000 		.4byte	.LFE39-.LFB39
 3340 098a 01       		.uleb128 0x1
 3341 098b 9C       		.byte	0x9c
 3342 098c 1A       		.uleb128 0x1a
 3343 098d A6000000 		.4byte	.LASF86
 3344 0991 01       		.byte	0x1
 3345 0992 A00A     		.2byte	0xaa0
 3346 0994 00000000 		.4byte	.LFB40
 3347 0998 10000000 		.4byte	.LFE40-.LFB40
 3348 099c 01       		.uleb128 0x1
 3349 099d 9C       		.byte	0x9c
 3350 099e 11       		.uleb128 0x11
 3351 099f E1050000 		.4byte	.LASF87
 3352 09a3 01       		.byte	0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 116


 3353 09a4 7F0A     		.2byte	0xa7f
 3354 09a6 00000000 		.4byte	.LFB38
 3355 09aa 18000000 		.4byte	.LFE38-.LFB38
 3356 09ae 01       		.uleb128 0x1
 3357 09af 9C       		.byte	0x9c
 3358 09b0 BE090000 		.4byte	0x9be
 3359 09b4 14       		.uleb128 0x14
 3360 09b5 06000000 		.4byte	.LVL97
 3361 09b9 8C090000 		.4byte	0x98c
 3362 09bd 00       		.byte	0
 3363 09be 11       		.uleb128 0x11
 3364 09bf 4B030000 		.4byte	.LASF88
 3365 09c3 01       		.byte	0x1
 3366 09c4 440A     		.2byte	0xa44
 3367 09c6 00000000 		.4byte	.LFB36
 3368 09ca 1C000000 		.4byte	.LFE36-.LFB36
 3369 09ce 01       		.uleb128 0x1
 3370 09cf 9C       		.byte	0x9c
 3371 09d0 E7090000 		.4byte	0x9e7
 3372 09d4 14       		.uleb128 0x14
 3373 09d5 0E000000 		.4byte	.LVL98
 3374 09d9 BB080000 		.4byte	0x8bb
 3375 09dd 14       		.uleb128 0x14
 3376 09de 16000000 		.4byte	.LVL99
 3377 09e2 9E090000 		.4byte	0x99e
 3378 09e6 00       		.byte	0
 3379 09e7 1A       		.uleb128 0x1a
 3380 09e8 59060000 		.4byte	.LASF89
 3381 09ec 01       		.byte	0x1
 3382 09ed B00A     		.2byte	0xab0
 3383 09ef 00000000 		.4byte	.LFB41
 3384 09f3 10000000 		.4byte	.LFE41-.LFB41
 3385 09f7 01       		.uleb128 0x1
 3386 09f8 9C       		.byte	0x9c
 3387 09f9 1B       		.uleb128 0x1b
 3388 09fa 60010000 		.4byte	0x160
 3389 09fe 00000000 		.4byte	.LFB42
 3390 0a02 10000000 		.4byte	.LFE42-.LFB42
 3391 0a06 01       		.uleb128 0x1
 3392 0a07 9C       		.byte	0x9c
 3393 0a08 160A0000 		.4byte	0xa16
 3394 0a0c 1F       		.uleb128 0x1f
 3395 0a0d 6D010000 		.4byte	0x16d
 3396 0a11 1A050000 		.4byte	.LLST43
 3397 0a15 00       		.byte	0
 3398 0a16 1D       		.uleb128 0x1d
 3399 0a17 07010000 		.4byte	.LASF91
 3400 0a1b 01       		.byte	0x1
 3401 0a1c D10A     		.2byte	0xad1
 3402 0a1e 83000000 		.4byte	0x83
 3403 0a22 00000000 		.4byte	.LFB43
 3404 0a26 10000000 		.4byte	.LFE43-.LFB43
 3405 0a2a 01       		.uleb128 0x1
 3406 0a2b 9C       		.byte	0x9c
 3407 0a2c 1D       		.uleb128 0x1d
 3408 0a2d 5C040000 		.4byte	.LASF92
 3409 0a31 01       		.byte	0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 117


 3410 0a32 E10A     		.2byte	0xae1
 3411 0a34 83000000 		.4byte	0x83
 3412 0a38 00000000 		.4byte	.LFB44
 3413 0a3c 10000000 		.4byte	.LFE44-.LFB44
 3414 0a40 01       		.uleb128 0x1
 3415 0a41 9C       		.byte	0x9c
 3416 0a42 1B       		.uleb128 0x1b
 3417 0a43 25010000 		.4byte	0x125
 3418 0a47 00000000 		.4byte	.LFB45
 3419 0a4b 18000000 		.4byte	.LFE45-.LFB45
 3420 0a4f 01       		.uleb128 0x1
 3421 0a50 9C       		.byte	0x9c
 3422 0a51 6C0A0000 		.4byte	0xa6c
 3423 0a55 20       		.uleb128 0x20
 3424 0a56 32010000 		.4byte	0x132
 3425 0a5a 01       		.uleb128 0x1
 3426 0a5b 50       		.byte	0x50
 3427 0a5c 2D       		.uleb128 0x2d
 3428 0a5d 58000000 		.4byte	.Ldebug_ranges0+0x58
 3429 0a61 1F       		.uleb128 0x1f
 3430 0a62 32010000 		.4byte	0x132
 3431 0a66 3B050000 		.4byte	.LLST44
 3432 0a6a 00       		.byte	0
 3433 0a6b 00       		.byte	0
 3434 0a6c 1D       		.uleb128 0x1d
 3435 0a6d 41060000 		.4byte	.LASF93
 3436 0a71 01       		.byte	0x1
 3437 0a72 1A0B     		.2byte	0xb1a
 3438 0a74 83000000 		.4byte	0x83
 3439 0a78 00000000 		.4byte	.LFB46
 3440 0a7c 10000000 		.4byte	.LFE46-.LFB46
 3441 0a80 01       		.uleb128 0x1
 3442 0a81 9C       		.byte	0x9c
 3443 0a82 1D       		.uleb128 0x1d
 3444 0a83 00020000 		.4byte	.LASF94
 3445 0a87 01       		.byte	0x1
 3446 0a88 310B     		.2byte	0xb31
 3447 0a8a 83000000 		.4byte	0x83
 3448 0a8e 00000000 		.4byte	.LFB47
 3449 0a92 10000000 		.4byte	.LFE47-.LFB47
 3450 0a96 01       		.uleb128 0x1
 3451 0a97 9C       		.byte	0x9c
 3452 0a98 2F       		.uleb128 0x2f
 3453 0a99 3F010000 		.4byte	0x13f
 3454 0a9d 00000000 		.4byte	.LFB51
 3455 0aa1 24000000 		.4byte	.LFE51-.LFB51
 3456 0aa5 01       		.uleb128 0x1
 3457 0aa6 9C       		.byte	0x9c
 3458 0aa7 CD0A0000 		.4byte	0xacd
 3459 0aab 26       		.uleb128 0x26
 3460 0aac 4C010000 		.4byte	0x14c
 3461 0ab0 30       		.uleb128 0x30
 3462 0ab1 0C000000 		.4byte	.LBB57
 3463 0ab5 10000000 		.4byte	.LBE57-.LBB57
 3464 0ab9 C30A0000 		.4byte	0xac3
 3465 0abd 26       		.uleb128 0x26
 3466 0abe 4C010000 		.4byte	0x14c
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 118


 3467 0ac2 00       		.byte	0
 3468 0ac3 14       		.uleb128 0x14
 3469 0ac4 06000000 		.4byte	.LVL105
 3470 0ac8 820A0000 		.4byte	0xa82
 3471 0acc 00       		.byte	0
 3472 0acd 1E       		.uleb128 0x1e
 3473 0ace 57010000 		.4byte	0x157
 3474 0ad2 00000000 		.4byte	.LFB48
 3475 0ad6 0C000000 		.4byte	.LFE48-.LFB48
 3476 0ada 01       		.uleb128 0x1
 3477 0adb 9C       		.byte	0x9c
 3478 0adc 16       		.uleb128 0x16
 3479 0add 08060000 		.4byte	.LASF95
 3480 0ae1 01       		.byte	0x1
 3481 0ae2 610B     		.2byte	0xb61
 3482 0ae4 F3000000 		.4byte	0xf3
 3483 0ae8 00000000 		.4byte	.LFB49
 3484 0aec 10000000 		.4byte	.LFE49-.LFB49
 3485 0af0 01       		.uleb128 0x1
 3486 0af1 9C       		.byte	0x9c
 3487 0af2 230B0000 		.4byte	0xb23
 3488 0af6 12       		.uleb128 0x12
 3489 0af7 F9020000 		.4byte	.LASF31
 3490 0afb 01       		.byte	0x1
 3491 0afc 610B     		.2byte	0xb61
 3492 0afe 83000000 		.4byte	0x83
 3493 0b02 4F050000 		.4byte	.LLST45
 3494 0b06 15       		.uleb128 0x15
 3495 0b07 42040000 		.4byte	.LASF96
 3496 0b0b 01       		.byte	0x1
 3497 0b0c 610B     		.2byte	0xb61
 3498 0b0e F3000000 		.4byte	0xf3
 3499 0b12 01       		.uleb128 0x1
 3500 0b13 51       		.byte	0x51
 3501 0b14 17       		.uleb128 0x17
 3502 0b15 52000000 		.4byte	.LASF97
 3503 0b19 01       		.byte	0x1
 3504 0b1a 630B     		.2byte	0xb63
 3505 0b1c F3000000 		.4byte	0xf3
 3506 0b20 01       		.uleb128 0x1
 3507 0b21 50       		.byte	0x50
 3508 0b22 00       		.byte	0
 3509 0b23 16       		.uleb128 0x16
 3510 0b24 96020000 		.4byte	.LASF98
 3511 0b28 01       		.byte	0x1
 3512 0b29 790B     		.2byte	0xb79
 3513 0b2b F3000000 		.4byte	0xf3
 3514 0b2f 00000000 		.4byte	.LFB50
 3515 0b33 0C000000 		.4byte	.LFE50-.LFB50
 3516 0b37 01       		.uleb128 0x1
 3517 0b38 9C       		.byte	0x9c
 3518 0b39 4E0B0000 		.4byte	0xb4e
 3519 0b3d 12       		.uleb128 0x12
 3520 0b3e F9020000 		.4byte	.LASF31
 3521 0b42 01       		.byte	0x1
 3522 0b43 790B     		.2byte	0xb79
 3523 0b45 83000000 		.4byte	0x83
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 119


 3524 0b49 70050000 		.4byte	.LLST46
 3525 0b4d 00       		.byte	0
 3526 0b4e 11       		.uleb128 0x11
 3527 0b4f F2010000 		.4byte	.LASF99
 3528 0b53 01       		.byte	0x1
 3529 0b54 A60B     		.2byte	0xba6
 3530 0b56 00000000 		.4byte	.LFB52
 3531 0b5a 74000000 		.4byte	.LFE52-.LFB52
 3532 0b5e 01       		.uleb128 0x1
 3533 0b5f 9C       		.byte	0x9c
 3534 0b60 730B0000 		.4byte	0xb73
 3535 0b64 15       		.uleb128 0x15
 3536 0b65 30060000 		.4byte	.LASF100
 3537 0b69 01       		.byte	0x1
 3538 0b6a A60B     		.2byte	0xba6
 3539 0b6c 730B0000 		.4byte	0xb73
 3540 0b70 01       		.uleb128 0x1
 3541 0b71 50       		.byte	0x50
 3542 0b72 00       		.byte	0
 3543 0b73 06       		.uleb128 0x6
 3544 0b74 04       		.byte	0x4
 3545 0b75 83000000 		.4byte	0x83
 3546 0b79 18       		.uleb128 0x18
 3547 0b7a F3000000 		.4byte	0xf3
 3548 0b7e 890B0000 		.4byte	0xb89
 3549 0b82 19       		.uleb128 0x19
 3550 0b83 EC000000 		.4byte	0xec
 3551 0b87 04       		.byte	0x4
 3552 0b88 00       		.byte	0
 3553 0b89 31       		.uleb128 0x31
 3554 0b8a 1D060000 		.4byte	.LASF101
 3555 0b8e 01       		.byte	0x1
 3556 0b8f 22       		.byte	0x22
 3557 0b90 790B0000 		.4byte	0xb79
 3558 0b94 05       		.uleb128 0x5
 3559 0b95 03       		.byte	0x3
 3560 0b96 00000000 		.4byte	CySysTickCallbacks
 3561 0b9a 32       		.uleb128 0x32
 3562 0b9b 6E040000 		.4byte	.LASF102
 3563 0b9f 01       		.byte	0x1
 3564 0ba0 1B       		.byte	0x1b
 3565 0ba1 83000000 		.4byte	0x83
 3566 0ba5 05       		.uleb128 0x5
 3567 0ba6 03       		.byte	0x3
 3568 0ba7 00000000 		.4byte	cydelayFreqHz
 3569 0bab 32       		.uleb128 0x32
 3570 0bac 40010000 		.4byte	.LASF103
 3571 0bb0 01       		.byte	0x1
 3572 0bb1 1C       		.byte	0x1c
 3573 0bb2 83000000 		.4byte	0x83
 3574 0bb6 05       		.uleb128 0x5
 3575 0bb7 03       		.byte	0x3
 3576 0bb8 00000000 		.4byte	cydelayFreqKhz
 3577 0bbc 32       		.uleb128 0x32
 3578 0bbd 83060000 		.4byte	.LASF104
 3579 0bc1 01       		.byte	0x1
 3580 0bc2 1D       		.byte	0x1d
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 120


 3581 0bc3 6B000000 		.4byte	0x6b
 3582 0bc7 05       		.uleb128 0x5
 3583 0bc8 03       		.byte	0x3
 3584 0bc9 00000000 		.4byte	cydelayFreqMhz
 3585 0bcd 32       		.uleb128 0x32
 3586 0bce C5010000 		.4byte	.LASF105
 3587 0bd2 01       		.byte	0x1
 3588 0bd3 1E       		.byte	0x1e
 3589 0bd4 83000000 		.4byte	0x83
 3590 0bd8 05       		.uleb128 0x5
 3591 0bd9 03       		.byte	0x3
 3592 0bda 00000000 		.4byte	cydelay32kMs
 3593 0bde 32       		.uleb128 0x32
 3594 0bdf 70030000 		.4byte	.LASF106
 3595 0be3 01       		.byte	0x1
 3596 0be4 36       		.byte	0x36
 3597 0be5 83000000 		.4byte	0x83
 3598 0be9 05       		.uleb128 0x5
 3599 0bea 03       		.byte	0x3
 3600 0beb 00000000 		.4byte	CySysTickInitVar
 3601 0bef 18       		.uleb128 0x18
 3602 0bf0 FF0B0000 		.4byte	0xbff
 3603 0bf4 FF0B0000 		.4byte	0xbff
 3604 0bf8 19       		.uleb128 0x19
 3605 0bf9 EC000000 		.4byte	0xec
 3606 0bfd 2D       		.byte	0x2d
 3607 0bfe 00       		.byte	0
 3608 0bff 33       		.uleb128 0x33
 3609 0c00 6B000000 		.4byte	0x6b
 3610 0c04 32       		.uleb128 0x32
 3611 0c05 4B040000 		.4byte	.LASF107
 3612 0c09 01       		.byte	0x1
 3613 0c0a 3B       		.byte	0x3b
 3614 0c0b 150C0000 		.4byte	0xc15
 3615 0c0f 05       		.uleb128 0x5
 3616 0c10 03       		.byte	0x3
 3617 0c11 00000000 		.4byte	cyImoFreqMhz2Reg
 3618 0c15 33       		.uleb128 0x33
 3619 0c16 EF0B0000 		.4byte	0xbef
 3620 0c1a 32       		.uleb128 0x32
 3621 0c1b 38000000 		.4byte	.LASF108
 3622 0c1f 01       		.byte	0x1
 3623 0c20 5B       		.byte	0x5b
 3624 0c21 83000000 		.4byte	0x83
 3625 0c25 05       		.uleb128 0x5
 3626 0c26 03       		.byte	0x3
 3627 0c27 00000000 		.4byte	CySysClkPumpConfig
 3628 0c2b 34       		.uleb128 0x34
 3629 0c2c 6F020000 		.4byte	.LASF109
 3630 0c30 6F020000 		.4byte	.LASF109
 3631 0c34 03       		.byte	0x3
 3632 0c35 E5       		.byte	0xe5
 3633 0c36 34       		.uleb128 0x34
 3634 0c37 93040000 		.4byte	.LASF110
 3635 0c3b 93040000 		.4byte	.LASF110
 3636 0c3f 03       		.byte	0x3
 3637 0c40 E6       		.byte	0xe6
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 121


 3638 0c41 34       		.uleb128 0x34
 3639 0c42 E6040000 		.4byte	.LASF111
 3640 0c46 E6040000 		.4byte	.LASF111
 3641 0c4a 03       		.byte	0x3
 3642 0c4b DC       		.byte	0xdc
 3643 0c4c 00       		.byte	0
 3644              		.section	.debug_abbrev,"",%progbits
 3645              	.Ldebug_abbrev0:
 3646 0000 01       		.uleb128 0x1
 3647 0001 11       		.uleb128 0x11
 3648 0002 01       		.byte	0x1
 3649 0003 25       		.uleb128 0x25
 3650 0004 0E       		.uleb128 0xe
 3651 0005 13       		.uleb128 0x13
 3652 0006 0B       		.uleb128 0xb
 3653 0007 03       		.uleb128 0x3
 3654 0008 0E       		.uleb128 0xe
 3655 0009 1B       		.uleb128 0x1b
 3656 000a 0E       		.uleb128 0xe
 3657 000b 55       		.uleb128 0x55
 3658 000c 17       		.uleb128 0x17
 3659 000d 11       		.uleb128 0x11
 3660 000e 01       		.uleb128 0x1
 3661 000f 10       		.uleb128 0x10
 3662 0010 17       		.uleb128 0x17
 3663 0011 00       		.byte	0
 3664 0012 00       		.byte	0
 3665 0013 02       		.uleb128 0x2
 3666 0014 24       		.uleb128 0x24
 3667 0015 00       		.byte	0
 3668 0016 0B       		.uleb128 0xb
 3669 0017 0B       		.uleb128 0xb
 3670 0018 3E       		.uleb128 0x3e
 3671 0019 0B       		.uleb128 0xb
 3672 001a 03       		.uleb128 0x3
 3673 001b 0E       		.uleb128 0xe
 3674 001c 00       		.byte	0
 3675 001d 00       		.byte	0
 3676 001e 03       		.uleb128 0x3
 3677 001f 24       		.uleb128 0x24
 3678 0020 00       		.byte	0
 3679 0021 0B       		.uleb128 0xb
 3680 0022 0B       		.uleb128 0xb
 3681 0023 3E       		.uleb128 0x3e
 3682 0024 0B       		.uleb128 0xb
 3683 0025 03       		.uleb128 0x3
 3684 0026 08       		.uleb128 0x8
 3685 0027 00       		.byte	0
 3686 0028 00       		.byte	0
 3687 0029 04       		.uleb128 0x4
 3688 002a 16       		.uleb128 0x16
 3689 002b 00       		.byte	0
 3690 002c 03       		.uleb128 0x3
 3691 002d 0E       		.uleb128 0xe
 3692 002e 3A       		.uleb128 0x3a
 3693 002f 0B       		.uleb128 0xb
 3694 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 122


 3695 0031 05       		.uleb128 0x5
 3696 0032 49       		.uleb128 0x49
 3697 0033 13       		.uleb128 0x13
 3698 0034 00       		.byte	0
 3699 0035 00       		.byte	0
 3700 0036 05       		.uleb128 0x5
 3701 0037 35       		.uleb128 0x35
 3702 0038 00       		.byte	0
 3703 0039 49       		.uleb128 0x49
 3704 003a 13       		.uleb128 0x13
 3705 003b 00       		.byte	0
 3706 003c 00       		.byte	0
 3707 003d 06       		.uleb128 0x6
 3708 003e 0F       		.uleb128 0xf
 3709 003f 00       		.byte	0
 3710 0040 0B       		.uleb128 0xb
 3711 0041 0B       		.uleb128 0xb
 3712 0042 49       		.uleb128 0x49
 3713 0043 13       		.uleb128 0x13
 3714 0044 00       		.byte	0
 3715 0045 00       		.byte	0
 3716 0046 07       		.uleb128 0x7
 3717 0047 15       		.uleb128 0x15
 3718 0048 00       		.byte	0
 3719 0049 27       		.uleb128 0x27
 3720 004a 19       		.uleb128 0x19
 3721 004b 00       		.byte	0
 3722 004c 00       		.byte	0
 3723 004d 08       		.uleb128 0x8
 3724 004e 16       		.uleb128 0x16
 3725 004f 00       		.byte	0
 3726 0050 03       		.uleb128 0x3
 3727 0051 0E       		.uleb128 0xe
 3728 0052 3A       		.uleb128 0x3a
 3729 0053 0B       		.uleb128 0xb
 3730 0054 3B       		.uleb128 0x3b
 3731 0055 0B       		.uleb128 0xb
 3732 0056 49       		.uleb128 0x49
 3733 0057 13       		.uleb128 0x13
 3734 0058 00       		.byte	0
 3735 0059 00       		.byte	0
 3736 005a 09       		.uleb128 0x9
 3737 005b 2E       		.uleb128 0x2e
 3738 005c 01       		.byte	0x1
 3739 005d 3F       		.uleb128 0x3f
 3740 005e 19       		.uleb128 0x19
 3741 005f 03       		.uleb128 0x3
 3742 0060 0E       		.uleb128 0xe
 3743 0061 3A       		.uleb128 0x3a
 3744 0062 0B       		.uleb128 0xb
 3745 0063 3B       		.uleb128 0x3b
 3746 0064 05       		.uleb128 0x5
 3747 0065 27       		.uleb128 0x27
 3748 0066 19       		.uleb128 0x19
 3749 0067 49       		.uleb128 0x49
 3750 0068 13       		.uleb128 0x13
 3751 0069 20       		.uleb128 0x20
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 123


 3752 006a 0B       		.uleb128 0xb
 3753 006b 01       		.uleb128 0x1
 3754 006c 13       		.uleb128 0x13
 3755 006d 00       		.byte	0
 3756 006e 00       		.byte	0
 3757 006f 0A       		.uleb128 0xa
 3758 0070 34       		.uleb128 0x34
 3759 0071 00       		.byte	0
 3760 0072 03       		.uleb128 0x3
 3761 0073 0E       		.uleb128 0xe
 3762 0074 3A       		.uleb128 0x3a
 3763 0075 0B       		.uleb128 0xb
 3764 0076 3B       		.uleb128 0x3b
 3765 0077 05       		.uleb128 0x5
 3766 0078 49       		.uleb128 0x49
 3767 0079 13       		.uleb128 0x13
 3768 007a 00       		.byte	0
 3769 007b 00       		.byte	0
 3770 007c 0B       		.uleb128 0xb
 3771 007d 2E       		.uleb128 0x2e
 3772 007e 00       		.byte	0
 3773 007f 3F       		.uleb128 0x3f
 3774 0080 19       		.uleb128 0x19
 3775 0081 03       		.uleb128 0x3
 3776 0082 0E       		.uleb128 0xe
 3777 0083 3A       		.uleb128 0x3a
 3778 0084 0B       		.uleb128 0xb
 3779 0085 3B       		.uleb128 0x3b
 3780 0086 05       		.uleb128 0x5
 3781 0087 27       		.uleb128 0x27
 3782 0088 19       		.uleb128 0x19
 3783 0089 20       		.uleb128 0x20
 3784 008a 0B       		.uleb128 0xb
 3785 008b 00       		.byte	0
 3786 008c 00       		.byte	0
 3787 008d 0C       		.uleb128 0xc
 3788 008e 2E       		.uleb128 0x2e
 3789 008f 01       		.byte	0x1
 3790 0090 3F       		.uleb128 0x3f
 3791 0091 19       		.uleb128 0x19
 3792 0092 03       		.uleb128 0x3
 3793 0093 0E       		.uleb128 0xe
 3794 0094 3A       		.uleb128 0x3a
 3795 0095 0B       		.uleb128 0xb
 3796 0096 3B       		.uleb128 0x3b
 3797 0097 05       		.uleb128 0x5
 3798 0098 27       		.uleb128 0x27
 3799 0099 19       		.uleb128 0x19
 3800 009a 20       		.uleb128 0x20
 3801 009b 0B       		.uleb128 0xb
 3802 009c 01       		.uleb128 0x1
 3803 009d 13       		.uleb128 0x13
 3804 009e 00       		.byte	0
 3805 009f 00       		.byte	0
 3806 00a0 0D       		.uleb128 0xd
 3807 00a1 05       		.uleb128 0x5
 3808 00a2 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 124


 3809 00a3 03       		.uleb128 0x3
 3810 00a4 0E       		.uleb128 0xe
 3811 00a5 3A       		.uleb128 0x3a
 3812 00a6 0B       		.uleb128 0xb
 3813 00a7 3B       		.uleb128 0x3b
 3814 00a8 05       		.uleb128 0x5
 3815 00a9 49       		.uleb128 0x49
 3816 00aa 13       		.uleb128 0x13
 3817 00ab 00       		.byte	0
 3818 00ac 00       		.byte	0
 3819 00ad 0E       		.uleb128 0xe
 3820 00ae 2E       		.uleb128 0x2e
 3821 00af 01       		.byte	0x1
 3822 00b0 03       		.uleb128 0x3
 3823 00b1 0E       		.uleb128 0xe
 3824 00b2 3A       		.uleb128 0x3a
 3825 00b3 0B       		.uleb128 0xb
 3826 00b4 3B       		.uleb128 0x3b
 3827 00b5 05       		.uleb128 0x5
 3828 00b6 27       		.uleb128 0x27
 3829 00b7 19       		.uleb128 0x19
 3830 00b8 20       		.uleb128 0x20
 3831 00b9 0B       		.uleb128 0xb
 3832 00ba 01       		.uleb128 0x1
 3833 00bb 13       		.uleb128 0x13
 3834 00bc 00       		.byte	0
 3835 00bd 00       		.byte	0
 3836 00be 0F       		.uleb128 0xf
 3837 00bf 34       		.uleb128 0x34
 3838 00c0 00       		.byte	0
 3839 00c1 03       		.uleb128 0x3
 3840 00c2 08       		.uleb128 0x8
 3841 00c3 3A       		.uleb128 0x3a
 3842 00c4 0B       		.uleb128 0xb
 3843 00c5 3B       		.uleb128 0x3b
 3844 00c6 05       		.uleb128 0x5
 3845 00c7 49       		.uleb128 0x49
 3846 00c8 13       		.uleb128 0x13
 3847 00c9 00       		.byte	0
 3848 00ca 00       		.byte	0
 3849 00cb 10       		.uleb128 0x10
 3850 00cc 2E       		.uleb128 0x2e
 3851 00cd 00       		.byte	0
 3852 00ce 3F       		.uleb128 0x3f
 3853 00cf 19       		.uleb128 0x19
 3854 00d0 03       		.uleb128 0x3
 3855 00d1 0E       		.uleb128 0xe
 3856 00d2 3A       		.uleb128 0x3a
 3857 00d3 0B       		.uleb128 0xb
 3858 00d4 3B       		.uleb128 0x3b
 3859 00d5 0B       		.uleb128 0xb
 3860 00d6 27       		.uleb128 0x27
 3861 00d7 19       		.uleb128 0x19
 3862 00d8 11       		.uleb128 0x11
 3863 00d9 01       		.uleb128 0x1
 3864 00da 12       		.uleb128 0x12
 3865 00db 06       		.uleb128 0x6
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 125


 3866 00dc 40       		.uleb128 0x40
 3867 00dd 18       		.uleb128 0x18
 3868 00de 9742     		.uleb128 0x2117
 3869 00e0 19       		.uleb128 0x19
 3870 00e1 00       		.byte	0
 3871 00e2 00       		.byte	0
 3872 00e3 11       		.uleb128 0x11
 3873 00e4 2E       		.uleb128 0x2e
 3874 00e5 01       		.byte	0x1
 3875 00e6 3F       		.uleb128 0x3f
 3876 00e7 19       		.uleb128 0x19
 3877 00e8 03       		.uleb128 0x3
 3878 00e9 0E       		.uleb128 0xe
 3879 00ea 3A       		.uleb128 0x3a
 3880 00eb 0B       		.uleb128 0xb
 3881 00ec 3B       		.uleb128 0x3b
 3882 00ed 05       		.uleb128 0x5
 3883 00ee 27       		.uleb128 0x27
 3884 00ef 19       		.uleb128 0x19
 3885 00f0 11       		.uleb128 0x11
 3886 00f1 01       		.uleb128 0x1
 3887 00f2 12       		.uleb128 0x12
 3888 00f3 06       		.uleb128 0x6
 3889 00f4 40       		.uleb128 0x40
 3890 00f5 18       		.uleb128 0x18
 3891 00f6 9742     		.uleb128 0x2117
 3892 00f8 19       		.uleb128 0x19
 3893 00f9 01       		.uleb128 0x1
 3894 00fa 13       		.uleb128 0x13
 3895 00fb 00       		.byte	0
 3896 00fc 00       		.byte	0
 3897 00fd 12       		.uleb128 0x12
 3898 00fe 05       		.uleb128 0x5
 3899 00ff 00       		.byte	0
 3900 0100 03       		.uleb128 0x3
 3901 0101 0E       		.uleb128 0xe
 3902 0102 3A       		.uleb128 0x3a
 3903 0103 0B       		.uleb128 0xb
 3904 0104 3B       		.uleb128 0x3b
 3905 0105 05       		.uleb128 0x5
 3906 0106 49       		.uleb128 0x49
 3907 0107 13       		.uleb128 0x13
 3908 0108 02       		.uleb128 0x2
 3909 0109 17       		.uleb128 0x17
 3910 010a 00       		.byte	0
 3911 010b 00       		.byte	0
 3912 010c 13       		.uleb128 0x13
 3913 010d 34       		.uleb128 0x34
 3914 010e 00       		.byte	0
 3915 010f 03       		.uleb128 0x3
 3916 0110 0E       		.uleb128 0xe
 3917 0111 3A       		.uleb128 0x3a
 3918 0112 0B       		.uleb128 0xb
 3919 0113 3B       		.uleb128 0x3b
 3920 0114 05       		.uleb128 0x5
 3921 0115 49       		.uleb128 0x49
 3922 0116 13       		.uleb128 0x13
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 126


 3923 0117 02       		.uleb128 0x2
 3924 0118 17       		.uleb128 0x17
 3925 0119 00       		.byte	0
 3926 011a 00       		.byte	0
 3927 011b 14       		.uleb128 0x14
 3928 011c 898201   		.uleb128 0x4109
 3929 011f 00       		.byte	0
 3930 0120 11       		.uleb128 0x11
 3931 0121 01       		.uleb128 0x1
 3932 0122 31       		.uleb128 0x31
 3933 0123 13       		.uleb128 0x13
 3934 0124 00       		.byte	0
 3935 0125 00       		.byte	0
 3936 0126 15       		.uleb128 0x15
 3937 0127 05       		.uleb128 0x5
 3938 0128 00       		.byte	0
 3939 0129 03       		.uleb128 0x3
 3940 012a 0E       		.uleb128 0xe
 3941 012b 3A       		.uleb128 0x3a
 3942 012c 0B       		.uleb128 0xb
 3943 012d 3B       		.uleb128 0x3b
 3944 012e 05       		.uleb128 0x5
 3945 012f 49       		.uleb128 0x49
 3946 0130 13       		.uleb128 0x13
 3947 0131 02       		.uleb128 0x2
 3948 0132 18       		.uleb128 0x18
 3949 0133 00       		.byte	0
 3950 0134 00       		.byte	0
 3951 0135 16       		.uleb128 0x16
 3952 0136 2E       		.uleb128 0x2e
 3953 0137 01       		.byte	0x1
 3954 0138 3F       		.uleb128 0x3f
 3955 0139 19       		.uleb128 0x19
 3956 013a 03       		.uleb128 0x3
 3957 013b 0E       		.uleb128 0xe
 3958 013c 3A       		.uleb128 0x3a
 3959 013d 0B       		.uleb128 0xb
 3960 013e 3B       		.uleb128 0x3b
 3961 013f 05       		.uleb128 0x5
 3962 0140 27       		.uleb128 0x27
 3963 0141 19       		.uleb128 0x19
 3964 0142 49       		.uleb128 0x49
 3965 0143 13       		.uleb128 0x13
 3966 0144 11       		.uleb128 0x11
 3967 0145 01       		.uleb128 0x1
 3968 0146 12       		.uleb128 0x12
 3969 0147 06       		.uleb128 0x6
 3970 0148 40       		.uleb128 0x40
 3971 0149 18       		.uleb128 0x18
 3972 014a 9742     		.uleb128 0x2117
 3973 014c 19       		.uleb128 0x19
 3974 014d 01       		.uleb128 0x1
 3975 014e 13       		.uleb128 0x13
 3976 014f 00       		.byte	0
 3977 0150 00       		.byte	0
 3978 0151 17       		.uleb128 0x17
 3979 0152 34       		.uleb128 0x34
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 127


 3980 0153 00       		.byte	0
 3981 0154 03       		.uleb128 0x3
 3982 0155 0E       		.uleb128 0xe
 3983 0156 3A       		.uleb128 0x3a
 3984 0157 0B       		.uleb128 0xb
 3985 0158 3B       		.uleb128 0x3b
 3986 0159 05       		.uleb128 0x5
 3987 015a 49       		.uleb128 0x49
 3988 015b 13       		.uleb128 0x13
 3989 015c 02       		.uleb128 0x2
 3990 015d 18       		.uleb128 0x18
 3991 015e 00       		.byte	0
 3992 015f 00       		.byte	0
 3993 0160 18       		.uleb128 0x18
 3994 0161 01       		.uleb128 0x1
 3995 0162 01       		.byte	0x1
 3996 0163 49       		.uleb128 0x49
 3997 0164 13       		.uleb128 0x13
 3998 0165 01       		.uleb128 0x1
 3999 0166 13       		.uleb128 0x13
 4000 0167 00       		.byte	0
 4001 0168 00       		.byte	0
 4002 0169 19       		.uleb128 0x19
 4003 016a 21       		.uleb128 0x21
 4004 016b 00       		.byte	0
 4005 016c 49       		.uleb128 0x49
 4006 016d 13       		.uleb128 0x13
 4007 016e 2F       		.uleb128 0x2f
 4008 016f 0B       		.uleb128 0xb
 4009 0170 00       		.byte	0
 4010 0171 00       		.byte	0
 4011 0172 1A       		.uleb128 0x1a
 4012 0173 2E       		.uleb128 0x2e
 4013 0174 00       		.byte	0
 4014 0175 3F       		.uleb128 0x3f
 4015 0176 19       		.uleb128 0x19
 4016 0177 03       		.uleb128 0x3
 4017 0178 0E       		.uleb128 0xe
 4018 0179 3A       		.uleb128 0x3a
 4019 017a 0B       		.uleb128 0xb
 4020 017b 3B       		.uleb128 0x3b
 4021 017c 05       		.uleb128 0x5
 4022 017d 27       		.uleb128 0x27
 4023 017e 19       		.uleb128 0x19
 4024 017f 11       		.uleb128 0x11
 4025 0180 01       		.uleb128 0x1
 4026 0181 12       		.uleb128 0x12
 4027 0182 06       		.uleb128 0x6
 4028 0183 40       		.uleb128 0x40
 4029 0184 18       		.uleb128 0x18
 4030 0185 9742     		.uleb128 0x2117
 4031 0187 19       		.uleb128 0x19
 4032 0188 00       		.byte	0
 4033 0189 00       		.byte	0
 4034 018a 1B       		.uleb128 0x1b
 4035 018b 2E       		.uleb128 0x2e
 4036 018c 01       		.byte	0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 128


 4037 018d 31       		.uleb128 0x31
 4038 018e 13       		.uleb128 0x13
 4039 018f 11       		.uleb128 0x11
 4040 0190 01       		.uleb128 0x1
 4041 0191 12       		.uleb128 0x12
 4042 0192 06       		.uleb128 0x6
 4043 0193 40       		.uleb128 0x40
 4044 0194 18       		.uleb128 0x18
 4045 0195 9742     		.uleb128 0x2117
 4046 0197 19       		.uleb128 0x19
 4047 0198 01       		.uleb128 0x1
 4048 0199 13       		.uleb128 0x13
 4049 019a 00       		.byte	0
 4050 019b 00       		.byte	0
 4051 019c 1C       		.uleb128 0x1c
 4052 019d 34       		.uleb128 0x34
 4053 019e 00       		.byte	0
 4054 019f 31       		.uleb128 0x31
 4055 01a0 13       		.uleb128 0x13
 4056 01a1 02       		.uleb128 0x2
 4057 01a2 17       		.uleb128 0x17
 4058 01a3 00       		.byte	0
 4059 01a4 00       		.byte	0
 4060 01a5 1D       		.uleb128 0x1d
 4061 01a6 2E       		.uleb128 0x2e
 4062 01a7 00       		.byte	0
 4063 01a8 3F       		.uleb128 0x3f
 4064 01a9 19       		.uleb128 0x19
 4065 01aa 03       		.uleb128 0x3
 4066 01ab 0E       		.uleb128 0xe
 4067 01ac 3A       		.uleb128 0x3a
 4068 01ad 0B       		.uleb128 0xb
 4069 01ae 3B       		.uleb128 0x3b
 4070 01af 05       		.uleb128 0x5
 4071 01b0 27       		.uleb128 0x27
 4072 01b1 19       		.uleb128 0x19
 4073 01b2 49       		.uleb128 0x49
 4074 01b3 13       		.uleb128 0x13
 4075 01b4 11       		.uleb128 0x11
 4076 01b5 01       		.uleb128 0x1
 4077 01b6 12       		.uleb128 0x12
 4078 01b7 06       		.uleb128 0x6
 4079 01b8 40       		.uleb128 0x40
 4080 01b9 18       		.uleb128 0x18
 4081 01ba 9742     		.uleb128 0x2117
 4082 01bc 19       		.uleb128 0x19
 4083 01bd 00       		.byte	0
 4084 01be 00       		.byte	0
 4085 01bf 1E       		.uleb128 0x1e
 4086 01c0 2E       		.uleb128 0x2e
 4087 01c1 00       		.byte	0
 4088 01c2 31       		.uleb128 0x31
 4089 01c3 13       		.uleb128 0x13
 4090 01c4 11       		.uleb128 0x11
 4091 01c5 01       		.uleb128 0x1
 4092 01c6 12       		.uleb128 0x12
 4093 01c7 06       		.uleb128 0x6
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 129


 4094 01c8 40       		.uleb128 0x40
 4095 01c9 18       		.uleb128 0x18
 4096 01ca 9742     		.uleb128 0x2117
 4097 01cc 19       		.uleb128 0x19
 4098 01cd 00       		.byte	0
 4099 01ce 00       		.byte	0
 4100 01cf 1F       		.uleb128 0x1f
 4101 01d0 05       		.uleb128 0x5
 4102 01d1 00       		.byte	0
 4103 01d2 31       		.uleb128 0x31
 4104 01d3 13       		.uleb128 0x13
 4105 01d4 02       		.uleb128 0x2
 4106 01d5 17       		.uleb128 0x17
 4107 01d6 00       		.byte	0
 4108 01d7 00       		.byte	0
 4109 01d8 20       		.uleb128 0x20
 4110 01d9 05       		.uleb128 0x5
 4111 01da 00       		.byte	0
 4112 01db 31       		.uleb128 0x31
 4113 01dc 13       		.uleb128 0x13
 4114 01dd 02       		.uleb128 0x2
 4115 01de 18       		.uleb128 0x18
 4116 01df 00       		.byte	0
 4117 01e0 00       		.byte	0
 4118 01e1 21       		.uleb128 0x21
 4119 01e2 34       		.uleb128 0x34
 4120 01e3 00       		.byte	0
 4121 01e4 31       		.uleb128 0x31
 4122 01e5 13       		.uleb128 0x13
 4123 01e6 02       		.uleb128 0x2
 4124 01e7 18       		.uleb128 0x18
 4125 01e8 00       		.byte	0
 4126 01e9 00       		.byte	0
 4127 01ea 22       		.uleb128 0x22
 4128 01eb 34       		.uleb128 0x34
 4129 01ec 00       		.byte	0
 4130 01ed 31       		.uleb128 0x31
 4131 01ee 13       		.uleb128 0x13
 4132 01ef 1C       		.uleb128 0x1c
 4133 01f0 06       		.uleb128 0x6
 4134 01f1 00       		.byte	0
 4135 01f2 00       		.byte	0
 4136 01f3 23       		.uleb128 0x23
 4137 01f4 34       		.uleb128 0x34
 4138 01f5 00       		.byte	0
 4139 01f6 03       		.uleb128 0x3
 4140 01f7 0E       		.uleb128 0xe
 4141 01f8 3A       		.uleb128 0x3a
 4142 01f9 0B       		.uleb128 0xb
 4143 01fa 3B       		.uleb128 0x3b
 4144 01fb 05       		.uleb128 0x5
 4145 01fc 49       		.uleb128 0x49
 4146 01fd 13       		.uleb128 0x13
 4147 01fe 1C       		.uleb128 0x1c
 4148 01ff 06       		.uleb128 0x6
 4149 0200 00       		.byte	0
 4150 0201 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 130


 4151 0202 24       		.uleb128 0x24
 4152 0203 1D       		.uleb128 0x1d
 4153 0204 01       		.byte	0x1
 4154 0205 31       		.uleb128 0x31
 4155 0206 13       		.uleb128 0x13
 4156 0207 11       		.uleb128 0x11
 4157 0208 01       		.uleb128 0x1
 4158 0209 12       		.uleb128 0x12
 4159 020a 06       		.uleb128 0x6
 4160 020b 58       		.uleb128 0x58
 4161 020c 0B       		.uleb128 0xb
 4162 020d 59       		.uleb128 0x59
 4163 020e 05       		.uleb128 0x5
 4164 020f 01       		.uleb128 0x1
 4165 0210 13       		.uleb128 0x13
 4166 0211 00       		.byte	0
 4167 0212 00       		.byte	0
 4168 0213 25       		.uleb128 0x25
 4169 0214 0B       		.uleb128 0xb
 4170 0215 01       		.byte	0x1
 4171 0216 11       		.uleb128 0x11
 4172 0217 01       		.uleb128 0x1
 4173 0218 12       		.uleb128 0x12
 4174 0219 06       		.uleb128 0x6
 4175 021a 00       		.byte	0
 4176 021b 00       		.byte	0
 4177 021c 26       		.uleb128 0x26
 4178 021d 34       		.uleb128 0x34
 4179 021e 00       		.byte	0
 4180 021f 31       		.uleb128 0x31
 4181 0220 13       		.uleb128 0x13
 4182 0221 00       		.byte	0
 4183 0222 00       		.byte	0
 4184 0223 27       		.uleb128 0x27
 4185 0224 898201   		.uleb128 0x4109
 4186 0227 01       		.byte	0x1
 4187 0228 11       		.uleb128 0x11
 4188 0229 01       		.uleb128 0x1
 4189 022a 31       		.uleb128 0x31
 4190 022b 13       		.uleb128 0x13
 4191 022c 00       		.byte	0
 4192 022d 00       		.byte	0
 4193 022e 28       		.uleb128 0x28
 4194 022f 8A8201   		.uleb128 0x410a
 4195 0232 00       		.byte	0
 4196 0233 02       		.uleb128 0x2
 4197 0234 18       		.uleb128 0x18
 4198 0235 9142     		.uleb128 0x2111
 4199 0237 18       		.uleb128 0x18
 4200 0238 00       		.byte	0
 4201 0239 00       		.byte	0
 4202 023a 29       		.uleb128 0x29
 4203 023b 1D       		.uleb128 0x1d
 4204 023c 00       		.byte	0
 4205 023d 31       		.uleb128 0x31
 4206 023e 13       		.uleb128 0x13
 4207 023f 52       		.uleb128 0x52
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 131


 4208 0240 01       		.uleb128 0x1
 4209 0241 55       		.uleb128 0x55
 4210 0242 17       		.uleb128 0x17
 4211 0243 58       		.uleb128 0x58
 4212 0244 0B       		.uleb128 0xb
 4213 0245 59       		.uleb128 0x59
 4214 0246 05       		.uleb128 0x5
 4215 0247 00       		.byte	0
 4216 0248 00       		.byte	0
 4217 0249 2A       		.uleb128 0x2a
 4218 024a 2E       		.uleb128 0x2e
 4219 024b 01       		.byte	0x1
 4220 024c 3F       		.uleb128 0x3f
 4221 024d 19       		.uleb128 0x19
 4222 024e 03       		.uleb128 0x3
 4223 024f 0E       		.uleb128 0xe
 4224 0250 3A       		.uleb128 0x3a
 4225 0251 0B       		.uleb128 0xb
 4226 0252 3B       		.uleb128 0x3b
 4227 0253 05       		.uleb128 0x5
 4228 0254 27       		.uleb128 0x27
 4229 0255 19       		.uleb128 0x19
 4230 0256 11       		.uleb128 0x11
 4231 0257 01       		.uleb128 0x1
 4232 0258 12       		.uleb128 0x12
 4233 0259 06       		.uleb128 0x6
 4234 025a 40       		.uleb128 0x40
 4235 025b 18       		.uleb128 0x18
 4236 025c 9642     		.uleb128 0x2116
 4237 025e 19       		.uleb128 0x19
 4238 025f 01       		.uleb128 0x1
 4239 0260 13       		.uleb128 0x13
 4240 0261 00       		.byte	0
 4241 0262 00       		.byte	0
 4242 0263 2B       		.uleb128 0x2b
 4243 0264 34       		.uleb128 0x34
 4244 0265 00       		.byte	0
 4245 0266 03       		.uleb128 0x3
 4246 0267 08       		.uleb128 0x8
 4247 0268 3A       		.uleb128 0x3a
 4248 0269 0B       		.uleb128 0xb
 4249 026a 3B       		.uleb128 0x3b
 4250 026b 05       		.uleb128 0x5
 4251 026c 49       		.uleb128 0x49
 4252 026d 13       		.uleb128 0x13
 4253 026e 02       		.uleb128 0x2
 4254 026f 17       		.uleb128 0x17
 4255 0270 00       		.byte	0
 4256 0271 00       		.byte	0
 4257 0272 2C       		.uleb128 0x2c
 4258 0273 1D       		.uleb128 0x1d
 4259 0274 01       		.byte	0x1
 4260 0275 31       		.uleb128 0x31
 4261 0276 13       		.uleb128 0x13
 4262 0277 52       		.uleb128 0x52
 4263 0278 01       		.uleb128 0x1
 4264 0279 55       		.uleb128 0x55
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 132


 4265 027a 17       		.uleb128 0x17
 4266 027b 58       		.uleb128 0x58
 4267 027c 0B       		.uleb128 0xb
 4268 027d 59       		.uleb128 0x59
 4269 027e 05       		.uleb128 0x5
 4270 027f 01       		.uleb128 0x1
 4271 0280 13       		.uleb128 0x13
 4272 0281 00       		.byte	0
 4273 0282 00       		.byte	0
 4274 0283 2D       		.uleb128 0x2d
 4275 0284 0B       		.uleb128 0xb
 4276 0285 01       		.byte	0x1
 4277 0286 55       		.uleb128 0x55
 4278 0287 17       		.uleb128 0x17
 4279 0288 00       		.byte	0
 4280 0289 00       		.byte	0
 4281 028a 2E       		.uleb128 0x2e
 4282 028b 1D       		.uleb128 0x1d
 4283 028c 00       		.byte	0
 4284 028d 31       		.uleb128 0x31
 4285 028e 13       		.uleb128 0x13
 4286 028f 11       		.uleb128 0x11
 4287 0290 01       		.uleb128 0x1
 4288 0291 12       		.uleb128 0x12
 4289 0292 06       		.uleb128 0x6
 4290 0293 58       		.uleb128 0x58
 4291 0294 0B       		.uleb128 0xb
 4292 0295 59       		.uleb128 0x59
 4293 0296 05       		.uleb128 0x5
 4294 0297 00       		.byte	0
 4295 0298 00       		.byte	0
 4296 0299 2F       		.uleb128 0x2f
 4297 029a 2E       		.uleb128 0x2e
 4298 029b 01       		.byte	0x1
 4299 029c 31       		.uleb128 0x31
 4300 029d 13       		.uleb128 0x13
 4301 029e 11       		.uleb128 0x11
 4302 029f 01       		.uleb128 0x1
 4303 02a0 12       		.uleb128 0x12
 4304 02a1 06       		.uleb128 0x6
 4305 02a2 40       		.uleb128 0x40
 4306 02a3 18       		.uleb128 0x18
 4307 02a4 9642     		.uleb128 0x2116
 4308 02a6 19       		.uleb128 0x19
 4309 02a7 01       		.uleb128 0x1
 4310 02a8 13       		.uleb128 0x13
 4311 02a9 00       		.byte	0
 4312 02aa 00       		.byte	0
 4313 02ab 30       		.uleb128 0x30
 4314 02ac 0B       		.uleb128 0xb
 4315 02ad 01       		.byte	0x1
 4316 02ae 11       		.uleb128 0x11
 4317 02af 01       		.uleb128 0x1
 4318 02b0 12       		.uleb128 0x12
 4319 02b1 06       		.uleb128 0x6
 4320 02b2 01       		.uleb128 0x1
 4321 02b3 13       		.uleb128 0x13
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 133


 4322 02b4 00       		.byte	0
 4323 02b5 00       		.byte	0
 4324 02b6 31       		.uleb128 0x31
 4325 02b7 34       		.uleb128 0x34
 4326 02b8 00       		.byte	0
 4327 02b9 03       		.uleb128 0x3
 4328 02ba 0E       		.uleb128 0xe
 4329 02bb 3A       		.uleb128 0x3a
 4330 02bc 0B       		.uleb128 0xb
 4331 02bd 3B       		.uleb128 0x3b
 4332 02be 0B       		.uleb128 0xb
 4333 02bf 49       		.uleb128 0x49
 4334 02c0 13       		.uleb128 0x13
 4335 02c1 02       		.uleb128 0x2
 4336 02c2 18       		.uleb128 0x18
 4337 02c3 00       		.byte	0
 4338 02c4 00       		.byte	0
 4339 02c5 32       		.uleb128 0x32
 4340 02c6 34       		.uleb128 0x34
 4341 02c7 00       		.byte	0
 4342 02c8 03       		.uleb128 0x3
 4343 02c9 0E       		.uleb128 0xe
 4344 02ca 3A       		.uleb128 0x3a
 4345 02cb 0B       		.uleb128 0xb
 4346 02cc 3B       		.uleb128 0x3b
 4347 02cd 0B       		.uleb128 0xb
 4348 02ce 49       		.uleb128 0x49
 4349 02cf 13       		.uleb128 0x13
 4350 02d0 3F       		.uleb128 0x3f
 4351 02d1 19       		.uleb128 0x19
 4352 02d2 02       		.uleb128 0x2
 4353 02d3 18       		.uleb128 0x18
 4354 02d4 00       		.byte	0
 4355 02d5 00       		.byte	0
 4356 02d6 33       		.uleb128 0x33
 4357 02d7 26       		.uleb128 0x26
 4358 02d8 00       		.byte	0
 4359 02d9 49       		.uleb128 0x49
 4360 02da 13       		.uleb128 0x13
 4361 02db 00       		.byte	0
 4362 02dc 00       		.byte	0
 4363 02dd 34       		.uleb128 0x34
 4364 02de 2E       		.uleb128 0x2e
 4365 02df 00       		.byte	0
 4366 02e0 3F       		.uleb128 0x3f
 4367 02e1 19       		.uleb128 0x19
 4368 02e2 3C       		.uleb128 0x3c
 4369 02e3 19       		.uleb128 0x19
 4370 02e4 6E       		.uleb128 0x6e
 4371 02e5 0E       		.uleb128 0xe
 4372 02e6 03       		.uleb128 0x3
 4373 02e7 0E       		.uleb128 0xe
 4374 02e8 3A       		.uleb128 0x3a
 4375 02e9 0B       		.uleb128 0xb
 4376 02ea 3B       		.uleb128 0x3b
 4377 02eb 0B       		.uleb128 0xb
 4378 02ec 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 134


 4379 02ed 00       		.byte	0
 4380 02ee 00       		.byte	0
 4381              		.section	.debug_loc,"",%progbits
 4382              	.Ldebug_loc0:
 4383              	.LLST0:
 4384 0000 00000000 		.4byte	.LVL0
 4385 0004 07000000 		.4byte	.LVL1-1
 4386 0008 0100     		.2byte	0x1
 4387 000a 50       		.byte	0x50
 4388 000b 07000000 		.4byte	.LVL1-1
 4389 000f 1A000000 		.4byte	.LVL5
 4390 0013 0100     		.2byte	0x1
 4391 0015 54       		.byte	0x54
 4392 0016 1A000000 		.4byte	.LVL5
 4393 001a 20000000 		.4byte	.LFE4
 4394 001e 0400     		.2byte	0x4
 4395 0020 F3       		.byte	0xf3
 4396 0021 01       		.uleb128 0x1
 4397 0022 50       		.byte	0x50
 4398 0023 9F       		.byte	0x9f
 4399 0024 00000000 		.4byte	0
 4400 0028 00000000 		.4byte	0
 4401              	.LLST1:
 4402 002c 08000000 		.4byte	.LVL1
 4403 0030 19000000 		.4byte	.LVL4-1
 4404 0034 0100     		.2byte	0x1
 4405 0036 50       		.byte	0x50
 4406 0037 00000000 		.4byte	0
 4407 003b 00000000 		.4byte	0
 4408              	.LLST2:
 4409 003f 10000000 		.4byte	.LVL2
 4410 0043 14000000 		.4byte	.LVL3
 4411 0047 0100     		.2byte	0x1
 4412 0049 52       		.byte	0x52
 4413 004a 14000000 		.4byte	.LVL3
 4414 004e 19000000 		.4byte	.LVL4-1
 4415 0052 0100     		.2byte	0x1
 4416 0054 53       		.byte	0x53
 4417 0055 00000000 		.4byte	0
 4418 0059 00000000 		.4byte	0
 4419              	.LLST3:
 4420 005d 06000000 		.4byte	.LVL7
 4421 0061 0D000000 		.4byte	.LVL9-1
 4422 0065 0100     		.2byte	0x1
 4423 0067 50       		.byte	0x50
 4424 0068 00000000 		.4byte	0
 4425 006c 00000000 		.4byte	0
 4426              	.LLST4:
 4427 0070 0A000000 		.4byte	.LVL8
 4428 0074 12000000 		.4byte	.LVL10
 4429 0078 0500     		.2byte	0x5
 4430 007a 74       		.byte	0x74
 4431 007b 00       		.sleb128 0
 4432 007c 37       		.byte	0x37
 4433 007d 1A       		.byte	0x1a
 4434 007e 9F       		.byte	0x9f
 4435 007f 12000000 		.4byte	.LVL10
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 135


 4436 0083 18000000 		.4byte	.LFE6
 4437 0087 0100     		.2byte	0x1
 4438 0089 50       		.byte	0x50
 4439 008a 00000000 		.4byte	0
 4440 008e 00000000 		.4byte	0
 4441              	.LLST5:
 4442 0092 00000000 		.4byte	.LVL11
 4443 0096 07000000 		.4byte	.LVL12-1
 4444 009a 0100     		.2byte	0x1
 4445 009c 50       		.byte	0x50
 4446 009d 07000000 		.4byte	.LVL12-1
 4447 00a1 0C000000 		.4byte	.LVL13
 4448 00a5 0100     		.2byte	0x1
 4449 00a7 54       		.byte	0x54
 4450 00a8 0C000000 		.4byte	.LVL13
 4451 00ac 2C000000 		.4byte	.LFE7
 4452 00b0 0400     		.2byte	0x4
 4453 00b2 F3       		.byte	0xf3
 4454 00b3 01       		.uleb128 0x1
 4455 00b4 50       		.byte	0x50
 4456 00b5 9F       		.byte	0x9f
 4457 00b6 00000000 		.4byte	0
 4458 00ba 00000000 		.4byte	0
 4459              	.LLST6:
 4460 00be 08000000 		.4byte	.LVL12
 4461 00c2 21000000 		.4byte	.LVL14-1
 4462 00c6 0100     		.2byte	0x1
 4463 00c8 50       		.byte	0x50
 4464 00c9 00000000 		.4byte	0
 4465 00cd 00000000 		.4byte	0
 4466              	.LLST7:
 4467 00d1 00000000 		.4byte	.LVL15
 4468 00d5 09000000 		.4byte	.LVL16-1
 4469 00d9 0100     		.2byte	0x1
 4470 00db 50       		.byte	0x50
 4471 00dc 09000000 		.4byte	.LVL16-1
 4472 00e0 1E000000 		.4byte	.LVL17
 4473 00e4 0100     		.2byte	0x1
 4474 00e6 54       		.byte	0x54
 4475 00e7 1E000000 		.4byte	.LVL17
 4476 00eb 64000000 		.4byte	.LFE8
 4477 00ef 0400     		.2byte	0x4
 4478 00f1 F3       		.byte	0xf3
 4479 00f2 01       		.uleb128 0x1
 4480 00f3 50       		.byte	0x50
 4481 00f4 9F       		.byte	0x9f
 4482 00f5 00000000 		.4byte	0
 4483 00f9 00000000 		.4byte	0
 4484              	.LLST8:
 4485 00fd 0A000000 		.4byte	.LVL16
 4486 0101 3F000000 		.4byte	.LVL18-1
 4487 0105 0100     		.2byte	0x1
 4488 0107 50       		.byte	0x50
 4489 0108 00000000 		.4byte	0
 4490 010c 00000000 		.4byte	0
 4491              	.LLST9:
 4492 0110 04000000 		.4byte	.LVL19
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 136


 4493 0114 08000000 		.4byte	.LVL20
 4494 0118 0500     		.2byte	0x5
 4495 011a 70       		.byte	0x70
 4496 011b 00       		.sleb128 0
 4497 011c 31       		.byte	0x31
 4498 011d 1A       		.byte	0x1a
 4499 011e 9F       		.byte	0x9f
 4500 011f 08000000 		.4byte	.LVL20
 4501 0123 10000000 		.4byte	.LFE11
 4502 0127 0100     		.2byte	0x1
 4503 0129 50       		.byte	0x50
 4504 012a 00000000 		.4byte	0
 4505 012e 00000000 		.4byte	0
 4506              	.LLST10:
 4507 0132 00000000 		.4byte	.LVL21
 4508 0136 13000000 		.4byte	.LVL22-1
 4509 013a 0100     		.2byte	0x1
 4510 013c 50       		.byte	0x50
 4511 013d 13000000 		.4byte	.LVL22-1
 4512 0141 1A000000 		.4byte	.LVL23
 4513 0145 0100     		.2byte	0x1
 4514 0147 54       		.byte	0x54
 4515 0148 1A000000 		.4byte	.LVL23
 4516 014c 30000000 		.4byte	.LFE12
 4517 0150 0400     		.2byte	0x4
 4518 0152 F3       		.byte	0xf3
 4519 0153 01       		.uleb128 0x1
 4520 0154 50       		.byte	0x50
 4521 0155 9F       		.byte	0x9f
 4522 0156 00000000 		.4byte	0
 4523 015a 00000000 		.4byte	0
 4524              	.LLST11:
 4525 015e 14000000 		.4byte	.LVL22
 4526 0162 25000000 		.4byte	.LVL24-1
 4527 0166 0100     		.2byte	0x1
 4528 0168 50       		.byte	0x50
 4529 0169 00000000 		.4byte	0
 4530 016d 00000000 		.4byte	0
 4531              	.LLST12:
 4532 0171 00000000 		.4byte	.LVL25
 4533 0175 08000000 		.4byte	.LVL26
 4534 0179 0100     		.2byte	0x1
 4535 017b 50       		.byte	0x50
 4536 017c 08000000 		.4byte	.LVL26
 4537 0180 14000000 		.4byte	.LFE17
 4538 0184 0100     		.2byte	0x1
 4539 0186 52       		.byte	0x52
 4540 0187 00000000 		.4byte	0
 4541 018b 00000000 		.4byte	0
 4542              	.LLST13:
 4543 018f 0A000000 		.4byte	.LVL27
 4544 0193 0C000000 		.4byte	.LVL28
 4545 0197 0500     		.2byte	0x5
 4546 0199 70       		.byte	0x70
 4547 019a 00       		.sleb128 0
 4548 019b 49       		.byte	0x49
 4549 019c 1A       		.byte	0x1a
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 137


 4550 019d 9F       		.byte	0x9f
 4551 019e 0C000000 		.4byte	.LVL28
 4552 01a2 14000000 		.4byte	.LFE17
 4553 01a6 0100     		.2byte	0x1
 4554 01a8 50       		.byte	0x50
 4555 01a9 00000000 		.4byte	0
 4556 01ad 00000000 		.4byte	0
 4557              	.LLST14:
 4558 01b1 00000000 		.4byte	.LVL31
 4559 01b5 04000000 		.4byte	.LVL32
 4560 01b9 0100     		.2byte	0x1
 4561 01bb 50       		.byte	0x50
 4562 01bc 04000000 		.4byte	.LVL32
 4563 01c0 0E000000 		.4byte	.LFE20
 4564 01c4 0400     		.2byte	0x4
 4565 01c6 F3       		.byte	0xf3
 4566 01c7 01       		.uleb128 0x1
 4567 01c8 50       		.byte	0x50
 4568 01c9 9F       		.byte	0x9f
 4569 01ca 00000000 		.4byte	0
 4570 01ce 00000000 		.4byte	0
 4571              	.LLST15:
 4572 01d2 00000000 		.4byte	.LVL34
 4573 01d6 04000000 		.4byte	.LVL35
 4574 01da 0100     		.2byte	0x1
 4575 01dc 50       		.byte	0x50
 4576 01dd 04000000 		.4byte	.LVL35
 4577 01e1 0C000000 		.4byte	.LFE21
 4578 01e5 0400     		.2byte	0x4
 4579 01e7 F3       		.byte	0xf3
 4580 01e8 01       		.uleb128 0x1
 4581 01e9 50       		.byte	0x50
 4582 01ea 9F       		.byte	0x9f
 4583 01eb 00000000 		.4byte	0
 4584 01ef 00000000 		.4byte	0
 4585              	.LLST16:
 4586 01f3 00000000 		.4byte	.LVL36
 4587 01f7 04000000 		.4byte	.LVL37
 4588 01fb 0100     		.2byte	0x1
 4589 01fd 50       		.byte	0x50
 4590 01fe 04000000 		.4byte	.LVL37
 4591 0202 10000000 		.4byte	.LFE22
 4592 0206 0400     		.2byte	0x4
 4593 0208 F3       		.byte	0xf3
 4594 0209 01       		.uleb128 0x1
 4595 020a 50       		.byte	0x50
 4596 020b 9F       		.byte	0x9f
 4597 020c 00000000 		.4byte	0
 4598 0210 00000000 		.4byte	0
 4599              	.LLST17:
 4600 0214 00000000 		.4byte	.LVL39
 4601 0218 04000000 		.4byte	.LVL40
 4602 021c 0100     		.2byte	0x1
 4603 021e 50       		.byte	0x50
 4604 021f 04000000 		.4byte	.LVL40
 4605 0223 10000000 		.4byte	.LFE23
 4606 0227 0400     		.2byte	0x4
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 138


 4607 0229 F3       		.byte	0xf3
 4608 022a 01       		.uleb128 0x1
 4609 022b 50       		.byte	0x50
 4610 022c 9F       		.byte	0x9f
 4611 022d 00000000 		.4byte	0
 4612 0231 00000000 		.4byte	0
 4613              	.LLST18:
 4614 0235 00000000 		.4byte	.LVL41
 4615 0239 17000000 		.4byte	.LVL43-1
 4616 023d 0100     		.2byte	0x1
 4617 023f 50       		.byte	0x50
 4618 0240 17000000 		.4byte	.LVL43-1
 4619 0244 34000000 		.4byte	.LFE24
 4620 0248 0400     		.2byte	0x4
 4621 024a F3       		.byte	0xf3
 4622 024b 01       		.uleb128 0x1
 4623 024c 50       		.byte	0x50
 4624 024d 9F       		.byte	0x9f
 4625 024e 00000000 		.4byte	0
 4626 0252 00000000 		.4byte	0
 4627              	.LLST19:
 4628 0256 00000000 		.4byte	.LVL41
 4629 025a 17000000 		.4byte	.LVL43-1
 4630 025e 0100     		.2byte	0x1
 4631 0260 51       		.byte	0x51
 4632 0261 17000000 		.4byte	.LVL43-1
 4633 0265 34000000 		.4byte	.LFE24
 4634 0269 0400     		.2byte	0x4
 4635 026b F3       		.byte	0xf3
 4636 026c 01       		.uleb128 0x1
 4637 026d 51       		.byte	0x51
 4638 026e 9F       		.byte	0x9f
 4639 026f 00000000 		.4byte	0
 4640 0273 00000000 		.4byte	0
 4641              	.LLST20:
 4642 0277 18000000 		.4byte	.LVL43
 4643 027b 2B000000 		.4byte	.LVL47-1
 4644 027f 0100     		.2byte	0x1
 4645 0281 50       		.byte	0x50
 4646 0282 00000000 		.4byte	0
 4647 0286 00000000 		.4byte	0
 4648              	.LLST21:
 4649 028a 10000000 		.4byte	.LVL42
 4650 028e 2C000000 		.4byte	.LVL48
 4651 0292 0100     		.2byte	0x1
 4652 0294 55       		.byte	0x55
 4653 0295 00000000 		.4byte	0
 4654 0299 00000000 		.4byte	0
 4655              	.LLST22:
 4656 029d 22000000 		.4byte	.LVL44
 4657 02a1 26000000 		.4byte	.LVL46
 4658 02a5 0100     		.2byte	0x1
 4659 02a7 53       		.byte	0x53
 4660 02a8 26000000 		.4byte	.LVL46
 4661 02ac 2C000000 		.4byte	.LVL49
 4662 02b0 0100     		.2byte	0x1
 4663 02b2 57       		.byte	0x57
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 139


 4664 02b3 00000000 		.4byte	0
 4665 02b7 00000000 		.4byte	0
 4666              	.LLST23:
 4667 02bb 00000000 		.4byte	.LVL50
 4668 02bf 18000000 		.4byte	.LVL53
 4669 02c3 0100     		.2byte	0x1
 4670 02c5 50       		.byte	0x50
 4671 02c6 18000000 		.4byte	.LVL53
 4672 02ca 20000000 		.4byte	.LFE25
 4673 02ce 0400     		.2byte	0x4
 4674 02d0 F3       		.byte	0xf3
 4675 02d1 01       		.uleb128 0x1
 4676 02d2 50       		.byte	0x50
 4677 02d3 9F       		.byte	0x9f
 4678 02d4 00000000 		.4byte	0
 4679 02d8 00000000 		.4byte	0
 4680              	.LLST24:
 4681 02dc 0A000000 		.4byte	.LVL51
 4682 02e0 16000000 		.4byte	.LVL52
 4683 02e4 0F00     		.2byte	0xf
 4684 02e6 71       		.byte	0x71
 4685 02e7 00       		.sleb128 0
 4686 02e8 70       		.byte	0x70
 4687 02e9 00       		.sleb128 0
 4688 02ea 33       		.byte	0x33
 4689 02eb 1A       		.byte	0x1a
 4690 02ec 08       		.byte	0x8
 4691 02ed FF       		.byte	0xff
 4692 02ee 1A       		.byte	0x1a
 4693 02ef 33       		.byte	0x33
 4694 02f0 24       		.byte	0x24
 4695 02f1 23       		.byte	0x23
 4696 02f2 06       		.uleb128 0x6
 4697 02f3 25       		.byte	0x25
 4698 02f4 9F       		.byte	0x9f
 4699 02f5 00000000 		.4byte	0
 4700 02f9 00000000 		.4byte	0
 4701              	.LLST25:
 4702 02fd 00000000 		.4byte	.LVL54
 4703 0301 04000000 		.4byte	.LVL55
 4704 0305 0100     		.2byte	0x1
 4705 0307 50       		.byte	0x50
 4706 0308 04000000 		.4byte	.LVL55
 4707 030c 14000000 		.4byte	.LFE26
 4708 0310 0400     		.2byte	0x4
 4709 0312 F3       		.byte	0xf3
 4710 0313 01       		.uleb128 0x1
 4711 0314 50       		.byte	0x50
 4712 0315 9F       		.byte	0x9f
 4713 0316 00000000 		.4byte	0
 4714 031a 00000000 		.4byte	0
 4715              	.LLST26:
 4716 031e 00000000 		.4byte	.LVL56
 4717 0322 06000000 		.4byte	.LVL57
 4718 0326 0100     		.2byte	0x1
 4719 0328 50       		.byte	0x50
 4720 0329 06000000 		.4byte	.LVL57
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 140


 4721 032d 18000000 		.4byte	.LFE27
 4722 0331 0400     		.2byte	0x4
 4723 0333 F3       		.byte	0xf3
 4724 0334 01       		.uleb128 0x1
 4725 0335 50       		.byte	0x50
 4726 0336 9F       		.byte	0x9f
 4727 0337 00000000 		.4byte	0
 4728 033b 00000000 		.4byte	0
 4729              	.LLST27:
 4730 033f 00000000 		.4byte	.LVL58
 4731 0343 04000000 		.4byte	.LVL59
 4732 0347 0100     		.2byte	0x1
 4733 0349 50       		.byte	0x50
 4734 034a 04000000 		.4byte	.LVL59
 4735 034e 14000000 		.4byte	.LFE28
 4736 0352 0400     		.2byte	0x4
 4737 0354 F3       		.byte	0xf3
 4738 0355 01       		.uleb128 0x1
 4739 0356 50       		.byte	0x50
 4740 0357 9F       		.byte	0x9f
 4741 0358 00000000 		.4byte	0
 4742 035c 00000000 		.4byte	0
 4743              	.LLST28:
 4744 0360 00000000 		.4byte	.LVL60
 4745 0364 04000000 		.4byte	.LVL61
 4746 0368 0100     		.2byte	0x1
 4747 036a 50       		.byte	0x50
 4748 036b 04000000 		.4byte	.LVL61
 4749 036f 14000000 		.4byte	.LFE29
 4750 0373 0400     		.2byte	0x4
 4751 0375 F3       		.byte	0xf3
 4752 0376 01       		.uleb128 0x1
 4753 0377 50       		.byte	0x50
 4754 0378 9F       		.byte	0x9f
 4755 0379 00000000 		.4byte	0
 4756 037d 00000000 		.4byte	0
 4757              	.LLST29:
 4758 0381 00000000 		.4byte	.LVL62
 4759 0385 04000000 		.4byte	.LVL63
 4760 0389 0100     		.2byte	0x1
 4761 038b 50       		.byte	0x50
 4762 038c 04000000 		.4byte	.LVL63
 4763 0390 14000000 		.4byte	.LFE30
 4764 0394 0400     		.2byte	0x4
 4765 0396 F3       		.byte	0xf3
 4766 0397 01       		.uleb128 0x1
 4767 0398 50       		.byte	0x50
 4768 0399 9F       		.byte	0x9f
 4769 039a 00000000 		.4byte	0
 4770 039e 00000000 		.4byte	0
 4771              	.LLST30:
 4772 03a2 00000000 		.4byte	.LVL65
 4773 03a6 08000000 		.4byte	.LVL66
 4774 03aa 0100     		.2byte	0x1
 4775 03ac 50       		.byte	0x50
 4776 03ad 08000000 		.4byte	.LVL66
 4777 03b1 22000000 		.4byte	.LVL70
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 141


 4778 03b5 0100     		.2byte	0x1
 4779 03b7 54       		.byte	0x54
 4780 03b8 00000000 		.4byte	0
 4781 03bc 00000000 		.4byte	0
 4782              	.LLST31:
 4783 03c0 00000000 		.4byte	.LVL71
 4784 03c4 08000000 		.4byte	.LVL72
 4785 03c8 0100     		.2byte	0x1
 4786 03ca 50       		.byte	0x50
 4787 03cb 08000000 		.4byte	.LVL72
 4788 03cf 14000000 		.4byte	.LFE34
 4789 03d3 0400     		.2byte	0x4
 4790 03d5 F3       		.byte	0xf3
 4791 03d6 01       		.uleb128 0x1
 4792 03d7 50       		.byte	0x50
 4793 03d8 9F       		.byte	0x9f
 4794 03d9 00000000 		.4byte	0
 4795 03dd 00000000 		.4byte	0
 4796              	.LLST32:
 4797 03e1 00000000 		.4byte	.LVL74
 4798 03e5 08000000 		.4byte	.LVL75
 4799 03e9 0100     		.2byte	0x1
 4800 03eb 50       		.byte	0x50
 4801 03ec 08000000 		.4byte	.LVL75
 4802 03f0 40000000 		.4byte	.LVL79
 4803 03f4 0100     		.2byte	0x1
 4804 03f6 54       		.byte	0x54
 4805 03f7 00000000 		.4byte	0
 4806 03fb 00000000 		.4byte	0
 4807              	.LLST33:
 4808 03ff 00000000 		.4byte	.LVL74
 4809 0403 40000000 		.4byte	.LVL78
 4810 0407 0200     		.2byte	0x2
 4811 0409 30       		.byte	0x30
 4812 040a 9F       		.byte	0x9f
 4813 040b 40000000 		.4byte	.LVL78
 4814 040f 58000000 		.4byte	.LFE9
 4815 0413 0100     		.2byte	0x1
 4816 0415 50       		.byte	0x50
 4817 0416 00000000 		.4byte	0
 4818 041a 00000000 		.4byte	0
 4819              	.LLST34:
 4820 041e 00000000 		.4byte	.LVL80
 4821 0422 0E000000 		.4byte	.LVL81
 4822 0426 0100     		.2byte	0x1
 4823 0428 50       		.byte	0x50
 4824 0429 0E000000 		.4byte	.LVL81
 4825 042d 44000000 		.4byte	.LFE13
 4826 0431 0400     		.2byte	0x4
 4827 0433 F3       		.byte	0xf3
 4828 0434 01       		.uleb128 0x1
 4829 0435 50       		.byte	0x50
 4830 0436 9F       		.byte	0x9f
 4831 0437 00000000 		.4byte	0
 4832 043b 00000000 		.4byte	0
 4833              	.LLST35:
 4834 043f 00000000 		.4byte	.LVL83
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 142


 4835 0443 18000000 		.4byte	.LVL84
 4836 0447 0100     		.2byte	0x1
 4837 0449 50       		.byte	0x50
 4838 044a 18000000 		.4byte	.LVL84
 4839 044e 48000000 		.4byte	.LFE35
 4840 0452 0400     		.2byte	0x4
 4841 0454 F3       		.byte	0xf3
 4842 0455 01       		.uleb128 0x1
 4843 0456 50       		.byte	0x50
 4844 0457 9F       		.byte	0x9f
 4845 0458 00000000 		.4byte	0
 4846 045c 00000000 		.4byte	0
 4847              	.LLST36:
 4848 0460 00000000 		.4byte	.LVL87
 4849 0464 0C000000 		.4byte	.LVL88
 4850 0468 0200     		.2byte	0x2
 4851 046a 30       		.byte	0x30
 4852 046b 9F       		.byte	0x9f
 4853 046c 0C000000 		.4byte	.LVL88
 4854 0470 10000000 		.4byte	.LVL89
 4855 0474 0200     		.2byte	0x2
 4856 0476 31       		.byte	0x31
 4857 0477 9F       		.byte	0x9f
 4858 0478 10000000 		.4byte	.LVL89
 4859 047c 12000000 		.4byte	.LVL90
 4860 0480 0200     		.2byte	0x2
 4861 0482 32       		.byte	0x32
 4862 0483 9F       		.byte	0x9f
 4863 0484 12000000 		.4byte	.LVL90
 4864 0488 14000000 		.4byte	.LVL91
 4865 048c 0200     		.2byte	0x2
 4866 048e 33       		.byte	0x33
 4867 048f 9F       		.byte	0x9f
 4868 0490 14000000 		.4byte	.LVL91
 4869 0494 54000000 		.4byte	.LFE37
 4870 0498 0200     		.2byte	0x2
 4871 049a 35       		.byte	0x35
 4872 049b 9F       		.byte	0x9f
 4873 049c 00000000 		.4byte	0
 4874 04a0 00000000 		.4byte	0
 4875              	.LLST37:
 4876 04a4 18000000 		.4byte	.LVL93
 4877 04a8 22000000 		.4byte	.LVL94
 4878 04ac 0200     		.2byte	0x2
 4879 04ae 31       		.byte	0x31
 4880 04af 9F       		.byte	0x9f
 4881 04b0 00000000 		.4byte	0
 4882 04b4 00000000 		.4byte	0
 4883              	.LLST39:
 4884 04b8 14000000 		.4byte	.LVL91
 4885 04bc 18000000 		.4byte	.LVL93
 4886 04c0 0600     		.2byte	0x6
 4887 04c2 03       		.byte	0x3
 4888 04c3 00000000 		.4byte	CySysTickServiceCallbacks
 4889 04c7 9F       		.byte	0x9f
 4890 04c8 00000000 		.4byte	0
 4891 04cc 00000000 		.4byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 143


 4892              	.LLST40:
 4893 04d0 14000000 		.4byte	.LVL91
 4894 04d4 18000000 		.4byte	.LVL93
 4895 04d8 0200     		.2byte	0x2
 4896 04da 3F       		.byte	0x3f
 4897 04db 9F       		.byte	0x9f
 4898 04dc 00000000 		.4byte	0
 4899 04e0 00000000 		.4byte	0
 4900              	.LLST41:
 4901 04e4 14000000 		.4byte	.LVL91
 4902 04e8 16000000 		.4byte	.LVL92
 4903 04ec 0500     		.2byte	0x5
 4904 04ee 0C       		.byte	0xc
 4905 04ef 3C000020 		.4byte	0x2000003c
 4906 04f3 16000000 		.4byte	.LVL92
 4907 04f7 18000000 		.4byte	.LVL93
 4908 04fb 0200     		.2byte	0x2
 4909 04fd 73       		.byte	0x73
 4910 04fe 00       		.sleb128 0
 4911 04ff 00000000 		.4byte	0
 4912 0503 00000000 		.4byte	0
 4913              	.LLST42:
 4914 0507 2C000000 		.4byte	.LVL95
 4915 050b 30000000 		.4byte	.LVL96
 4916 050f 0100     		.2byte	0x1
 4917 0511 50       		.byte	0x50
 4918 0512 00000000 		.4byte	0
 4919 0516 00000000 		.4byte	0
 4920              	.LLST43:
 4921 051a 00000000 		.4byte	.LVL100
 4922 051e 04000000 		.4byte	.LVL101
 4923 0522 0100     		.2byte	0x1
 4924 0524 50       		.byte	0x50
 4925 0525 04000000 		.4byte	.LVL101
 4926 0529 10000000 		.4byte	.LFE42
 4927 052d 0400     		.2byte	0x4
 4928 052f F3       		.byte	0xf3
 4929 0530 01       		.uleb128 0x1
 4930 0531 50       		.byte	0x50
 4931 0532 9F       		.byte	0x9f
 4932 0533 00000000 		.4byte	0
 4933 0537 00000000 		.4byte	0
 4934              	.LLST44:
 4935 053b 0A000000 		.4byte	.LVL103
 4936 053f 0E000000 		.4byte	.LVL104
 4937 0543 0200     		.2byte	0x2
 4938 0545 31       		.byte	0x31
 4939 0546 9F       		.byte	0x9f
 4940 0547 00000000 		.4byte	0
 4941 054b 00000000 		.4byte	0
 4942              	.LLST45:
 4943 054f 00000000 		.4byte	.LVL107
 4944 0553 06000000 		.4byte	.LVL108
 4945 0557 0100     		.2byte	0x1
 4946 0559 50       		.byte	0x50
 4947 055a 06000000 		.4byte	.LVL108
 4948 055e 10000000 		.4byte	.LFE49
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 144


 4949 0562 0400     		.2byte	0x4
 4950 0564 F3       		.byte	0xf3
 4951 0565 01       		.uleb128 0x1
 4952 0566 50       		.byte	0x50
 4953 0567 9F       		.byte	0x9f
 4954 0568 00000000 		.4byte	0
 4955 056c 00000000 		.4byte	0
 4956              	.LLST46:
 4957 0570 00000000 		.4byte	.LVL109
 4958 0574 04000000 		.4byte	.LVL110
 4959 0578 0100     		.2byte	0x1
 4960 057a 50       		.byte	0x50
 4961 057b 04000000 		.4byte	.LVL110
 4962 057f 0C000000 		.4byte	.LFE50
 4963 0583 0400     		.2byte	0x4
 4964 0585 F3       		.byte	0xf3
 4965 0586 01       		.uleb128 0x1
 4966 0587 50       		.byte	0x50
 4967 0588 9F       		.byte	0x9f
 4968 0589 00000000 		.4byte	0
 4969 058d 00000000 		.4byte	0
 4970              		.section	.debug_aranges,"",%progbits
 4971 0000 AC010000 		.4byte	0x1ac
 4972 0004 0200     		.2byte	0x2
 4973 0006 00000000 		.4byte	.Ldebug_info0
 4974 000a 04       		.byte	0x4
 4975 000b 00       		.byte	0
 4976 000c 0000     		.2byte	0
 4977 000e 0000     		.2byte	0
 4978 0010 00000000 		.4byte	.LFB2
 4979 0014 14000000 		.4byte	.LFE2-.LFB2
 4980 0018 00000000 		.4byte	.LFB3
 4981 001c 10000000 		.4byte	.LFE3-.LFB3
 4982 0020 00000000 		.4byte	.LFB4
 4983 0024 20000000 		.4byte	.LFE4-.LFB4
 4984 0028 00000000 		.4byte	.LFB5
 4985 002c 34000000 		.4byte	.LFE5-.LFB5
 4986 0030 00000000 		.4byte	.LFB6
 4987 0034 18000000 		.4byte	.LFE6-.LFB6
 4988 0038 00000000 		.4byte	.LFB7
 4989 003c 2C000000 		.4byte	.LFE7-.LFB7
 4990 0040 00000000 		.4byte	.LFB8
 4991 0044 64000000 		.4byte	.LFE8-.LFB8
 4992 0048 00000000 		.4byte	.LFB10
 4993 004c 24000000 		.4byte	.LFE10-.LFB10
 4994 0050 00000000 		.4byte	.LFB11
 4995 0054 10000000 		.4byte	.LFE11-.LFB11
 4996 0058 00000000 		.4byte	.LFB12
 4997 005c 30000000 		.4byte	.LFE12-.LFB12
 4998 0060 00000000 		.4byte	.LFB14
 4999 0064 20000000 		.4byte	.LFE14-.LFB14
 5000 0068 00000000 		.4byte	.LFB15
 5001 006c 10000000 		.4byte	.LFE15-.LFB15
 5002 0070 00000000 		.4byte	.LFB16
 5003 0074 0C000000 		.4byte	.LFE16-.LFB16
 5004 0078 00000000 		.4byte	.LFB17
 5005 007c 14000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 145


 5006 0080 00000000 		.4byte	.LFB18
 5007 0084 10000000 		.4byte	.LFE18-.LFB18
 5008 0088 00000000 		.4byte	.LFB19
 5009 008c 0C000000 		.4byte	.LFE19-.LFB19
 5010 0090 00000000 		.4byte	.LFB20
 5011 0094 0E000000 		.4byte	.LFE20-.LFB20
 5012 0098 00000000 		.4byte	.LFB21
 5013 009c 0C000000 		.4byte	.LFE21-.LFB21
 5014 00a0 00000000 		.4byte	.LFB22
 5015 00a4 10000000 		.4byte	.LFE22-.LFB22
 5016 00a8 00000000 		.4byte	.LFB23
 5017 00ac 10000000 		.4byte	.LFE23-.LFB23
 5018 00b0 00000000 		.4byte	.LFB24
 5019 00b4 34000000 		.4byte	.LFE24-.LFB24
 5020 00b8 00000000 		.4byte	.LFB25
 5021 00bc 20000000 		.4byte	.LFE25-.LFB25
 5022 00c0 00000000 		.4byte	.LFB26
 5023 00c4 14000000 		.4byte	.LFE26-.LFB26
 5024 00c8 00000000 		.4byte	.LFB27
 5025 00cc 18000000 		.4byte	.LFE27-.LFB27
 5026 00d0 00000000 		.4byte	.LFB28
 5027 00d4 14000000 		.4byte	.LFE28-.LFB28
 5028 00d8 00000000 		.4byte	.LFB29
 5029 00dc 14000000 		.4byte	.LFE29-.LFB29
 5030 00e0 00000000 		.4byte	.LFB30
 5031 00e4 14000000 		.4byte	.LFE30-.LFB30
 5032 00e8 00000000 		.4byte	.LFB31
 5033 00ec 04000000 		.4byte	.LFE31-.LFB31
 5034 00f0 00000000 		.4byte	.LFB32
 5035 00f4 18000000 		.4byte	.LFE32-.LFB32
 5036 00f8 00000000 		.4byte	.LFB33
 5037 00fc 2C000000 		.4byte	.LFE33-.LFB33
 5038 0100 00000000 		.4byte	.LFB34
 5039 0104 14000000 		.4byte	.LFE34-.LFB34
 5040 0108 00000000 		.4byte	.LFB9
 5041 010c 58000000 		.4byte	.LFE9-.LFB9
 5042 0110 00000000 		.4byte	.LFB13
 5043 0114 44000000 		.4byte	.LFE13-.LFB13
 5044 0118 00000000 		.4byte	.LFB35
 5045 011c 48000000 		.4byte	.LFE35-.LFB35
 5046 0120 00000000 		.4byte	.LFB37
 5047 0124 54000000 		.4byte	.LFE37-.LFB37
 5048 0128 00000000 		.4byte	.LFB39
 5049 012c 10000000 		.4byte	.LFE39-.LFB39
 5050 0130 00000000 		.4byte	.LFB40
 5051 0134 10000000 		.4byte	.LFE40-.LFB40
 5052 0138 00000000 		.4byte	.LFB38
 5053 013c 18000000 		.4byte	.LFE38-.LFB38
 5054 0140 00000000 		.4byte	.LFB36
 5055 0144 1C000000 		.4byte	.LFE36-.LFB36
 5056 0148 00000000 		.4byte	.LFB41
 5057 014c 10000000 		.4byte	.LFE41-.LFB41
 5058 0150 00000000 		.4byte	.LFB42
 5059 0154 10000000 		.4byte	.LFE42-.LFB42
 5060 0158 00000000 		.4byte	.LFB43
 5061 015c 10000000 		.4byte	.LFE43-.LFB43
 5062 0160 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 146


 5063 0164 10000000 		.4byte	.LFE44-.LFB44
 5064 0168 00000000 		.4byte	.LFB45
 5065 016c 18000000 		.4byte	.LFE45-.LFB45
 5066 0170 00000000 		.4byte	.LFB46
 5067 0174 10000000 		.4byte	.LFE46-.LFB46
 5068 0178 00000000 		.4byte	.LFB47
 5069 017c 10000000 		.4byte	.LFE47-.LFB47
 5070 0180 00000000 		.4byte	.LFB51
 5071 0184 24000000 		.4byte	.LFE51-.LFB51
 5072 0188 00000000 		.4byte	.LFB48
 5073 018c 0C000000 		.4byte	.LFE48-.LFB48
 5074 0190 00000000 		.4byte	.LFB49
 5075 0194 10000000 		.4byte	.LFE49-.LFB49
 5076 0198 00000000 		.4byte	.LFB50
 5077 019c 0C000000 		.4byte	.LFE50-.LFB50
 5078 01a0 00000000 		.4byte	.LFB52
 5079 01a4 74000000 		.4byte	.LFE52-.LFB52
 5080 01a8 00000000 		.4byte	0
 5081 01ac 00000000 		.4byte	0
 5082              		.section	.debug_ranges,"",%progbits
 5083              	.Ldebug_ranges0:
 5084 0000 2C000000 		.4byte	.LBB16
 5085 0004 2E000000 		.4byte	.LBE16
 5086 0008 2E000000 		.4byte	.LBB19
 5087 000c 30000000 		.4byte	.LBE19
 5088 0010 00000000 		.4byte	0
 5089 0014 00000000 		.4byte	0
 5090 0018 04000000 		.4byte	.LBB30
 5091 001c 06000000 		.4byte	.LBE30
 5092 0020 18000000 		.4byte	.LBB43
 5093 0024 1E000000 		.4byte	.LBE43
 5094 0028 20000000 		.4byte	.LBB44
 5095 002c 22000000 		.4byte	.LBE44
 5096 0030 00000000 		.4byte	0
 5097 0034 00000000 		.4byte	0
 5098 0038 08000000 		.4byte	.LBB37
 5099 003c 0A000000 		.4byte	.LBE37
 5100 0040 14000000 		.4byte	.LBB41
 5101 0044 16000000 		.4byte	.LBE41
 5102 0048 16000000 		.4byte	.LBB42
 5103 004c 18000000 		.4byte	.LBE42
 5104 0050 00000000 		.4byte	0
 5105 0054 00000000 		.4byte	0
 5106 0058 04000000 		.4byte	.LBB51
 5107 005c 06000000 		.4byte	.LBE51
 5108 0060 0A000000 		.4byte	.LBB54
 5109 0064 0E000000 		.4byte	.LBE54
 5110 0068 00000000 		.4byte	0
 5111 006c 00000000 		.4byte	0
 5112 0070 00000000 		.4byte	.LFB2
 5113 0074 14000000 		.4byte	.LFE2
 5114 0078 00000000 		.4byte	.LFB3
 5115 007c 10000000 		.4byte	.LFE3
 5116 0080 00000000 		.4byte	.LFB4
 5117 0084 20000000 		.4byte	.LFE4
 5118 0088 00000000 		.4byte	.LFB5
 5119 008c 34000000 		.4byte	.LFE5
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 147


 5120 0090 00000000 		.4byte	.LFB6
 5121 0094 18000000 		.4byte	.LFE6
 5122 0098 00000000 		.4byte	.LFB7
 5123 009c 2C000000 		.4byte	.LFE7
 5124 00a0 00000000 		.4byte	.LFB8
 5125 00a4 64000000 		.4byte	.LFE8
 5126 00a8 00000000 		.4byte	.LFB10
 5127 00ac 24000000 		.4byte	.LFE10
 5128 00b0 00000000 		.4byte	.LFB11
 5129 00b4 10000000 		.4byte	.LFE11
 5130 00b8 00000000 		.4byte	.LFB12
 5131 00bc 30000000 		.4byte	.LFE12
 5132 00c0 00000000 		.4byte	.LFB14
 5133 00c4 20000000 		.4byte	.LFE14
 5134 00c8 00000000 		.4byte	.LFB15
 5135 00cc 10000000 		.4byte	.LFE15
 5136 00d0 00000000 		.4byte	.LFB16
 5137 00d4 0C000000 		.4byte	.LFE16
 5138 00d8 00000000 		.4byte	.LFB17
 5139 00dc 14000000 		.4byte	.LFE17
 5140 00e0 00000000 		.4byte	.LFB18
 5141 00e4 10000000 		.4byte	.LFE18
 5142 00e8 00000000 		.4byte	.LFB19
 5143 00ec 0C000000 		.4byte	.LFE19
 5144 00f0 00000000 		.4byte	.LFB20
 5145 00f4 0E000000 		.4byte	.LFE20
 5146 00f8 00000000 		.4byte	.LFB21
 5147 00fc 0C000000 		.4byte	.LFE21
 5148 0100 00000000 		.4byte	.LFB22
 5149 0104 10000000 		.4byte	.LFE22
 5150 0108 00000000 		.4byte	.LFB23
 5151 010c 10000000 		.4byte	.LFE23
 5152 0110 00000000 		.4byte	.LFB24
 5153 0114 34000000 		.4byte	.LFE24
 5154 0118 00000000 		.4byte	.LFB25
 5155 011c 20000000 		.4byte	.LFE25
 5156 0120 00000000 		.4byte	.LFB26
 5157 0124 14000000 		.4byte	.LFE26
 5158 0128 00000000 		.4byte	.LFB27
 5159 012c 18000000 		.4byte	.LFE27
 5160 0130 00000000 		.4byte	.LFB28
 5161 0134 14000000 		.4byte	.LFE28
 5162 0138 00000000 		.4byte	.LFB29
 5163 013c 14000000 		.4byte	.LFE29
 5164 0140 00000000 		.4byte	.LFB30
 5165 0144 14000000 		.4byte	.LFE30
 5166 0148 00000000 		.4byte	.LFB31
 5167 014c 04000000 		.4byte	.LFE31
 5168 0150 00000000 		.4byte	.LFB32
 5169 0154 18000000 		.4byte	.LFE32
 5170 0158 00000000 		.4byte	.LFB33
 5171 015c 2C000000 		.4byte	.LFE33
 5172 0160 00000000 		.4byte	.LFB34
 5173 0164 14000000 		.4byte	.LFE34
 5174 0168 00000000 		.4byte	.LFB9
 5175 016c 58000000 		.4byte	.LFE9
 5176 0170 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 148


 5177 0174 44000000 		.4byte	.LFE13
 5178 0178 00000000 		.4byte	.LFB35
 5179 017c 48000000 		.4byte	.LFE35
 5180 0180 00000000 		.4byte	.LFB37
 5181 0184 54000000 		.4byte	.LFE37
 5182 0188 00000000 		.4byte	.LFB39
 5183 018c 10000000 		.4byte	.LFE39
 5184 0190 00000000 		.4byte	.LFB40
 5185 0194 10000000 		.4byte	.LFE40
 5186 0198 00000000 		.4byte	.LFB38
 5187 019c 18000000 		.4byte	.LFE38
 5188 01a0 00000000 		.4byte	.LFB36
 5189 01a4 1C000000 		.4byte	.LFE36
 5190 01a8 00000000 		.4byte	.LFB41
 5191 01ac 10000000 		.4byte	.LFE41
 5192 01b0 00000000 		.4byte	.LFB42
 5193 01b4 10000000 		.4byte	.LFE42
 5194 01b8 00000000 		.4byte	.LFB43
 5195 01bc 10000000 		.4byte	.LFE43
 5196 01c0 00000000 		.4byte	.LFB44
 5197 01c4 10000000 		.4byte	.LFE44
 5198 01c8 00000000 		.4byte	.LFB45
 5199 01cc 18000000 		.4byte	.LFE45
 5200 01d0 00000000 		.4byte	.LFB46
 5201 01d4 10000000 		.4byte	.LFE46
 5202 01d8 00000000 		.4byte	.LFB47
 5203 01dc 10000000 		.4byte	.LFE47
 5204 01e0 00000000 		.4byte	.LFB51
 5205 01e4 24000000 		.4byte	.LFE51
 5206 01e8 00000000 		.4byte	.LFB48
 5207 01ec 0C000000 		.4byte	.LFE48
 5208 01f0 00000000 		.4byte	.LFB49
 5209 01f4 10000000 		.4byte	.LFE49
 5210 01f8 00000000 		.4byte	.LFB50
 5211 01fc 0C000000 		.4byte	.LFE50
 5212 0200 00000000 		.4byte	.LFB52
 5213 0204 74000000 		.4byte	.LFE52
 5214 0208 00000000 		.4byte	0
 5215 020c 00000000 		.4byte	0
 5216              		.section	.debug_line,"",%progbits
 5217              	.Ldebug_line0:
 5218 0000 43050000 		.section	.debug_str,"MS",%progbits,1
 5218      02004D00 
 5218      00000201 
 5218      FB0E0D00 
 5218      01010101 
 5219              	.LASF34:
 5220 0000 72616D56 		.ascii	"ramVectorTable\000"
 5220      6563746F 
 5220      72546162 
 5220      6C6500
 5221              	.LASF10:
 5222 000f 75696E74 		.ascii	"uint16\000"
 5222      313600
 5223              	.LASF58:
 5224 0016 696E7453 		.ascii	"intState\000"
 5224      74617465 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 149


 5224      00
 5225              	.LASF39:
 5226 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5226      73436C6B 
 5226      57726974 
 5226      65486663 
 5226      6C6B4469 
 5227              	.LASF108:
 5228 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5228      73436C6B 
 5228      50756D70 
 5228      436F6E66 
 5228      696700
 5229              	.LASF33:
 5230 004b 6F6C6449 		.ascii	"oldIsr\000"
 5230      737200
 5231              	.LASF97:
 5232 0052 72657456 		.ascii	"retVal\000"
 5232      616C00
 5233              	.LASF57:
 5234 0059 43794469 		.ascii	"CyDisableInts\000"
 5234      7361626C 
 5234      65496E74 
 5234      7300
 5235              	.LASF7:
 5236 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 5236      206C6F6E 
 5236      6720756E 
 5236      7369676E 
 5236      65642069 
 5237              	.LASF48:
 5238 007e 70617261 		.ascii	"parameters\000"
 5238      6D657465 
 5238      727300
 5239              	.LASF59:
 5240 0089 4379456E 		.ascii	"CyEnableInts\000"
 5240      61626C65 
 5240      496E7473 
 5240      00
 5241              	.LASF74:
 5242 0096 4379536F 		.ascii	"CySoftwareReset\000"
 5242      66747761 
 5242      72655265 
 5242      73657400 
 5243              	.LASF86:
 5244 00a6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5244      73546963 
 5244      6B456E61 
 5244      626C6549 
 5244      6E746572 
 5245              	.LASF69:
 5246 00bf 4379496E 		.ascii	"CyIntGetState\000"
 5246      74476574 
 5246      53746174 
 5246      6500
 5247              	.LASF6:
 5248 00cd 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 150


 5248      206C6F6E 
 5248      6720696E 
 5248      7400
 5249              	.LASF0:
 5250 00db 7369676E 		.ascii	"signed char\000"
 5250      65642063 
 5250      68617200 
 5251              	.LASF47:
 5252 00e7 66726571 		.ascii	"freq\000"
 5252      00
 5253              	.LASF83:
 5254 00ec 43794465 		.ascii	"CyDelayFreq\000"
 5254      6C617946 
 5254      72657100 
 5255              	.LASF37:
 5256 00f8 696E7465 		.ascii	"interruptState\000"
 5256      72727570 
 5256      74537461 
 5256      746500
 5257              	.LASF91:
 5258 0107 43795379 		.ascii	"CySysTickGetReload\000"
 5258      73546963 
 5258      6B476574 
 5258      52656C6F 
 5258      616400
 5259              	.LASF4:
 5260 011a 6C6F6E67 		.ascii	"long int\000"
 5260      20696E74 
 5260      00
 5261              	.LASF70:
 5262 0123 4379496E 		.ascii	"CyIntDisable\000"
 5262      74446973 
 5262      61626C65 
 5262      00
 5263              	.LASF49:
 5264 0130 72656756 		.ascii	"regValues\000"
 5264      616C7565 
 5264      7300
 5265              	.LASF9:
 5266 013a 75696E74 		.ascii	"uint8\000"
 5266      3800
 5267              	.LASF103:
 5268 0140 63796465 		.ascii	"cydelayFreqKhz\000"
 5268      6C617946 
 5268      7265714B 
 5268      687A00
 5269              	.LASF42:
 5270 014f 656E6162 		.ascii	"enable\000"
 5270      6C6500
 5271              	.LASF13:
 5272 0156 646F7562 		.ascii	"double\000"
 5272      6C6500
 5273              	.LASF66:
 5274 015d 73686966 		.ascii	"shift\000"
 5274      7400
 5275              	.LASF23:
 5276 0163 43795379 		.ascii	"CySysLvdClearInterrupt\000"
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 151


 5276      734C7664 
 5276      436C6561 
 5276      72496E74 
 5276      65727275 
 5277              	.LASF11:
 5278 017a 75696E74 		.ascii	"uint32\000"
 5278      333200
 5279              	.LASF29:
 5280 0181 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5280      73436C6B 
 5280      45636F52 
 5280      65616453 
 5280      74617475 
 5281              	.LASF60:
 5282 0197 6D61736B 		.ascii	"mask\000"
 5282      00
 5283              	.LASF53:
 5284 019c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5284      73436C6B 
 5284      47657453 
 5284      7973636C 
 5284      6B536F75 
 5285              	.LASF67:
 5286 01b4 4379496E 		.ascii	"CyIntGetPriority\000"
 5286      74476574 
 5286      5072696F 
 5286      72697479 
 5286      00
 5287              	.LASF105:
 5288 01c5 63796465 		.ascii	"cydelay32kMs\000"
 5288      6C617933 
 5288      326B4D73 
 5288      00
 5289              	.LASF84:
 5290 01d2 43795379 		.ascii	"CySysTickInit\000"
 5290      73546963 
 5290      6B496E69 
 5290      7400
 5291              	.LASF28:
 5292 01e0 76616C75 		.ascii	"value\000"
 5292      6500
 5293              	.LASF27:
 5294 01e6 636C6F63 		.ascii	"clockSource\000"
 5294      6B536F75 
 5294      72636500 
 5295              	.LASF99:
 5296 01f2 43794765 		.ascii	"CyGetUniqueId\000"
 5296      74556E69 
 5296      71756549 
 5296      6400
 5297              	.LASF94:
 5298 0200 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5298      73546963 
 5298      6B476574 
 5298      436F756E 
 5298      74466C61 
 5299              	.LASF8:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 152


 5300 0216 756E7369 		.ascii	"unsigned int\000"
 5300      676E6564 
 5300      20696E74 
 5300      00
 5301              	.LASF24:
 5302 0223 43795379 		.ascii	"CySysTickClear\000"
 5302      73546963 
 5302      6B436C65 
 5302      617200
 5303              	.LASF5:
 5304 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 5304      20756E73 
 5304      69676E65 
 5304      6420696E 
 5304      7400
 5305              	.LASF90:
 5306 0244 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5306      734C7664 
 5306      47657449 
 5306      6E746572 
 5306      72757074 
 5307              	.LASF36:
 5308 025f 43795379 		.ascii	"CySysClkImoStop\000"
 5308      73436C6B 
 5308      496D6F53 
 5308      746F7000 
 5309              	.LASF109:
 5310 026f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5310      74657243 
 5310      72697469 
 5310      63616C53 
 5310      65637469 
 5311              	.LASF71:
 5312 0286 4379496E 		.ascii	"CyIntSetPending\000"
 5312      74536574 
 5312      50656E64 
 5312      696E6700 
 5313              	.LASF98:
 5314 0296 43795379 		.ascii	"CySysTickGetCallback\000"
 5314      73546963 
 5314      6B476574 
 5314      43616C6C 
 5314      6261636B 
 5315              	.LASF54:
 5316 02ab 43795379 		.ascii	"CySysGetResetReason\000"
 5316      73476574 
 5316      52657365 
 5316      74526561 
 5316      736F6E00 
 5317              	.LASF3:
 5318 02bf 73686F72 		.ascii	"short unsigned int\000"
 5318      7420756E 
 5318      7369676E 
 5318      65642069 
 5318      6E7400
 5319              	.LASF25:
 5320 02d2 43795379 		.ascii	"CySysTickSetClockSource\000"
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 153


 5320      73546963 
 5320      6B536574 
 5320      436C6F63 
 5320      6B536F75 
 5321              	.LASF62:
 5322 02ea 4379496E 		.ascii	"CyIntSetVector\000"
 5322      74536574 
 5322      56656374 
 5322      6F7200
 5323              	.LASF31:
 5324 02f9 6E756D62 		.ascii	"number\000"
 5324      657200
 5325              	.LASF65:
 5326 0300 7072696F 		.ascii	"priority\000"
 5326      72697479 
 5326      00
 5327              	.LASF46:
 5328 0309 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5328      73436C6B 
 5328      57726974 
 5328      65496D6F 
 5328      46726571 
 5329              	.LASF30:
 5330 031e 4379496E 		.ascii	"CyIntSetSysVector\000"
 5330      74536574 
 5330      53797356 
 5330      6563746F 
 5330      7200
 5331              	.LASF40:
 5332 0330 43795379 		.ascii	"CySysEnablePumpClock\000"
 5332      73456E61 
 5332      626C6550 
 5332      756D7043 
 5332      6C6F636B 
 5333              	.LASF17:
 5334 0345 72656733 		.ascii	"reg32\000"
 5334      3200
 5335              	.LASF88:
 5336 034b 43795379 		.ascii	"CySysTickStart\000"
 5336      73546963 
 5336      6B537461 
 5336      727400
 5337              	.LASF56:
 5338 035a 72657475 		.ascii	"returnStatus\000"
 5338      726E5374 
 5338      61747573 
 5338      00
 5339              	.LASF20:
 5340 0367 73697A65 		.ascii	"sizetype\000"
 5340      74797065 
 5340      00
 5341              	.LASF106:
 5342 0370 43795379 		.ascii	"CySysTickInitVar\000"
 5342      73546963 
 5342      6B496E69 
 5342      74566172 
 5342      00
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 154


 5343              	.LASF72:
 5344 0381 4379496E 		.ascii	"CyIntClearPending\000"
 5344      74436C65 
 5344      61725065 
 5344      6E64696E 
 5344      6700
 5345              	.LASF19:
 5346 0393 6C6F6E67 		.ascii	"long double\000"
 5346      20646F75 
 5346      626C6500 
 5347              	.LASF32:
 5348 039f 61646472 		.ascii	"address\000"
 5348      65737300 
 5349              	.LASF112:
 5350 03a7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5350      43313120 
 5350      352E342E 
 5350      31203230 
 5350      31363036 
 5351 03da 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5351      20726576 
 5351      6973696F 
 5351      6E203233 
 5351      37373135 
 5352 040d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5352      66756E63 
 5352      74696F6E 
 5352      2D736563 
 5352      74696F6E 
 5353              	.LASF43:
 5354 0435 73797363 		.ascii	"sysclkSource\000"
 5354      6C6B536F 
 5354      75726365 
 5354      00
 5355              	.LASF96:
 5356 0442 66756E63 		.ascii	"function\000"
 5356      74696F6E 
 5356      00
 5357              	.LASF107:
 5358 044b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5358      6F467265 
 5358      714D687A 
 5358      32526567 
 5358      00
 5359              	.LASF92:
 5360 045c 43795379 		.ascii	"CySysTickGetValue\000"
 5360      73546963 
 5360      6B476574 
 5360      56616C75 
 5360      6500
 5361              	.LASF102:
 5362 046e 63796465 		.ascii	"cydelayFreqHz\000"
 5362      6C617946 
 5362      72657148 
 5362      7A00
 5363              	.LASF64:
 5364 047c 4379496E 		.ascii	"CyIntSetPriority\000"
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 155


 5364      74536574 
 5364      5072696F 
 5364      72697479 
 5364      00
 5365              	.LASF12:
 5366 048d 666C6F61 		.ascii	"float\000"
 5366      7400
 5367              	.LASF110:
 5368 0493 43794578 		.ascii	"CyExitCriticalSection\000"
 5368      69744372 
 5368      69746963 
 5368      616C5365 
 5368      6374696F 
 5369              	.LASF81:
 5370 04a9 43795379 		.ascii	"CySysLvdEnable\000"
 5370      734C7664 
 5370      456E6162 
 5370      6C6500
 5371              	.LASF21:
 5372 04b8 63795379 		.ascii	"cySysTickCallback\000"
 5372      73546963 
 5372      6B43616C 
 5372      6C626163 
 5372      6B00
 5373              	.LASF63:
 5374 04ca 4379496E 		.ascii	"CyIntGetVector\000"
 5374      74476574 
 5374      56656374 
 5374      6F7200
 5375              	.LASF76:
 5376 04d9 6D696C6C 		.ascii	"milliseconds\000"
 5376      69736563 
 5376      6F6E6473 
 5376      00
 5377              	.LASF111:
 5378 04e6 43794465 		.ascii	"CyDelayCycles\000"
 5378      6C617943 
 5378      79636C65 
 5378      7300
 5379              	.LASF16:
 5380 04f4 72656738 		.ascii	"reg8\000"
 5380      00
 5381              	.LASF82:
 5382 04f9 74687265 		.ascii	"threshold\000"
 5382      73686F6C 
 5382      6400
 5383              	.LASF73:
 5384 0503 43794861 		.ascii	"CyHalt\000"
 5384      6C7400
 5385              	.LASF1:
 5386 050a 756E7369 		.ascii	"unsigned char\000"
 5386      676E6564 
 5386      20636861 
 5386      7200
 5387              	.LASF55:
 5388 0518 72656173 		.ascii	"reason\000"
 5388      6F6E00
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 156


 5389              	.LASF2:
 5390 051f 73686F72 		.ascii	"short int\000"
 5390      7420696E 
 5390      7400
 5391              	.LASF68:
 5392 0529 4379496E 		.ascii	"CyIntEnable\000"
 5392      74456E61 
 5392      626C6500 
 5393              	.LASF61:
 5394 0535 4379496E 		.ascii	"CyIntGetSysVector\000"
 5394      74476574 
 5394      53797356 
 5394      6563746F 
 5394      7200
 5395              	.LASF41:
 5396 0547 636C6B53 		.ascii	"clkSelect\000"
 5396      656C6563 
 5396      7400
 5397              	.LASF79:
 5398 0551 43795379 		.ascii	"CySysClkEcoStart\000"
 5398      73436C6B 
 5398      45636F53 
 5398      74617274 
 5398      00
 5399              	.LASF114:
 5400 0562 433A5C55 		.ascii	"C:\\Users\\7709\\Desktop\\BLE\\peripheral\\BLE_Peri"
 5400      73657273 
 5400      5C373730 
 5400      395C4465 
 5400      736B746F 
 5401 058f 70686572 		.ascii	"pheral\\BLE_Peripheral.cydsn\000"
 5401      616C5C42 
 5401      4C455F50 
 5401      65726970 
 5401      68657261 
 5402              	.LASF77:
 5403 05ab 43794465 		.ascii	"CyDelayUs\000"
 5403      6C617955 
 5403      7300
 5404              	.LASF115:
 5405 05b5 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5405      73546963 
 5405      6B536572 
 5405      76696365 
 5405      43616C6C 
 5406              	.LASF14:
 5407 05cf 63686172 		.ascii	"char\000"
 5407      00
 5408              	.LASF18:
 5409 05d4 63796973 		.ascii	"cyisraddress\000"
 5409      72616464 
 5409      72657373 
 5409      00
 5410              	.LASF87:
 5411 05e1 43795379 		.ascii	"CySysTickEnable\000"
 5411      73546963 
 5411      6B456E61 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 157


 5411      626C6500 
 5412              	.LASF44:
 5413 05f1 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5413      73436C6B 
 5413      57726974 
 5413      65537973 
 5413      636C6B44 
 5414              	.LASF95:
 5415 0608 43795379 		.ascii	"CySysTickSetCallback\000"
 5415      73546963 
 5415      6B536574 
 5415      43616C6C 
 5415      6261636B 
 5416              	.LASF101:
 5417 061d 43795379 		.ascii	"CySysTickCallbacks\000"
 5417      73546963 
 5417      6B43616C 
 5417      6C626163 
 5417      6B7300
 5418              	.LASF100:
 5419 0630 756E6971 		.ascii	"uniqueId\000"
 5419      75654964 
 5419      00
 5420              	.LASF75:
 5421 0639 43794465 		.ascii	"CyDelay\000"
 5421      6C617900 
 5422              	.LASF93:
 5423 0641 43795379 		.ascii	"CySysTickGetClockSource\000"
 5423      73546963 
 5423      6B476574 
 5423      436C6F63 
 5423      6B536F75 
 5424              	.LASF89:
 5425 0659 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5425      73546963 
 5425      6B446973 
 5425      61626C65 
 5425      496E7465 
 5426              	.LASF52:
 5427 0673 43795379 		.ascii	"CySysLvdDisable\000"
 5427      734C7664 
 5427      44697361 
 5427      626C6500 
 5428              	.LASF104:
 5429 0683 63796465 		.ascii	"cydelayFreqMhz\000"
 5429      6C617946 
 5429      7265714D 
 5429      687A00
 5430              	.LASF50:
 5431 0692 43795379 		.ascii	"CySysClkEcoStop\000"
 5431      73436C6B 
 5431      45636F53 
 5431      746F7000 
 5432              	.LASF85:
 5433 06a2 43795379 		.ascii	"CySysTickStop\000"
 5433      73546963 
 5433      6B53746F 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccBNskOL.s 			page 158


 5433      7000
 5434              	.LASF80:
 5435 06b0 74696D65 		.ascii	"timeoutUs\000"
 5435      6F757455 
 5435      7300
 5436              	.LASF45:
 5437 06ba 64697669 		.ascii	"divider\000"
 5437      64657200 
 5438              	.LASF51:
 5439 06c2 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5439      73436C6B 
 5439      57726974 
 5439      6545636F 
 5439      44697600 
 5440              	.LASF15:
 5441 06d6 63797374 		.ascii	"cystatus\000"
 5441      61747573 
 5441      00
 5442              	.LASF35:
 5443 06df 43795379 		.ascii	"CySysClkImoStart\000"
 5443      73436C6B 
 5443      496D6F53 
 5443      74617274 
 5443      00
 5444              	.LASF113:
 5445 06f0 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5445      72617465 
 5445      645F536F 
 5445      75726365 
 5445      5C50536F 
 5446              	.LASF78:
 5447 070f 6D696372 		.ascii	"microseconds\000"
 5447      6F736563 
 5447      6F6E6473 
 5447      00
 5448              	.LASF38:
 5449 071c 746D7052 		.ascii	"tmpReg\000"
 5449      656700
 5450              	.LASF26:
 5451 0723 43795379 		.ascii	"CySysTickSetReload\000"
 5451      73546963 
 5451      6B536574 
 5451      52656C6F 
 5451      616400
 5452              	.LASF22:
 5453 0736 72657475 		.ascii	"returnValue\000"
 5453      726E5661 
 5453      6C756500 
 5454              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
