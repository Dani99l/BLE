ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_1_IsBitSet,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	RTC_1_IsBitSet, %function
  24              	RTC_1_IsBitSet:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC4\\RTC_1.h"
   1:Generated_Source\PSoC4/RTC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC_1.h **** * \file Name: RTC_1.h
   3:Generated_Source\PSoC4/RTC_1.h **** * \version 1.10
   4:Generated_Source\PSoC4/RTC_1.h **** *
   5:Generated_Source\PSoC4/RTC_1.h **** * \brief
   6:Generated_Source\PSoC4/RTC_1.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC_1.h **** *
   8:Generated_Source\PSoC4/RTC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC_1.h **** * Copyright 2015-2016, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/RTC_1.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/RTC_1.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/RTC_1.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/RTC_1.h **** 
  15:Generated_Source\PSoC4/RTC_1.h **** #if !defined(CY_RTC_P4_RTC_1_H)
  16:Generated_Source\PSoC4/RTC_1.h **** #define CY_RTC_P4_RTC_1_H
  17:Generated_Source\PSoC4/RTC_1.h **** 
  18:Generated_Source\PSoC4/RTC_1.h **** #include <cytypes.h>
  19:Generated_Source\PSoC4/RTC_1.h **** #include <CyLib.h>
  20:Generated_Source\PSoC4/RTC_1.h **** 
  21:Generated_Source\PSoC4/RTC_1.h **** 
  22:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
  23:Generated_Source\PSoC4/RTC_1.h **** *    Data types definition
  24:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  25:Generated_Source\PSoC4/RTC_1.h **** 
  26:Generated_Source\PSoC4/RTC_1.h **** typedef enum
  27:Generated_Source\PSoC4/RTC_1.h **** {
  28:Generated_Source\PSoC4/RTC_1.h ****     RTC_1_DST_DATE_RELATIVE = 0u,
  29:Generated_Source\PSoC4/RTC_1.h ****     RTC_1_DST_DATE_FIXED = 1u
  30:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DST_DATETYPE_ENUM;
  31:Generated_Source\PSoC4/RTC_1.h **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 2


  32:Generated_Source\PSoC4/RTC_1.h **** /**
  33:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_structures
  34:Generated_Source\PSoC4/RTC_1.h **** * @{
  35:Generated_Source\PSoC4/RTC_1.h **** */
  36:Generated_Source\PSoC4/RTC_1.h **** 
  37:Generated_Source\PSoC4/RTC_1.h **** /**
  38:Generated_Source\PSoC4/RTC_1.h **** * This is the data structure that is used to save the current time and date 
  39:Generated_Source\PSoC4/RTC_1.h **** * (RTC_currentTimeDate), and Alarm time and date (RTC_alarmCfgTimeDate).
  40:Generated_Source\PSoC4/RTC_1.h **** */
  41:Generated_Source\PSoC4/RTC_1.h **** typedef struct
  42:Generated_Source\PSoC4/RTC_1.h **** {
  43:Generated_Source\PSoC4/RTC_1.h ****     uint32 time;
  44:Generated_Source\PSoC4/RTC_1.h ****     uint32 date;
  45:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfWeek;
  46:Generated_Source\PSoC4/RTC_1.h ****     uint32 status;
  47:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DATE_TIME;
  48:Generated_Source\PSoC4/RTC_1.h **** 
  49:Generated_Source\PSoC4/RTC_1.h **** /**
  50:Generated_Source\PSoC4/RTC_1.h **** * This is the data structure that is used to save time and date values for 
  51:Generated_Source\PSoC4/RTC_1.h **** * Daylight Savings Time Start and Stop (RTC_dstTimeDateStart and 
  52:Generated_Source\PSoC4/RTC_1.h **** * RTC_dstTimeDateStop).
  53:Generated_Source\PSoC4/RTC_1.h **** */
  54:Generated_Source\PSoC4/RTC_1.h **** typedef struct
  55:Generated_Source\PSoC4/RTC_1.h **** {
  56:Generated_Source\PSoC4/RTC_1.h ****     uint32 hour;
  57:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfWeek;
  58:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfMonth;
  59:Generated_Source\PSoC4/RTC_1.h ****     uint32 weekOfMonth;
  60:Generated_Source\PSoC4/RTC_1.h ****     uint32 month;
  61:Generated_Source\PSoC4/RTC_1.h ****     uint8  timeFormat;
  62:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DST_TIME;
  63:Generated_Source\PSoC4/RTC_1.h **** 
  64:Generated_Source\PSoC4/RTC_1.h **** /** @} structures */
  65:Generated_Source\PSoC4/RTC_1.h **** 
  66:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
  67:Generated_Source\PSoC4/RTC_1.h **** *    Enumerated Types and Parameters
  68:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  69:Generated_Source\PSoC4/RTC_1.h **** /* Time Format setting constants */
  70:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__HOUR_12 1
  71:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__HOUR_24 0
  72:Generated_Source\PSoC4/RTC_1.h **** 
  73:Generated_Source\PSoC4/RTC_1.h **** /*  Date Format setting constants */
  74:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MM_DD_YYYY 0
  75:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__DD_MM_YYYY 1
  76:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__YYYY_MM_DD 2
  77:Generated_Source\PSoC4/RTC_1.h **** 
  78:Generated_Source\PSoC4/RTC_1.h **** /* Date Type setting constants */
  79:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__RELATIVE 0
  80:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIXED 1
  81:Generated_Source\PSoC4/RTC_1.h **** 
  82:Generated_Source\PSoC4/RTC_1.h **** /* DST Hour setting constants */
  83:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0000 0
  84:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0100 1
  85:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0200 2
  86:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0300 3
  87:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0400 4
  88:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0500 5
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 3


  89:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0600 6
  90:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0700 7
  91:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0800 8
  92:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0900 9
  93:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1000 10
  94:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1100 11
  95:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1200 12
  96:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1300 13
  97:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1400 14
  98:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1500 15
  99:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1600 16
 100:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1700 17
 101:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1800 18
 102:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1900 19
 103:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2000 20
 104:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2100 21
 105:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2200 22
 106:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2300 23
 107:Generated_Source\PSoC4/RTC_1.h **** 
 108:Generated_Source\PSoC4/RTC_1.h **** /* DST DayOfWeek setting constants */
 109:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SUNDAY 1
 110:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MONDAY 2
 111:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__TUESDAY 3
 112:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__WEDNESDAY 4
 113:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__THURSDAY 5
 114:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FRIDAY 6
 115:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SATURDAY 7
 116:Generated_Source\PSoC4/RTC_1.h **** 
 117:Generated_Source\PSoC4/RTC_1.h **** /* DST Month setting constants */
 118:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JAN 1
 119:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FEB 2
 120:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MAR 3
 121:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__APR 4
 122:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MAY 5
 123:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JUN 6
 124:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JUL 7
 125:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__AUG 8
 126:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SEP 9
 127:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__OCT 10
 128:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__NOV 11
 129:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__DEC 12
 130:Generated_Source\PSoC4/RTC_1.h **** 
 131:Generated_Source\PSoC4/RTC_1.h **** /* DST WeekOfMonth setting constants */
 132:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIRST 1
 133:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SECOND 2
 134:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__THIRD 3
 135:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FOURTH 4
 136:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIFTH 5
 137:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__LAST 6
 138:Generated_Source\PSoC4/RTC_1.h **** 
 139:Generated_Source\PSoC4/RTC_1.h **** 
 140:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DATA_FORMAT     (1u)
 141:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_TIME_FORMAT     (0u)
 142:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_UPDATE_MODE     (0u)
 143:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_SECOND          (0u)
 144:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_MINUTE          (0u)
 145:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_HOUR            (12u)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 4


 146:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DAY             (4u)
 147:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_MONTH           (12u)
 148:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_YEAR            (2017u)
 149:Generated_Source\PSoC4/RTC_1.h **** 
 150:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_ALARM_STATUS    (0u)
 151:Generated_Source\PSoC4/RTC_1.h **** 
 152:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STATUS      (0u)
 153:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_DATE_TYPE   (0u)
 154:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_MONTH (3uL)
 155:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_WOM   (6uL)
 156:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_DOM   (22uL)
 157:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_DOW   (1uL)
 158:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_HRS   (0uL)
 159:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_MONTH  (10uL)
 160:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_DOM    (22uL)
 161:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_DOW    (1uL)
 162:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_WOM    (6uL)
 163:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_HRS    (0uL)
 164:Generated_Source\PSoC4/RTC_1.h **** 
 165:Generated_Source\PSoC4/RTC_1.h **** /* Day of week definitions */
 166:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SUNDAY     (RTC_1__SUNDAY)
 167:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONDAY     (RTC_1__MONDAY)
 168:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TUESDAY    (RTC_1__TUESDAY)
 169:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_WEDNESDAY  (RTC_1__WEDNESDAY)
 170:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_THURSDAY   (RTC_1__THURSDAY)
 171:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FRIDAY     (RTC_1__FRIDAY)
 172:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SATURDAY   (RTC_1__SATURDAY)
 173:Generated_Source\PSoC4/RTC_1.h **** 
 174:Generated_Source\PSoC4/RTC_1.h **** /* DST WeekOfMonth setting constants definitions */
 175:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FIRST      (RTC_1__FIRST)
 176:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECOND     (RTC_1__SECOND)
 177:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_THIRD      (RTC_1__THIRD)
 178:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FOURTH     (RTC_1__FOURTH)
 179:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FIFTH      (RTC_1__FIFTH)
 180:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_LAST       (RTC_1__LAST)
 181:Generated_Source\PSoC4/RTC_1.h **** 
 182:Generated_Source\PSoC4/RTC_1.h **** /* Month definitions */
 183:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JANUARY    (RTC_1__JAN)
 184:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FEBRUARY   (RTC_1__FEB)
 185:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MARCH      (RTC_1__MAR)
 186:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_APRIL      (RTC_1__APR)
 187:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MAY        (RTC_1__MAY)
 188:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JUNE       (RTC_1__JUN)
 189:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JULY       (RTC_1__JUL)
 190:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_AUGUST     (RTC_1__AUG)
 191:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SEPTEMBER  (RTC_1__SEP)
 192:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_OCTOBER    (RTC_1__OCT)
 193:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_NOVEMBER   (RTC_1__NOV)
 194:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DECEMBER   (RTC_1__DEC)
 195:Generated_Source\PSoC4/RTC_1.h **** 
 196:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_PER_WEEK       (7u)
 197:Generated_Source\PSoC4/RTC_1.h **** 
 198:Generated_Source\PSoC4/RTC_1.h **** /* Number of days in month definitions */
 199:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JANUARY     (31u)
 200:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_FEBRUARY    (28u)
 201:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_MARCH       (31u)
 202:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_APRIL       (30u)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 5


 203:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_MAY         (31u)
 204:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JUNE        (30u)
 205:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JULY        (31u)
 206:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_AUGUST      (31u)
 207:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_SEPTEMBER   (30u)
 208:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_OCTOBER     (31u)
 209:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_NOVEMBER    (30u)
 210:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_DECEMBER    (31u)
 211:Generated_Source\PSoC4/RTC_1.h **** 
 212:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONTHS_PER_YEAR     (12uL)
 213:Generated_Source\PSoC4/RTC_1.h **** 
 214:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_PER_DAY       (24uL)
 215:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_PER_HALF_DAY  (12uL)
 216:Generated_Source\PSoC4/RTC_1.h **** 
 217:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_MINUTE  (60uL)
 218:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_HOUR    (3600uL)
 219:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_DAY     (24uL * 3600uL)
 220:Generated_Source\PSoC4/RTC_1.h **** 
 221:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 222:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 223:Generated_Source\PSoC4/RTC_1.h **** 
 224:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_UNIX_TIME_PM   ((12uL * 3600uL) + 1uL)
 225:Generated_Source\PSoC4/RTC_1.h **** 
 226:Generated_Source\PSoC4/RTC_1.h **** /* AM/PM status definitions */
 227:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_AM                 (0u)
 228:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PM                 (1u)
 229:Generated_Source\PSoC4/RTC_1.h **** 
 230:Generated_Source\PSoC4/RTC_1.h **** /* Time format definitions */
 231:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_12_HOURS_FORMAT    (RTC_1__HOUR_12)
 232:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_24_HOURS_FORMAT    (RTC_1__HOUR_24)
 233:Generated_Source\PSoC4/RTC_1.h **** 
 234:Generated_Source\PSoC4/RTC_1.h **** /* UNIX time begins in 1970 year.  */
 235:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_YEAR_0             (1970u)
 236:Generated_Source\PSoC4/RTC_1.h **** 
 237:Generated_Source\PSoC4/RTC_1.h **** /* Definition of date register fields */
 238:Generated_Source\PSoC4/RTC_1.h **** #if(RTC_1_INITIAL_DATA_FORMAT == RTC_1__MM_DD_YYYY)
 239:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (28u)
 240:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (24u)
 241:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (20u)
 242:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (16u)
 243:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (12u)
 244:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (8u)
 245:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (4u)
 246:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (0u)
 247:Generated_Source\PSoC4/RTC_1.h **** #elif(RTC_1_INITIAL_DATA_FORMAT == RTC_1__DD_MM_YYYY)
 248:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (20u)
 249:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (16u)
 250:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (28u)
 251:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (24u)
 252:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (12u)
 253:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (8u)
 254:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (4u)
 255:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (0u)
 256:Generated_Source\PSoC4/RTC_1.h **** #else
 257:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (12u)
 258:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (8u)
 259:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (4u)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 6


 260:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (0u)
 261:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (28u)
 262:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (24u)
 263:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (20u)
 264:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (16u)
 265:Generated_Source\PSoC4/RTC_1.h **** #endif /* (RTC_1_INITIAL_DATA_FORMAT == RTC_1__MM_DD_YYYY) */
 266:Generated_Source\PSoC4/RTC_1.h **** 
 267:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MONTH_MASK          (0x00000001uL << RTC_1_10_MONTH_OFFSET)
 268:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONTH_MASK             (0x0000000FuL << RTC_1_MONTH_OFFSET)
 269:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_DAY_MASK            (0x00000003uL << RTC_1_10_DAY_OFFSET)
 270:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAY_MASK               (0x0000000FuL << RTC_1_DAY_OFFSET)
 271:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_1000_YEAR_MASK         (0x00000003uL << RTC_1_1000_YEAR_OFFSET)
 272:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_100_YEAR_MASK          (0x0000000FuL << RTC_1_100_YEAR_OFFSET)
 273:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_YEAR_MASK           (0x0000000FuL << RTC_1_10_YEAR_OFFSET)
 274:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_YEAR_MASK              (0x0000000FuL << RTC_1_YEAR_OFFSET)
 275:Generated_Source\PSoC4/RTC_1.h **** 
 276:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_MONTH_FULL_MASK       (RTC_1_10_MONTH_MASK  | RTC_1_MONTH_MASK)
 277:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_DAY_FULL_MASK         (RTC_1_10_DAY_MASK    | RTC_1_DAY_MASK)
 278:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_YEAR_FULL_MASK        (RTC_1_1000_YEAR_MASK | RTC_1_100_YEAR_MASK |\
 279:Generated_Source\PSoC4/RTC_1.h ****                                                  RTC_1_10_YEAR_MASK   | RTC_1_YEAR_MASK)
 280:Generated_Source\PSoC4/RTC_1.h **** 
 281:Generated_Source\PSoC4/RTC_1.h **** 
 282:Generated_Source\PSoC4/RTC_1.h **** /* Definition of time register fields */
 283:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TIME_FORMAT_OFFSET     (23u)
 284:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PERIOD_OF_DAY_OFFSET   (22u)
 285:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_HOURS_OFFSET        (20u)
 286:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_OFFSET           (16u)
 287:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MINUTES_OFFSET      (12u)
 288:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_OFFSET         (8u)
 289:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_SECONDS_OFFSET      (4u)
 290:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_OFFSET         (0u)
 291:Generated_Source\PSoC4/RTC_1.h **** 
 292:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TIME_FORMAT_MASK       (0x00000001uL << RTC_1_TIME_FORMAT_OFFSET)
 293:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_1_PERIOD_OF_DAY_OFFSET)
 294:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_HOURS_MASK          (0x00000003uL << RTC_1_10_HOURS_OFFSET)
 295:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_MASK             (0x0000000FuL << RTC_1_HOURS_OFFSET)
 296:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MINUTES_MASK        (0x00000007uL << RTC_1_10_MINUTES_OFFSET)
 297:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_MASK           (0x0000000FuL << RTC_1_MINUTES_OFFSET)
 298:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_SECONDS_MASK        (0x00000007uL << RTC_1_10_SECONDS_OFFSET)
 299:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_MASK           (0x0000000FuL << RTC_1_SECONDS_OFFSET)
 300:Generated_Source\PSoC4/RTC_1.h **** 
 301:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_FULL_MASK        (RTC_1_10_HOURS_MASK   | RTC_1_HOURS_MASK)
 302:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_FULL_MASK      (RTC_1_10_MINUTES_MASK | RTC_1_MINUTES_MASK)
 303:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_FULL_MASK      (RTC_1_10_SECONDS_MASK | RTC_1_SECONDS_MASK)
 304:Generated_Source\PSoC4/RTC_1.h **** 
 305:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_SEC_MASK         (0x00000001uL)
 306:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_MIN_MASK         (0x00000002uL)
 307:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_HOUR_MASK        (0x00000004uL)
 308:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 309:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 310:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_MONTH_MASK       (0x00000020uL)
 311:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_YEAR_MASK        (0x00000040uL)
 312:Generated_Source\PSoC4/RTC_1.h **** 
 313:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_DST_OFFSET      (1u)
 314:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_ALARM_OFFSET    (2u)
 315:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_LY_OFFSET       (3u)
 316:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_AM_PM_OFFSET    (4u)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 7


 317:Generated_Source\PSoC4/RTC_1.h **** 
 318:Generated_Source\PSoC4/RTC_1.h **** /* Definition of the RTC status values. */
 319:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_DST             (1uL << RTC_1_STATUS_DST_OFFSET)
 320:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_LY              (1uL << RTC_1_STATUS_LY_OFFSET)
 321:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_AM_PM           (1uL << RTC_1_STATUS_AM_PM_OFFSET)
 322:Generated_Source\PSoC4/RTC_1.h **** 
 323:Generated_Source\PSoC4/RTC_1.h **** /* Number of bits per one BCD digit. */
 324:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_BCD_NUMBER_SIZE        (4u)
 325:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 326:Generated_Source\PSoC4/RTC_1.h **** 
 327:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 328:Generated_Source\PSoC4/RTC_1.h **** *    Function Prototypes
 329:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 330:Generated_Source\PSoC4/RTC_1.h **** /**
 331:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 332:Generated_Source\PSoC4/RTC_1.h **** * @{
 333:Generated_Source\PSoC4/RTC_1.h **** */
 334:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Start(void);
 335:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Stop(void);
 336:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Init(void);
 337:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetUnixTime(uint64 unixTime);
 338:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetUnixTime(void);
 339:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 340:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetPeriod(void);
 341:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetRefOneSec(void);
 342:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 343:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_GetDateAndTime(RTC_1_DATE_TIME* dateTime);
 344:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetTime(void);
 345:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetDate(void);
 346:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetAlarmDateAndTime(const RTC_1_DATE_TIME* alarmTime);
 347:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_GetAlarmDateAndTime(RTC_1_DATE_TIME* alarmTimeDate);
 348:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetAlarmMask(uint32 mask);
 349:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetAlarmMask(void);
 350:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ReadStatus(void);
 351:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetAlarmStatus(void);
 352:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_ClearAlarmStatus(void);
 353:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDSTStartTime(const RTC_1_DST_TIME* dstStartTime,
 354:Generated_Source\PSoC4/RTC_1.h ****                                               RTC_1_DST_DATETYPE_ENUM type);
 355:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDSTStopTime(const RTC_1_DST_TIME* dstStopTime,
 356:Generated_Source\PSoC4/RTC_1.h ****                                              RTC_1_DST_DATETYPE_ENUM type);
 357:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ConvertBCDToDec(uint32 bcdNum);
 358:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ConvertDecToBCD(uint32 decNum);
 359:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Update(void);
 360:Generated_Source\PSoC4/RTC_1.h **** void*  RTC_1_SetAlarmHandler(void (*CallbackFunction)(void));
 361:Generated_Source\PSoC4/RTC_1.h **** 
 362:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_ConstructDate(uint32 month, uint32 day, uint32 year);
 363:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uin
 364:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 365:Generated_Source\PSoC4/RTC_1.h **** 
 366:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetTimeFormat(uint32 inputTime);
 367:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 368:Generated_Source\PSoC4/RTC_1.h **** 
 369:Generated_Source\PSoC4/RTC_1.h **** /**
 370:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 371:Generated_Source\PSoC4/RTC_1.h **** * @{
 372:Generated_Source\PSoC4/RTC_1.h **** */
 373:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_LeapYear(uint32 year);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 8


 374:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_IsBitSet(uint32 var, uint32 mask);
 375:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetSecond(uint32 inputTime);
 376:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetMinutes(uint32 inputTime);
 377:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetHours(uint32 inputTime);
 378:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetAmPm(uint32 inputTime);
 379:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetDay(uint32 date);
 380:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetMonth(uint32 date);
 381:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetYear(uint32 date);
 382:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 383:Generated_Source\PSoC4/RTC_1.h **** 
 384:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetSecond(uint32 inputTime, uint32 inputSecond);
 385:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetMinutes(uint32 inputTime, uint32 inputMinute);
 386:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetHours(uint32 inputTime, uint32 inputHours);
 387:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 388:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetDay(uint32 inputDate, uint32 inputDay);
 389:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetMonth(uint32 inputDate, uint32 inputMonth);
 390:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetYear(uint32 inputDate, uint32 inputYear);
 391:Generated_Source\PSoC4/RTC_1.h **** 
 392:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_ConstructUnixAlarmTime(const RTC_1_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 393:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetDstUnixTime(const RTC_1_DST_TIME* dstTime);
 394:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 395:Generated_Source\PSoC4/RTC_1.h **** 
 396:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextMinSec(uint32 curVal);
 397:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextHour(uint32 curVal);
 398:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask)
 399:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextMonth(uint32 curMonth);
 400:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextYear(uint32 curYear);
 401:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 402:Generated_Source\PSoC4/RTC_1.h **** 
 403:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_DaysInMonth(uint32 month, uint32 year);
 404:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_DaysBeforeMonth(uint32 month, uint32 year);
 405:Generated_Source\PSoC4/RTC_1.h **** 
 406:Generated_Source\PSoC4/RTC_1.h **** /**
 407:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 408:Generated_Source\PSoC4/RTC_1.h **** * @{
 409:Generated_Source\PSoC4/RTC_1.h **** */
 410:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_UnixToDateTime(RTC_1_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 411:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 412:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 413:Generated_Source\PSoC4/RTC_1.h **** 
 414:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 415:Generated_Source\PSoC4/RTC_1.h **** 
 416:Generated_Source\PSoC4/RTC_1.h **** 
 417:Generated_Source\PSoC4/RTC_1.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 418:Generated_Source\PSoC4/RTC_1.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
 419:Generated_Source\PSoC4/RTC_1.h ****         static void RTC_1_CySysRtcSetCallback(uint32 wdtNumber);
 420:Generated_Source\PSoC4/RTC_1.h ****         static void RTC_1_CySysRtcResetCallback(uint32 wdtNumber);
 421:Generated_Source\PSoC4/RTC_1.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 422:Generated_Source\PSoC4/RTC_1.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 423:Generated_Source\PSoC4/RTC_1.h **** 
 424:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 425:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_IsBitSet
 426:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 427:Generated_Source\PSoC4/RTC_1.h **** *
 428:Generated_Source\PSoC4/RTC_1.h **** * \brief
 429:Generated_Source\PSoC4/RTC_1.h **** *  Checks the state of a bit passed through parameter.
 430:Generated_Source\PSoC4/RTC_1.h **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 9


 431:Generated_Source\PSoC4/RTC_1.h **** * \param
 432:Generated_Source\PSoC4/RTC_1.h **** *  var The variable to be checked.
 433:Generated_Source\PSoC4/RTC_1.h **** * \param
 434:Generated_Source\PSoC4/RTC_1.h **** *  mask The mask for a bit to be checked.
 435:Generated_Source\PSoC4/RTC_1.h **** *
 436:Generated_Source\PSoC4/RTC_1.h **** * \return
 437:Generated_Source\PSoC4/RTC_1.h **** *  0u - Bit is not set.
 438:Generated_Source\PSoC4/RTC_1.h **** * \return
 439:Generated_Source\PSoC4/RTC_1.h **** *  1u - Bit is set.
 440:Generated_Source\PSoC4/RTC_1.h **** *
 441:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 442:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_IsBitSet(uint32 var, uint32 mask)
 443:Generated_Source\PSoC4/RTC_1.h **** {
  27              		.loc 1 443 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
 444:Generated_Source\PSoC4/RTC_1.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
  41              		.loc 1 444 0
  42 000a 7B68     		ldr	r3, [r7, #4]
  43 000c 3A68     		ldr	r2, [r7]
  44 000e 1A40     		ands	r2, r3
  45 0010 3B68     		ldr	r3, [r7]
  46 0012 9A42     		cmp	r2, r3
  47 0014 01D1     		bne	.L2
  48              		.loc 1 444 0 is_stmt 0 discriminator 1
  49 0016 0123     		movs	r3, #1
  50 0018 00E0     		b	.L4
  51              	.L2:
  52              		.loc 1 444 0 discriminator 2
  53 001a 0023     		movs	r3, #0
  54              	.L4:
 445:Generated_Source\PSoC4/RTC_1.h **** }
  55              		.loc 1 445 0 is_stmt 1 discriminator 5
  56 001c 1800     		movs	r0, r3
  57 001e BD46     		mov	sp, r7
  58 0020 02B0     		add	sp, sp, #8
  59              		@ sp needed
  60 0022 80BD     		pop	{r7, pc}
  61              		.cfi_endproc
  62              	.LFE2:
  63              		.size	RTC_1_IsBitSet, .-RTC_1_IsBitSet
  64              		.global	__aeabi_uidivmod
  65              		.section	.text.RTC_1_LeapYear,"ax",%progbits
  66              		.align	2
  67              		.code	16
  68              		.thumb_func
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 10


  69              		.type	RTC_1_LeapYear, %function
  70              	RTC_1_LeapYear:
  71              	.LFB3:
 446:Generated_Source\PSoC4/RTC_1.h **** 
 447:Generated_Source\PSoC4/RTC_1.h **** 
 448:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 449:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_LeapYear
 450:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 451:Generated_Source\PSoC4/RTC_1.h **** *
 452:Generated_Source\PSoC4/RTC_1.h **** * \brief
 453:Generated_Source\PSoC4/RTC_1.h **** * Checks whether the year passed through the parameter is
 454:Generated_Source\PSoC4/RTC_1.h **** * leap or no.
 455:Generated_Source\PSoC4/RTC_1.h **** *
 456:Generated_Source\PSoC4/RTC_1.h **** * \param
 457:Generated_Source\PSoC4/RTC_1.h **** *  year The year to be checked.
 458:Generated_Source\PSoC4/RTC_1.h **** *
 459:Generated_Source\PSoC4/RTC_1.h **** *
 460:Generated_Source\PSoC4/RTC_1.h **** * \return
 461:Generated_Source\PSoC4/RTC_1.h **** *  0u - The year is not leap.
 462:Generated_Source\PSoC4/RTC_1.h **** * \return
 463:Generated_Source\PSoC4/RTC_1.h **** *  1u - The year is leap.
 464:Generated_Source\PSoC4/RTC_1.h **** *
 465:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 466:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_LeapYear(uint32 year)
 467:Generated_Source\PSoC4/RTC_1.h **** {
  72              		.loc 1 467 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 84B0     		sub	sp, sp, #16
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 468:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 469:Generated_Source\PSoC4/RTC_1.h **** 
 470:Generated_Source\PSoC4/RTC_1.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
  85              		.loc 1 470 0
  86 0008 7B68     		ldr	r3, [r7, #4]
  87 000a 0322     		movs	r2, #3
  88 000c 1340     		ands	r3, r2
  89 000e 06D1     		bne	.L6
  90              		.loc 1 470 0 is_stmt 0 discriminator 1
  91 0010 7B68     		ldr	r3, [r7, #4]
  92 0012 6421     		movs	r1, #100
  93 0014 1800     		movs	r0, r3
  94 0016 FFF7FEFF 		bl	__aeabi_uidivmod
  95 001a 0B1E     		subs	r3, r1, #0
  96 001c 07D1     		bne	.L7
  97              	.L6:
  98              		.loc 1 470 0 discriminator 3
  99 001e 7A68     		ldr	r2, [r7, #4]
 100 0020 C823     		movs	r3, #200
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 11


 101 0022 5900     		lsls	r1, r3, #1
 102 0024 1000     		movs	r0, r2
 103 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 104 002a 0B1E     		subs	r3, r1, #0
 105 002c 02D1     		bne	.L8
 106              	.L7:
 471:Generated_Source\PSoC4/RTC_1.h ****     {
 472:Generated_Source\PSoC4/RTC_1.h ****         retVal = 1uL;
 107              		.loc 1 472 0 is_stmt 1
 108 002e 0123     		movs	r3, #1
 109 0030 FB60     		str	r3, [r7, #12]
 110 0032 01E0     		b	.L9
 111              	.L8:
 473:Generated_Source\PSoC4/RTC_1.h ****     }
 474:Generated_Source\PSoC4/RTC_1.h ****     else
 475:Generated_Source\PSoC4/RTC_1.h ****     {
 476:Generated_Source\PSoC4/RTC_1.h ****         retVal = 0uL;
 112              		.loc 1 476 0
 113 0034 0023     		movs	r3, #0
 114 0036 FB60     		str	r3, [r7, #12]
 115              	.L9:
 477:Generated_Source\PSoC4/RTC_1.h ****     }
 478:Generated_Source\PSoC4/RTC_1.h **** 
 479:Generated_Source\PSoC4/RTC_1.h ****     return(retVal);
 116              		.loc 1 479 0
 117 0038 FB68     		ldr	r3, [r7, #12]
 480:Generated_Source\PSoC4/RTC_1.h **** }
 118              		.loc 1 480 0
 119 003a 1800     		movs	r0, r3
 120 003c BD46     		mov	sp, r7
 121 003e 04B0     		add	sp, sp, #16
 122              		@ sp needed
 123 0040 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE3:
 126              		.size	RTC_1_LeapYear, .-RTC_1_LeapYear
 127 0042 C046     		.section	.text.RTC_1_GetSecond,"ax",%progbits
 128              		.align	2
 129              		.code	16
 130              		.thumb_func
 131              		.type	RTC_1_GetSecond, %function
 132              	RTC_1_GetSecond:
 133              	.LFB4:
 481:Generated_Source\PSoC4/RTC_1.h **** 
 482:Generated_Source\PSoC4/RTC_1.h **** 
 483:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 484:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetSecond
 485:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 486:Generated_Source\PSoC4/RTC_1.h **** *
 487:Generated_Source\PSoC4/RTC_1.h **** * \brief
 488:Generated_Source\PSoC4/RTC_1.h **** *  Returns the seconds value from the time value that is passed as a/the parameter.
 489:Generated_Source\PSoC4/RTC_1.h **** *
 490:Generated_Source\PSoC4/RTC_1.h **** * \param
 491:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 492:Generated_Source\PSoC4/RTC_1.h **** *
 493:Generated_Source\PSoC4/RTC_1.h **** * \return
 494:Generated_Source\PSoC4/RTC_1.h **** *  The seconds value.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 12


 495:Generated_Source\PSoC4/RTC_1.h **** *
 496:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 497:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetSecond(uint32 inputTime)
 498:Generated_Source\PSoC4/RTC_1.h **** {
 134              		.loc 1 498 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 84B0     		sub	sp, sp, #16
 143              		.cfi_def_cfa_offset 24
 144 0004 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 499:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 500:Generated_Source\PSoC4/RTC_1.h **** 
 501:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_SECONDS_MASK) >> RTC_1_10_SECONDS_OFFSET) * 10u;
 147              		.loc 1 501 0
 148 0008 7B68     		ldr	r3, [r7, #4]
 149 000a 1B09     		lsrs	r3, r3, #4
 150 000c 0722     		movs	r2, #7
 151 000e 1A40     		ands	r2, r3
 152 0010 1300     		movs	r3, r2
 153 0012 9B00     		lsls	r3, r3, #2
 154 0014 9B18     		adds	r3, r3, r2
 155 0016 5B00     		lsls	r3, r3, #1
 156 0018 FB60     		str	r3, [r7, #12]
 502:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_SECONDS_MASK) >> RTC_1_SECONDS_OFFSET;
 157              		.loc 1 502 0
 158 001a 7B68     		ldr	r3, [r7, #4]
 159 001c 0F22     		movs	r2, #15
 160 001e 1340     		ands	r3, r2
 161 0020 FA68     		ldr	r2, [r7, #12]
 162 0022 D318     		adds	r3, r2, r3
 163 0024 FB60     		str	r3, [r7, #12]
 503:Generated_Source\PSoC4/RTC_1.h **** 
 504:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 164              		.loc 1 504 0
 165 0026 FB68     		ldr	r3, [r7, #12]
 505:Generated_Source\PSoC4/RTC_1.h **** }
 166              		.loc 1 505 0
 167 0028 1800     		movs	r0, r3
 168 002a BD46     		mov	sp, r7
 169 002c 04B0     		add	sp, sp, #16
 170              		@ sp needed
 171 002e 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE4:
 174              		.size	RTC_1_GetSecond, .-RTC_1_GetSecond
 175              		.section	.text.RTC_1_GetMinutes,"ax",%progbits
 176              		.align	2
 177              		.code	16
 178              		.thumb_func
 179              		.type	RTC_1_GetMinutes, %function
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 13


 180              	RTC_1_GetMinutes:
 181              	.LFB5:
 506:Generated_Source\PSoC4/RTC_1.h **** 
 507:Generated_Source\PSoC4/RTC_1.h **** 
 508:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 509:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetMinutes
 510:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 511:Generated_Source\PSoC4/RTC_1.h **** *
 512:Generated_Source\PSoC4/RTC_1.h **** * \brief
 513:Generated_Source\PSoC4/RTC_1.h **** *  Returns the minutes value from the time value that is passed as a/the 
 514:Generated_Source\PSoC4/RTC_1.h **** * parameter.
 515:Generated_Source\PSoC4/RTC_1.h **** *
 516:Generated_Source\PSoC4/RTC_1.h **** * \param
 517:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 518:Generated_Source\PSoC4/RTC_1.h **** *
 519:Generated_Source\PSoC4/RTC_1.h **** * \return
 520:Generated_Source\PSoC4/RTC_1.h **** *  The minutes value.
 521:Generated_Source\PSoC4/RTC_1.h **** *
 522:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 523:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetMinutes(uint32 inputTime)
 524:Generated_Source\PSoC4/RTC_1.h **** {
 182              		.loc 1 524 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 84B0     		sub	sp, sp, #16
 191              		.cfi_def_cfa_offset 24
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 525:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 526:Generated_Source\PSoC4/RTC_1.h **** 
 527:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_MINUTES_MASK) >> RTC_1_10_MINUTES_OFFSET) * 10u;
 195              		.loc 1 527 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 1B0B     		lsrs	r3, r3, #12
 198 000c 0722     		movs	r2, #7
 199 000e 1A40     		ands	r2, r3
 200 0010 1300     		movs	r3, r2
 201 0012 9B00     		lsls	r3, r3, #2
 202 0014 9B18     		adds	r3, r3, r2
 203 0016 5B00     		lsls	r3, r3, #1
 204 0018 FB60     		str	r3, [r7, #12]
 528:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_MINUTES_MASK) >> RTC_1_MINUTES_OFFSET;
 205              		.loc 1 528 0
 206 001a 7B68     		ldr	r3, [r7, #4]
 207 001c 1B0A     		lsrs	r3, r3, #8
 208 001e 0F22     		movs	r2, #15
 209 0020 1340     		ands	r3, r2
 210 0022 FA68     		ldr	r2, [r7, #12]
 211 0024 D318     		adds	r3, r2, r3
 212 0026 FB60     		str	r3, [r7, #12]
 529:Generated_Source\PSoC4/RTC_1.h **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 14


 530:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 213              		.loc 1 530 0
 214 0028 FB68     		ldr	r3, [r7, #12]
 531:Generated_Source\PSoC4/RTC_1.h **** }
 215              		.loc 1 531 0
 216 002a 1800     		movs	r0, r3
 217 002c BD46     		mov	sp, r7
 218 002e 04B0     		add	sp, sp, #16
 219              		@ sp needed
 220 0030 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE5:
 223              		.size	RTC_1_GetMinutes, .-RTC_1_GetMinutes
 224 0032 C046     		.section	.text.RTC_1_GetHours,"ax",%progbits
 225              		.align	2
 226              		.code	16
 227              		.thumb_func
 228              		.type	RTC_1_GetHours, %function
 229              	RTC_1_GetHours:
 230              	.LFB6:
 532:Generated_Source\PSoC4/RTC_1.h **** 
 533:Generated_Source\PSoC4/RTC_1.h **** 
 534:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 535:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetHours
 536:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 537:Generated_Source\PSoC4/RTC_1.h **** *
 538:Generated_Source\PSoC4/RTC_1.h **** * \brief
 539:Generated_Source\PSoC4/RTC_1.h **** *  Returns the hours value from the time value that is passed as a/the parameter.
 540:Generated_Source\PSoC4/RTC_1.h **** *
 541:Generated_Source\PSoC4/RTC_1.h **** * \param
 542:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 543:Generated_Source\PSoC4/RTC_1.h **** *
 544:Generated_Source\PSoC4/RTC_1.h **** * \return
 545:Generated_Source\PSoC4/RTC_1.h **** *  The hours value.
 546:Generated_Source\PSoC4/RTC_1.h **** *
 547:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 548:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetHours(uint32 inputTime)
 549:Generated_Source\PSoC4/RTC_1.h **** {
 231              		.loc 1 549 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 550:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 551:Generated_Source\PSoC4/RTC_1.h **** 
 552:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_HOURS_MASK) >> RTC_1_10_HOURS_OFFSET) * 10u;
 244              		.loc 1 552 0
 245 0008 7B68     		ldr	r3, [r7, #4]
 246 000a 1B0D     		lsrs	r3, r3, #20
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 15


 247 000c 0322     		movs	r2, #3
 248 000e 1A40     		ands	r2, r3
 249 0010 1300     		movs	r3, r2
 250 0012 9B00     		lsls	r3, r3, #2
 251 0014 9B18     		adds	r3, r3, r2
 252 0016 5B00     		lsls	r3, r3, #1
 253 0018 FB60     		str	r3, [r7, #12]
 553:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_HOURS_MASK) >> RTC_1_HOURS_OFFSET;
 254              		.loc 1 553 0
 255 001a 7B68     		ldr	r3, [r7, #4]
 256 001c 1B0C     		lsrs	r3, r3, #16
 257 001e 0F22     		movs	r2, #15
 258 0020 1340     		ands	r3, r2
 259 0022 FA68     		ldr	r2, [r7, #12]
 260 0024 D318     		adds	r3, r2, r3
 261 0026 FB60     		str	r3, [r7, #12]
 554:Generated_Source\PSoC4/RTC_1.h **** 
 555:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 262              		.loc 1 555 0
 263 0028 FB68     		ldr	r3, [r7, #12]
 556:Generated_Source\PSoC4/RTC_1.h **** }
 264              		.loc 1 556 0
 265 002a 1800     		movs	r0, r3
 266 002c BD46     		mov	sp, r7
 267 002e 04B0     		add	sp, sp, #16
 268              		@ sp needed
 269 0030 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE6:
 272              		.size	RTC_1_GetHours, .-RTC_1_GetHours
 273 0032 C046     		.section	.text.RTC_1_GetAmPm,"ax",%progbits
 274              		.align	2
 275              		.code	16
 276              		.thumb_func
 277              		.type	RTC_1_GetAmPm, %function
 278              	RTC_1_GetAmPm:
 279              	.LFB7:
 557:Generated_Source\PSoC4/RTC_1.h **** 
 558:Generated_Source\PSoC4/RTC_1.h **** 
 559:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 560:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetAmPm
 561:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 562:Generated_Source\PSoC4/RTC_1.h **** *
 563:Generated_Source\PSoC4/RTC_1.h **** * \brief
 564:Generated_Source\PSoC4/RTC_1.h **** *  Returns the AM/PM status from the time value that is passed as parameter.
 565:Generated_Source\PSoC4/RTC_1.h **** *
 566:Generated_Source\PSoC4/RTC_1.h **** * \param
 567:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 568:Generated_Source\PSoC4/RTC_1.h **** *
 569:Generated_Source\PSoC4/RTC_1.h **** * \return
 570:Generated_Source\PSoC4/RTC_1.h **** *  RTC_1_AM - AM.
 571:Generated_Source\PSoC4/RTC_1.h **** * \return
 572:Generated_Source\PSoC4/RTC_1.h **** *  RTC_1_PM - PM.
 573:Generated_Source\PSoC4/RTC_1.h **** *
 574:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 575:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetAmPm(uint32 inputTime)
 576:Generated_Source\PSoC4/RTC_1.h **** {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 16


 280              		.loc 1 576 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 577:Generated_Source\PSoC4/RTC_1.h ****     return (RTC_1_IsBitSet(inputTime, RTC_1_PERIOD_OF_DAY_MASK));
 293              		.loc 1 577 0
 294 0008 8023     		movs	r3, #128
 295 000a DA03     		lsls	r2, r3, #15
 296 000c 7B68     		ldr	r3, [r7, #4]
 297 000e 1100     		movs	r1, r2
 298 0010 1800     		movs	r0, r3
 299 0012 FFF7FEFF 		bl	RTC_1_IsBitSet
 300 0016 0300     		movs	r3, r0
 578:Generated_Source\PSoC4/RTC_1.h **** }
 301              		.loc 1 578 0
 302 0018 1800     		movs	r0, r3
 303 001a BD46     		mov	sp, r7
 304 001c 02B0     		add	sp, sp, #8
 305              		@ sp needed
 306 001e 80BD     		pop	{r7, pc}
 307              		.cfi_endproc
 308              	.LFE7:
 309              		.size	RTC_1_GetAmPm, .-RTC_1_GetAmPm
 310              		.section	.text.RTC_1_GetDay,"ax",%progbits
 311              		.align	2
 312              		.code	16
 313              		.thumb_func
 314              		.type	RTC_1_GetDay, %function
 315              	RTC_1_GetDay:
 316              	.LFB8:
 579:Generated_Source\PSoC4/RTC_1.h **** 
 580:Generated_Source\PSoC4/RTC_1.h **** 
 581:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 582:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetDay
 583:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 584:Generated_Source\PSoC4/RTC_1.h **** *
 585:Generated_Source\PSoC4/RTC_1.h **** * \brief
 586:Generated_Source\PSoC4/RTC_1.h **** *  Returns the day value from the date value that is passed as parameter.
 587:Generated_Source\PSoC4/RTC_1.h **** *
 588:Generated_Source\PSoC4/RTC_1.h **** * \param
 589:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
 590:Generated_Source\PSoC4/RTC_1.h **** *
 591:Generated_Source\PSoC4/RTC_1.h **** * \return
 592:Generated_Source\PSoC4/RTC_1.h **** *  The day value.
 593:Generated_Source\PSoC4/RTC_1.h **** *
 594:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 595:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetDay(uint32 date)
 596:Generated_Source\PSoC4/RTC_1.h **** {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 17


 317              		.loc 1 596 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 84B0     		sub	sp, sp, #16
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 597:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 598:Generated_Source\PSoC4/RTC_1.h **** 
 599:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_10_DAY_MASK) >> RTC_1_10_DAY_OFFSET) * 10u;
 330              		.loc 1 599 0
 331 0008 7B68     		ldr	r3, [r7, #4]
 332 000a 1B0F     		lsrs	r3, r3, #28
 333 000c 0322     		movs	r2, #3
 334 000e 1A40     		ands	r2, r3
 335 0010 1300     		movs	r3, r2
 336 0012 9B00     		lsls	r3, r3, #2
 337 0014 9B18     		adds	r3, r3, r2
 338 0016 5B00     		lsls	r3, r3, #1
 339 0018 FB60     		str	r3, [r7, #12]
 600:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_DAY_MASK) >> RTC_1_DAY_OFFSET;
 340              		.loc 1 600 0
 341 001a 7B68     		ldr	r3, [r7, #4]
 342 001c 1B0E     		lsrs	r3, r3, #24
 343 001e 0F22     		movs	r2, #15
 344 0020 1340     		ands	r3, r2
 345 0022 FA68     		ldr	r2, [r7, #12]
 346 0024 D318     		adds	r3, r2, r3
 347 0026 FB60     		str	r3, [r7, #12]
 601:Generated_Source\PSoC4/RTC_1.h **** 
 602:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 348              		.loc 1 602 0
 349 0028 FB68     		ldr	r3, [r7, #12]
 603:Generated_Source\PSoC4/RTC_1.h **** }
 350              		.loc 1 603 0
 351 002a 1800     		movs	r0, r3
 352 002c BD46     		mov	sp, r7
 353 002e 04B0     		add	sp, sp, #16
 354              		@ sp needed
 355 0030 80BD     		pop	{r7, pc}
 356              		.cfi_endproc
 357              	.LFE8:
 358              		.size	RTC_1_GetDay, .-RTC_1_GetDay
 359 0032 C046     		.section	.text.RTC_1_GetMonth,"ax",%progbits
 360              		.align	2
 361              		.code	16
 362              		.thumb_func
 363              		.type	RTC_1_GetMonth, %function
 364              	RTC_1_GetMonth:
 365              	.LFB9:
 604:Generated_Source\PSoC4/RTC_1.h **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 18


 605:Generated_Source\PSoC4/RTC_1.h **** 
 606:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 607:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetMonth
 608:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 609:Generated_Source\PSoC4/RTC_1.h **** *
 610:Generated_Source\PSoC4/RTC_1.h **** * \brief
 611:Generated_Source\PSoC4/RTC_1.h **** *  Returns the month value from the date value that is passed as parameter.
 612:Generated_Source\PSoC4/RTC_1.h **** *
 613:Generated_Source\PSoC4/RTC_1.h **** * \param
 614:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
 615:Generated_Source\PSoC4/RTC_1.h **** *
 616:Generated_Source\PSoC4/RTC_1.h **** * \return
 617:Generated_Source\PSoC4/RTC_1.h **** *  The month value.
 618:Generated_Source\PSoC4/RTC_1.h **** *
 619:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 620:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetMonth(uint32 date)
 621:Generated_Source\PSoC4/RTC_1.h **** {
 366              		.loc 1 621 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 84B0     		sub	sp, sp, #16
 375              		.cfi_def_cfa_offset 24
 376 0004 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 378 0006 7860     		str	r0, [r7, #4]
 622:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 623:Generated_Source\PSoC4/RTC_1.h **** 
 624:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_10_MONTH_MASK) >> RTC_1_10_MONTH_OFFSET) * 10u;
 379              		.loc 1 624 0
 380 0008 7B68     		ldr	r3, [r7, #4]
 381 000a 1B0D     		lsrs	r3, r3, #20
 382 000c 0122     		movs	r2, #1
 383 000e 1A40     		ands	r2, r3
 384 0010 1300     		movs	r3, r2
 385 0012 9B00     		lsls	r3, r3, #2
 386 0014 9B18     		adds	r3, r3, r2
 387 0016 5B00     		lsls	r3, r3, #1
 388 0018 FB60     		str	r3, [r7, #12]
 625:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_MONTH_MASK) >> RTC_1_MONTH_OFFSET;
 389              		.loc 1 625 0
 390 001a 7B68     		ldr	r3, [r7, #4]
 391 001c 1B0C     		lsrs	r3, r3, #16
 392 001e 0F22     		movs	r2, #15
 393 0020 1340     		ands	r3, r2
 394 0022 FA68     		ldr	r2, [r7, #12]
 395 0024 D318     		adds	r3, r2, r3
 396 0026 FB60     		str	r3, [r7, #12]
 626:Generated_Source\PSoC4/RTC_1.h **** 
 627:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 397              		.loc 1 627 0
 398 0028 FB68     		ldr	r3, [r7, #12]
 628:Generated_Source\PSoC4/RTC_1.h **** }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 19


 399              		.loc 1 628 0
 400 002a 1800     		movs	r0, r3
 401 002c BD46     		mov	sp, r7
 402 002e 04B0     		add	sp, sp, #16
 403              		@ sp needed
 404 0030 80BD     		pop	{r7, pc}
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	RTC_1_GetMonth, .-RTC_1_GetMonth
 408 0032 C046     		.section	.text.RTC_1_GetYear,"ax",%progbits
 409              		.align	2
 410              		.code	16
 411              		.thumb_func
 412              		.type	RTC_1_GetYear, %function
 413              	RTC_1_GetYear:
 414              	.LFB10:
 629:Generated_Source\PSoC4/RTC_1.h **** 
 630:Generated_Source\PSoC4/RTC_1.h **** 
 631:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 632:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetYear
 633:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 634:Generated_Source\PSoC4/RTC_1.h **** *
 635:Generated_Source\PSoC4/RTC_1.h **** * \brief
 636:Generated_Source\PSoC4/RTC_1.h **** *  Returns the year value from the date value that is passed as parameter.
 637:Generated_Source\PSoC4/RTC_1.h **** *
 638:Generated_Source\PSoC4/RTC_1.h **** * \param
 639:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
 640:Generated_Source\PSoC4/RTC_1.h **** *
 641:Generated_Source\PSoC4/RTC_1.h **** * \return
 642:Generated_Source\PSoC4/RTC_1.h **** *  The year value.
 643:Generated_Source\PSoC4/RTC_1.h **** *
 644:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 645:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetYear(uint32 date)
 646:Generated_Source\PSoC4/RTC_1.h **** {
 415              		.loc 1 646 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 16
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 84B0     		sub	sp, sp, #16
 424              		.cfi_def_cfa_offset 24
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 427 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 648:Generated_Source\PSoC4/RTC_1.h **** 
 649:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_1000_YEAR_MASK) >> RTC_1_1000_YEAR_OFFSET) * 1000u;
 428              		.loc 1 649 0
 429 0008 7B68     		ldr	r3, [r7, #4]
 430 000a 1B0B     		lsrs	r3, r3, #12
 431 000c 0322     		movs	r2, #3
 432 000e 1340     		ands	r3, r2
 433 0010 FA22     		movs	r2, #250
 434 0012 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 20


 435 0014 5343     		muls	r3, r2
 436 0016 FB60     		str	r3, [r7, #12]
 650:Generated_Source\PSoC4/RTC_1.h ****     retVal += ((date & RTC_1_100_YEAR_MASK) >> RTC_1_100_YEAR_OFFSET) * 100u;
 437              		.loc 1 650 0
 438 0018 7B68     		ldr	r3, [r7, #4]
 439 001a 1B0A     		lsrs	r3, r3, #8
 440 001c 0F22     		movs	r2, #15
 441 001e 1340     		ands	r3, r2
 442 0020 6422     		movs	r2, #100
 443 0022 5343     		muls	r3, r2
 444 0024 FA68     		ldr	r2, [r7, #12]
 445 0026 D318     		adds	r3, r2, r3
 446 0028 FB60     		str	r3, [r7, #12]
 651:Generated_Source\PSoC4/RTC_1.h ****     retVal += ((date & RTC_1_10_YEAR_MASK) >> RTC_1_10_YEAR_OFFSET) * 10u;
 447              		.loc 1 651 0
 448 002a 7B68     		ldr	r3, [r7, #4]
 449 002c 1B09     		lsrs	r3, r3, #4
 450 002e 0F22     		movs	r2, #15
 451 0030 1A40     		ands	r2, r3
 452 0032 1300     		movs	r3, r2
 453 0034 9B00     		lsls	r3, r3, #2
 454 0036 9B18     		adds	r3, r3, r2
 455 0038 5B00     		lsls	r3, r3, #1
 456 003a 1A00     		movs	r2, r3
 457 003c FB68     		ldr	r3, [r7, #12]
 458 003e 9B18     		adds	r3, r3, r2
 459 0040 FB60     		str	r3, [r7, #12]
 652:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_YEAR_MASK) >> RTC_1_YEAR_OFFSET;
 460              		.loc 1 652 0
 461 0042 7B68     		ldr	r3, [r7, #4]
 462 0044 0F22     		movs	r2, #15
 463 0046 1340     		ands	r3, r2
 464 0048 FA68     		ldr	r2, [r7, #12]
 465 004a D318     		adds	r3, r2, r3
 466 004c FB60     		str	r3, [r7, #12]
 653:Generated_Source\PSoC4/RTC_1.h **** 
 654:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 467              		.loc 1 654 0
 468 004e FB68     		ldr	r3, [r7, #12]
 655:Generated_Source\PSoC4/RTC_1.h **** }
 469              		.loc 1 655 0
 470 0050 1800     		movs	r0, r3
 471 0052 BD46     		mov	sp, r7
 472 0054 04B0     		add	sp, sp, #16
 473              		@ sp needed
 474 0056 80BD     		pop	{r7, pc}
 475              		.cfi_endproc
 476              	.LFE10:
 477              		.size	RTC_1_GetYear, .-RTC_1_GetYear
 478              		.section	.text.RTC_1_GetTimeFormat,"ax",%progbits
 479              		.align	2
 480              		.code	16
 481              		.thumb_func
 482              		.type	RTC_1_GetTimeFormat, %function
 483              	RTC_1_GetTimeFormat:
 484              	.LFB24:
 656:Generated_Source\PSoC4/RTC_1.h **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 21


 657:Generated_Source\PSoC4/RTC_1.h **** 
 658:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 659:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetSecond
 660:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 661:Generated_Source\PSoC4/RTC_1.h **** *\internal
 662:Generated_Source\PSoC4/RTC_1.h **** * \brief
 663:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new second value.
 664:Generated_Source\PSoC4/RTC_1.h **** *
 665:Generated_Source\PSoC4/RTC_1.h **** * \param
 666:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 667:Generated_Source\PSoC4/RTC_1.h **** * \param
 668:Generated_Source\PSoC4/RTC_1.h **** * second The seconds value to be set to the time variable.
 669:Generated_Source\PSoC4/RTC_1.h **** *
 670:Generated_Source\PSoC4/RTC_1.h **** * \return
 671:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 672:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 673:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetSecond(uint32 inputTime, uint32 inputSecond)
 675:Generated_Source\PSoC4/RTC_1.h **** {
 676:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_SECONDS_FULL_MASK);
 677:Generated_Source\PSoC4/RTC_1.h **** 
 678:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputSecond / 10u) << RTC_1_10_SECONDS_OFFSET;
 679:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputSecond % 10u) << RTC_1_SECONDS_OFFSET;
 680:Generated_Source\PSoC4/RTC_1.h **** 
 681:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 682:Generated_Source\PSoC4/RTC_1.h **** }
 683:Generated_Source\PSoC4/RTC_1.h **** 
 684:Generated_Source\PSoC4/RTC_1.h **** 
 685:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetMinutes
 687:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC_1.h **** *\internal
 689:Generated_Source\PSoC4/RTC_1.h **** * \brief
 690:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new minute value.
 691:Generated_Source\PSoC4/RTC_1.h **** *
 692:Generated_Source\PSoC4/RTC_1.h **** * \param
 693:Generated_Source\PSoC4/RTC_1.h **** *  time The current date.
 694:Generated_Source\PSoC4/RTC_1.h **** * \param
 695:Generated_Source\PSoC4/RTC_1.h **** *  minutes The minutes value to be set to the time variable.
 696:Generated_Source\PSoC4/RTC_1.h **** *
 697:Generated_Source\PSoC4/RTC_1.h **** * \return
 698:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 699:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 700:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 701:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetMinutes(uint32 inputTime, uint32 inputMinute)
 702:Generated_Source\PSoC4/RTC_1.h **** {
 703:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_MINUTES_FULL_MASK);
 704:Generated_Source\PSoC4/RTC_1.h **** 
 705:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputMinute / 10u) << RTC_1_10_MINUTES_OFFSET;
 706:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputMinute % 10u) << RTC_1_MINUTES_OFFSET;
 707:Generated_Source\PSoC4/RTC_1.h **** 
 708:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 709:Generated_Source\PSoC4/RTC_1.h **** }
 710:Generated_Source\PSoC4/RTC_1.h **** 
 711:Generated_Source\PSoC4/RTC_1.h **** 
 712:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 713:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetHours
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 22


 714:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 715:Generated_Source\PSoC4/RTC_1.h **** *\internal
 716:Generated_Source\PSoC4/RTC_1.h **** * \brief
 717:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new hour value.
 718:Generated_Source\PSoC4/RTC_1.h **** *
 719:Generated_Source\PSoC4/RTC_1.h **** * \param
 720:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 721:Generated_Source\PSoC4/RTC_1.h **** * \param
 722:Generated_Source\PSoC4/RTC_1.h **** * hours The hours value to be set to the time variable.
 723:Generated_Source\PSoC4/RTC_1.h **** *
 724:Generated_Source\PSoC4/RTC_1.h **** * \return
 725:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 726:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 727:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 728:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetHours(uint32 inputTime, uint32 inputHours)
 729:Generated_Source\PSoC4/RTC_1.h **** {
 730:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_HOURS_FULL_MASK);
 731:Generated_Source\PSoC4/RTC_1.h **** 
 732:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputHours / 10u) << RTC_1_10_HOURS_OFFSET;
 733:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputHours % 10u) << RTC_1_HOURS_OFFSET;
 734:Generated_Source\PSoC4/RTC_1.h **** 
 735:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 736:Generated_Source\PSoC4/RTC_1.h **** }
 737:Generated_Source\PSoC4/RTC_1.h **** 
 738:Generated_Source\PSoC4/RTC_1.h **** 
 739:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 740:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetAmPm
 741:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 742:Generated_Source\PSoC4/RTC_1.h **** *\internal
 743:Generated_Source\PSoC4/RTC_1.h **** * \brief
 744:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time variable with the AmPm status.
 745:Generated_Source\PSoC4/RTC_1.h **** *
 746:Generated_Source\PSoC4/RTC_1.h **** * \param
 747:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 748:Generated_Source\PSoC4/RTC_1.h **** * \param
 749:Generated_Source\PSoC4/RTC_1.h **** * periodOfDay The AmPm status to be set to the time variable.
 750:Generated_Source\PSoC4/RTC_1.h **** *
 751:Generated_Source\PSoC4/RTC_1.h **** * \return
 752:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 753:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 754:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 755:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetAmPm(uint32 inputTime, uint32 periodOfDay)
 756:Generated_Source\PSoC4/RTC_1.h **** {
 757:Generated_Source\PSoC4/RTC_1.h ****     if(0u != periodOfDay)
 758:Generated_Source\PSoC4/RTC_1.h ****     {
 759:Generated_Source\PSoC4/RTC_1.h ****         inputTime &= ~(RTC_1_PERIOD_OF_DAY_MASK);
 760:Generated_Source\PSoC4/RTC_1.h ****     }
 761:Generated_Source\PSoC4/RTC_1.h ****     else
 762:Generated_Source\PSoC4/RTC_1.h ****     {
 763:Generated_Source\PSoC4/RTC_1.h ****         inputTime |= RTC_1_PERIOD_OF_DAY_MASK;
 764:Generated_Source\PSoC4/RTC_1.h ****     }
 765:Generated_Source\PSoC4/RTC_1.h **** 
 766:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 767:Generated_Source\PSoC4/RTC_1.h **** }
 768:Generated_Source\PSoC4/RTC_1.h **** 
 769:Generated_Source\PSoC4/RTC_1.h **** 
 770:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 23


 771:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetDay
 772:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 773:Generated_Source\PSoC4/RTC_1.h **** *\internal
 774:Generated_Source\PSoC4/RTC_1.h **** * \brief
 775:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new day value.
 776:Generated_Source\PSoC4/RTC_1.h **** *
 777:Generated_Source\PSoC4/RTC_1.h **** * \param
 778:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 779:Generated_Source\PSoC4/RTC_1.h **** * \param
 780:Generated_Source\PSoC4/RTC_1.h **** * day The month to be set to the date variable.
 781:Generated_Source\PSoC4/RTC_1.h **** *
 782:Generated_Source\PSoC4/RTC_1.h **** * \return
 783:Generated_Source\PSoC4/RTC_1.h **** *  The updated date variable.
 784:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 785:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 786:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetDay(uint32 inputDate, uint32 inputDay)
 787:Generated_Source\PSoC4/RTC_1.h **** {
 788:Generated_Source\PSoC4/RTC_1.h ****     inputDate &= ~(RTC_1_DAY_FULL_MASK);
 789:Generated_Source\PSoC4/RTC_1.h **** 
 790:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputDay / 10u) << RTC_1_10_DAY_OFFSET;
 791:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputDay % 10u) << RTC_1_DAY_OFFSET;
 792:Generated_Source\PSoC4/RTC_1.h **** 
 793:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 794:Generated_Source\PSoC4/RTC_1.h **** }
 795:Generated_Source\PSoC4/RTC_1.h **** 
 796:Generated_Source\PSoC4/RTC_1.h **** 
 797:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 798:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetMonth
 799:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 800:Generated_Source\PSoC4/RTC_1.h **** *\internal
 801:Generated_Source\PSoC4/RTC_1.h **** * \brief
 802:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new month value.
 803:Generated_Source\PSoC4/RTC_1.h **** *
 804:Generated_Source\PSoC4/RTC_1.h **** * \param
 805:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 806:Generated_Source\PSoC4/RTC_1.h **** * \param
 807:Generated_Source\PSoC4/RTC_1.h **** * month The month that to be set to the date variable.
 808:Generated_Source\PSoC4/RTC_1.h **** *
 809:Generated_Source\PSoC4/RTC_1.h **** * \return
 810:Generated_Source\PSoC4/RTC_1.h **** *  The updated date variable.
 811:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 812:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 813:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetMonth(uint32 inputDate, uint32 inputMonth)
 814:Generated_Source\PSoC4/RTC_1.h **** {
 815:Generated_Source\PSoC4/RTC_1.h ****     inputDate &= ~(RTC_1_MONTH_FULL_MASK);
 816:Generated_Source\PSoC4/RTC_1.h **** 
 817:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputMonth / 10u) << RTC_1_10_MONTH_OFFSET;
 818:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputMonth % 10u) << RTC_1_MONTH_OFFSET;
 819:Generated_Source\PSoC4/RTC_1.h **** 
 820:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 821:Generated_Source\PSoC4/RTC_1.h **** }
 822:Generated_Source\PSoC4/RTC_1.h **** 
 823:Generated_Source\PSoC4/RTC_1.h **** 
 824:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 825:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetYear
 826:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 827:Generated_Source\PSoC4/RTC_1.h **** *\internal
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 24


 828:Generated_Source\PSoC4/RTC_1.h **** * \brief
 829:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new year value.
 830:Generated_Source\PSoC4/RTC_1.h **** *
 831:Generated_Source\PSoC4/RTC_1.h **** * \param
 832:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 833:Generated_Source\PSoC4/RTC_1.h **** * \param
 834:Generated_Source\PSoC4/RTC_1.h **** * year The year to be set to the date variable.
 835:Generated_Source\PSoC4/RTC_1.h **** *
 836:Generated_Source\PSoC4/RTC_1.h **** * \return
 837:Generated_Source\PSoC4/RTC_1.h **** * The updated date variable.
 838:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 839:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 840:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetYear(uint32 inputDate, uint32 inputYear)
 841:Generated_Source\PSoC4/RTC_1.h **** {
 842:Generated_Source\PSoC4/RTC_1.h ****     inputDate  &= ~(RTC_1_YEAR_FULL_MASK);
 843:Generated_Source\PSoC4/RTC_1.h **** 
 844:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 1000u) << RTC_1_1000_YEAR_OFFSET;
 845:Generated_Source\PSoC4/RTC_1.h ****     inputYear %= 1000u;
 846:Generated_Source\PSoC4/RTC_1.h **** 
 847:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 100u) << RTC_1_100_YEAR_OFFSET;
 848:Generated_Source\PSoC4/RTC_1.h ****     inputYear %= 100u;
 849:Generated_Source\PSoC4/RTC_1.h **** 
 850:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 10u) << RTC_1_10_YEAR_OFFSET;
 851:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear % 10u) << RTC_1_YEAR_OFFSET;
 852:Generated_Source\PSoC4/RTC_1.h **** 
 853:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 854:Generated_Source\PSoC4/RTC_1.h **** }
 855:Generated_Source\PSoC4/RTC_1.h **** 
 856:Generated_Source\PSoC4/RTC_1.h **** 
 857:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 858:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextMinSec
 859:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 860:Generated_Source\PSoC4/RTC_1.h **** *\internal
 861:Generated_Source\PSoC4/RTC_1.h **** * \brief
 862:Generated_Source\PSoC4/RTC_1.h **** * This is an internal function that calculates the value of the next Second/Minute
 863:Generated_Source\PSoC4/RTC_1.h **** * that follows after the current Minute/Second.
 864:Generated_Source\PSoC4/RTC_1.h **** *
 865:Generated_Source\PSoC4/RTC_1.h **** * \param
 866:Generated_Source\PSoC4/RTC_1.h **** * curVal The current Second/Minute value.
 867:Generated_Source\PSoC4/RTC_1.h **** *
 868:Generated_Source\PSoC4/RTC_1.h **** * \return
 869:Generated_Source\PSoC4/RTC_1.h **** * Returns the Second/Minute which follows after the current Second/Minute.
 870:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 871:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 872:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextMinSec(uint32 curVal)
 873:Generated_Source\PSoC4/RTC_1.h **** {
 874:Generated_Source\PSoC4/RTC_1.h ****     return((curVal < 59u) ? (curVal + 1u) : 0u);
 875:Generated_Source\PSoC4/RTC_1.h **** }
 876:Generated_Source\PSoC4/RTC_1.h **** 
 877:Generated_Source\PSoC4/RTC_1.h **** 
 878:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 879:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextHour
 880:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 881:Generated_Source\PSoC4/RTC_1.h **** *\internal
 882:Generated_Source\PSoC4/RTC_1.h **** * \brief
 883:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next Hour
 884:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current Hour.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 25


 885:Generated_Source\PSoC4/RTC_1.h **** *
 886:Generated_Source\PSoC4/RTC_1.h **** * \param
 887:Generated_Source\PSoC4/RTC_1.h **** * curVal The current Hour value.
 888:Generated_Source\PSoC4/RTC_1.h **** *
 889:Generated_Source\PSoC4/RTC_1.h **** * \return
 890:Generated_Source\PSoC4/RTC_1.h **** *  Returns the Hour which follows after the current Hour.
 891:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 892:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 893:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextHour(uint32 curVal)
 894:Generated_Source\PSoC4/RTC_1.h **** {
 895:Generated_Source\PSoC4/RTC_1.h ****     return((curVal < 23u) ? (curVal + 1u) : 0u);
 896:Generated_Source\PSoC4/RTC_1.h **** }
 897:Generated_Source\PSoC4/RTC_1.h **** 
 898:Generated_Source\PSoC4/RTC_1.h **** 
 899:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 900:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextDay
 901:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 902:Generated_Source\PSoC4/RTC_1.h **** * \internal
 903:Generated_Source\PSoC4/RTC_1.h **** * \brief
 904:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next Day
 905:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current Day.
 906:Generated_Source\PSoC4/RTC_1.h **** *
 907:Generated_Source\PSoC4/RTC_1.h **** * \param
 908:Generated_Source\PSoC4/RTC_1.h **** *  curYear The current year.
 909:Generated_Source\PSoC4/RTC_1.h **** * \param
 910:Generated_Source\PSoC4/RTC_1.h **** *  curMonth The current month.
 911:Generated_Source\PSoC4/RTC_1.h **** * \param
 912:Generated_Source\PSoC4/RTC_1.h **** *  curDay The current day.
 913:Generated_Source\PSoC4/RTC_1.h **** * \param
 914:Generated_Source\PSoC4/RTC_1.h **** *  alarmCfgMask Alarm Config Mask.
 915:Generated_Source\PSoC4/RTC_1.h **** *
 916:Generated_Source\PSoC4/RTC_1.h **** * \return
 917:Generated_Source\PSoC4/RTC_1.h **** *  Returns the day which follows after the current Day.
 918:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 919:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 920:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 ala
 921:Generated_Source\PSoC4/RTC_1.h **** {
 922:Generated_Source\PSoC4/RTC_1.h ****     uint32 daysInMonth;
 923:Generated_Source\PSoC4/RTC_1.h ****     uint32 tmpVal;
 924:Generated_Source\PSoC4/RTC_1.h **** 
 925:Generated_Source\PSoC4/RTC_1.h ****     daysInMonth = RTC_1_DaysInMonth(curMonth, curYear);
 926:Generated_Source\PSoC4/RTC_1.h **** 
 927:Generated_Source\PSoC4/RTC_1.h ****     if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 928:Generated_Source\PSoC4/RTC_1.h ****     {
 929:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = curDay + RTC_1_DAYS_PER_WEEK;
 930:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = (tmpVal > daysInMonth) ? (tmpVal - daysInMonth) : tmpVal;
 931:Generated_Source\PSoC4/RTC_1.h ****     }
 932:Generated_Source\PSoC4/RTC_1.h ****     else
 933:Generated_Source\PSoC4/RTC_1.h ****     {
 934:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = (curDay < daysInMonth) ? (curDay + 1u) : 1u;
 935:Generated_Source\PSoC4/RTC_1.h ****     }
 936:Generated_Source\PSoC4/RTC_1.h **** 
 937:Generated_Source\PSoC4/RTC_1.h ****     return(tmpVal);
 938:Generated_Source\PSoC4/RTC_1.h **** }
 939:Generated_Source\PSoC4/RTC_1.h **** 
 940:Generated_Source\PSoC4/RTC_1.h **** 
 941:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 26


 942:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextMonth
 943:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 944:Generated_Source\PSoC4/RTC_1.h **** * \internal
 945:Generated_Source\PSoC4/RTC_1.h **** * \brief
 946:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next month
 947:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current month.
 948:Generated_Source\PSoC4/RTC_1.h **** *
 949:Generated_Source\PSoC4/RTC_1.h **** * \param
 950:Generated_Source\PSoC4/RTC_1.h **** *  curMonth The current month.
 951:Generated_Source\PSoC4/RTC_1.h **** *
 952:Generated_Source\PSoC4/RTC_1.h **** * \return
 953:Generated_Source\PSoC4/RTC_1.h **** *  Returns the month which follows after the current month.
 954:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 955:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 956:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextMonth(uint32 curMonth)
 957:Generated_Source\PSoC4/RTC_1.h **** {
 958:Generated_Source\PSoC4/RTC_1.h ****     return((curMonth < 12u) ? (curMonth + 1u) : 1u);
 959:Generated_Source\PSoC4/RTC_1.h **** }
 960:Generated_Source\PSoC4/RTC_1.h **** 
 961:Generated_Source\PSoC4/RTC_1.h **** 
 962:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 963:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextYear
 964:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 965:Generated_Source\PSoC4/RTC_1.h **** * \internal
 966:Generated_Source\PSoC4/RTC_1.h **** * \brief
 967:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next year
 968:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current year.
 969:Generated_Source\PSoC4/RTC_1.h **** *
 970:Generated_Source\PSoC4/RTC_1.h **** * \param
 971:Generated_Source\PSoC4/RTC_1.h **** *  curYear The current year.
 972:Generated_Source\PSoC4/RTC_1.h **** *
 973:Generated_Source\PSoC4/RTC_1.h **** * \return
 974:Generated_Source\PSoC4/RTC_1.h **** *  Returns the year which follows after the current year.
 975:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 976:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 977:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextYear(uint32 curYear)
 978:Generated_Source\PSoC4/RTC_1.h **** {
 979:Generated_Source\PSoC4/RTC_1.h ****     return(curYear + 1u);
 980:Generated_Source\PSoC4/RTC_1.h **** }
 981:Generated_Source\PSoC4/RTC_1.h **** 
 982:Generated_Source\PSoC4/RTC_1.h **** 
 983:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 984:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetTimeFormat
 985:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 986:Generated_Source\PSoC4/RTC_1.h **** * \internal
 987:Generated_Source\PSoC4/RTC_1.h **** * \brief
 988:Generated_Source\PSoC4/RTC_1.h **** *  Updates the "Time Format" value in the variable that contains time in the
 989:Generated_Source\PSoC4/RTC_1.h **** *  "HH:MM:SS" format.
 990:Generated_Source\PSoC4/RTC_1.h **** *
 991:Generated_Source\PSoC4/RTC_1.h **** * \param
 992:Generated_Source\PSoC4/RTC_1.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
 993:Generated_Source\PSoC4/RTC_1.h **** *
 994:Generated_Source\PSoC4/RTC_1.h **** * \return
 995:Generated_Source\PSoC4/RTC_1.h **** *  Returns the updated value of the time in the "HH:MM:SS" format.
 996:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 997:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 998:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetTimeFormat(uint32 inputTime, uint32 timeFormat)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 27


 999:Generated_Source\PSoC4/RTC_1.h **** {
1000:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_TIME_FORMAT_MASK);
1001:Generated_Source\PSoC4/RTC_1.h **** 
1002:Generated_Source\PSoC4/RTC_1.h ****     if((uint32)RTC_1_12_HOURS_FORMAT != timeFormat)
1003:Generated_Source\PSoC4/RTC_1.h ****     {
1004:Generated_Source\PSoC4/RTC_1.h ****         inputTime |= RTC_1_TIME_FORMAT_MASK;
1005:Generated_Source\PSoC4/RTC_1.h ****     }
1006:Generated_Source\PSoC4/RTC_1.h **** 
1007:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
1008:Generated_Source\PSoC4/RTC_1.h **** }
1009:Generated_Source\PSoC4/RTC_1.h **** 
1010:Generated_Source\PSoC4/RTC_1.h **** 
1011:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1012:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetTimeFormat
1013:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1014:Generated_Source\PSoC4/RTC_1.h **** * \internal
1015:Generated_Source\PSoC4/RTC_1.h **** * \brief
1016:Generated_Source\PSoC4/RTC_1.h **** *  Reads the time format from the variable that contains time in the
1017:Generated_Source\PSoC4/RTC_1.h **** *  "HH:MM:SS" format.
1018:Generated_Source\PSoC4/RTC_1.h **** *
1019:Generated_Source\PSoC4/RTC_1.h **** * \param
1020:Generated_Source\PSoC4/RTC_1.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
1021:Generated_Source\PSoC4/RTC_1.h **** *
1022:Generated_Source\PSoC4/RTC_1.h **** * \return
1023:Generated_Source\PSoC4/RTC_1.h **** *  Returns the time format that is stored in the variable that contains time
1024:Generated_Source\PSoC4/RTC_1.h **** *  in the "HH:MM:SS" format.
1025:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
1026:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1027:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetTimeFormat(uint32 inputTime)
1028:Generated_Source\PSoC4/RTC_1.h **** {
 485              		.loc 1 1028 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 82B0     		sub	sp, sp, #8
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/RTC_1.h ****     return ((0uL != (inputTime & (1uL << RTC_1_TIME_FORMAT_OFFSET))) ? (uint32)RTC_1_12_HOURS_FORMA
 498              		.loc 1 1029 0
 499 0008 7A68     		ldr	r2, [r7, #4]
 500 000a 8023     		movs	r3, #128
 501 000c 1B04     		lsls	r3, r3, #16
 502 000e 1340     		ands	r3, r2
 503 0010 01D0     		beq	.L26
 504              		.loc 1 1029 0 is_stmt 0 discriminator 1
 505 0012 0123     		movs	r3, #1
 506 0014 00E0     		b	.L28
 507              	.L26:
 508              		.loc 1 1029 0 discriminator 2
 509 0016 0023     		movs	r3, #0
 510              	.L28:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 28


1030:Generated_Source\PSoC4/RTC_1.h ****                                                                                   (uint32)RTC_1_24_
1031:Generated_Source\PSoC4/RTC_1.h **** }
 511              		.loc 1 1031 0 is_stmt 1 discriminator 5
 512 0018 1800     		movs	r0, r3
 513 001a BD46     		mov	sp, r7
 514 001c 02B0     		add	sp, sp, #8
 515              		@ sp needed
 516 001e 80BD     		pop	{r7, pc}
 517              		.cfi_endproc
 518              	.LFE24:
 519              		.size	RTC_1_GetTimeFormat, .-RTC_1_GetTimeFormat
 520              		.global	__aeabi_uidiv
 521              		.section	.text.RTC_1_ConstructTime,"ax",%progbits
 522              		.align	2
 523              		.code	16
 524              		.thumb_func
 525              		.type	RTC_1_ConstructTime, %function
 526              	RTC_1_ConstructTime:
 527              	.LFB25:
1032:Generated_Source\PSoC4/RTC_1.h **** 
1033:Generated_Source\PSoC4/RTC_1.h **** 
1034:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1035:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_ConstructTime
1036:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1037:Generated_Source\PSoC4/RTC_1.h **** *
1038:Generated_Source\PSoC4/RTC_1.h **** * \brief
1039:Generated_Source\PSoC4/RTC_1.h **** *  Returns the time in the format used in APIs from individual elements
1040:Generated_Source\PSoC4/RTC_1.h **** *  passed (hour, min, sec etc)
1041:Generated_Source\PSoC4/RTC_1.h **** *
1042:Generated_Source\PSoC4/RTC_1.h **** * \param
1043:Generated_Source\PSoC4/RTC_1.h **** * timeFormat The 12/24 hours time format <br>
1044:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_24_HOURS_FORMAT - The 24 hours format. <br>
1045:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_12_HOURS_FORMAT - The 12 hours format.
1046:Generated_Source\PSoC4/RTC_1.h **** *
1047:Generated_Source\PSoC4/RTC_1.h **** * \param
1048:Generated_Source\PSoC4/RTC_1.h **** * stateAmPm  The AM/PM status <br>
1049:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_AM - AM. <br>
1050:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_PM - PM.
1051:Generated_Source\PSoC4/RTC_1.h **** *
1052:Generated_Source\PSoC4/RTC_1.h **** * \param
1053:Generated_Source\PSoC4/RTC_1.h **** *  hour The hour.
1054:Generated_Source\PSoC4/RTC_1.h **** *
1055:Generated_Source\PSoC4/RTC_1.h **** * \param
1056:Generated_Source\PSoC4/RTC_1.h **** *  min The minute.
1057:Generated_Source\PSoC4/RTC_1.h **** *
1058:Generated_Source\PSoC4/RTC_1.h **** * \param
1059:Generated_Source\PSoC4/RTC_1.h **** *  sec The second.
1060:Generated_Source\PSoC4/RTC_1.h **** *
1061:Generated_Source\PSoC4/RTC_1.h **** * \return
1062:Generated_Source\PSoC4/RTC_1.h **** *  Time in the format used in API.
1063:Generated_Source\PSoC4/RTC_1.h **** *
1064:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1065:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint3
1066:Generated_Source\PSoC4/RTC_1.h **** {
 528              		.loc 1 1066 0
 529              		.cfi_startproc
 530              		@ args = 4, pretend = 0, frame = 24
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 29


 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 86B0     		sub	sp, sp, #24
 537              		.cfi_def_cfa_offset 32
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 F860     		str	r0, [r7, #12]
 541 0008 B960     		str	r1, [r7, #8]
 542 000a 7A60     		str	r2, [r7, #4]
 543 000c 3B60     		str	r3, [r7]
1067:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1068:Generated_Source\PSoC4/RTC_1.h **** 
1069:Generated_Source\PSoC4/RTC_1.h ****     retVal  = timeFormat << RTC_1_TIME_FORMAT_OFFSET;
 544              		.loc 1 1069 0
 545 000e FB68     		ldr	r3, [r7, #12]
 546 0010 DB05     		lsls	r3, r3, #23
 547 0012 7B61     		str	r3, [r7, #20]
1070:Generated_Source\PSoC4/RTC_1.h ****     retVal |= stateAmPm << RTC_1_PERIOD_OF_DAY_OFFSET;
 548              		.loc 1 1070 0
 549 0014 BB68     		ldr	r3, [r7, #8]
 550 0016 9B05     		lsls	r3, r3, #22
 551 0018 7A69     		ldr	r2, [r7, #20]
 552 001a 1343     		orrs	r3, r2
 553 001c 7B61     		str	r3, [r7, #20]
1071:Generated_Source\PSoC4/RTC_1.h **** 
1072:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (hour / 10u) << RTC_1_10_HOURS_OFFSET;
 554              		.loc 1 1072 0
 555 001e 7B68     		ldr	r3, [r7, #4]
 556 0020 0A21     		movs	r1, #10
 557 0022 1800     		movs	r0, r3
 558 0024 FFF7FEFF 		bl	__aeabi_uidiv
 559 0028 0300     		movs	r3, r0
 560 002a 1B05     		lsls	r3, r3, #20
 561 002c 7A69     		ldr	r2, [r7, #20]
 562 002e 1343     		orrs	r3, r2
 563 0030 7B61     		str	r3, [r7, #20]
1073:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (hour % 10u) << RTC_1_HOURS_OFFSET;
 564              		.loc 1 1073 0
 565 0032 7B68     		ldr	r3, [r7, #4]
 566 0034 0A21     		movs	r1, #10
 567 0036 1800     		movs	r0, r3
 568 0038 FFF7FEFF 		bl	__aeabi_uidivmod
 569 003c 0B00     		movs	r3, r1
 570 003e 1B04     		lsls	r3, r3, #16
 571 0040 7A69     		ldr	r2, [r7, #20]
 572 0042 1343     		orrs	r3, r2
 573 0044 7B61     		str	r3, [r7, #20]
1074:Generated_Source\PSoC4/RTC_1.h **** 
1075:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (min / 10u) << RTC_1_10_MINUTES_OFFSET;
 574              		.loc 1 1075 0
 575 0046 3B68     		ldr	r3, [r7]
 576 0048 0A21     		movs	r1, #10
 577 004a 1800     		movs	r0, r3
 578 004c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 30


 579 0050 0300     		movs	r3, r0
 580 0052 1B03     		lsls	r3, r3, #12
 581 0054 7A69     		ldr	r2, [r7, #20]
 582 0056 1343     		orrs	r3, r2
 583 0058 7B61     		str	r3, [r7, #20]
1076:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (min % 10u) << RTC_1_MINUTES_OFFSET;
 584              		.loc 1 1076 0
 585 005a 3B68     		ldr	r3, [r7]
 586 005c 0A21     		movs	r1, #10
 587 005e 1800     		movs	r0, r3
 588 0060 FFF7FEFF 		bl	__aeabi_uidivmod
 589 0064 0B00     		movs	r3, r1
 590 0066 1B02     		lsls	r3, r3, #8
 591 0068 7A69     		ldr	r2, [r7, #20]
 592 006a 1343     		orrs	r3, r2
 593 006c 7B61     		str	r3, [r7, #20]
1077:Generated_Source\PSoC4/RTC_1.h **** 
1078:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (sec / 10u) << RTC_1_10_SECONDS_OFFSET;
 594              		.loc 1 1078 0
 595 006e 3B6A     		ldr	r3, [r7, #32]
 596 0070 0A21     		movs	r1, #10
 597 0072 1800     		movs	r0, r3
 598 0074 FFF7FEFF 		bl	__aeabi_uidiv
 599 0078 0300     		movs	r3, r0
 600 007a 1B01     		lsls	r3, r3, #4
 601 007c 7A69     		ldr	r2, [r7, #20]
 602 007e 1343     		orrs	r3, r2
 603 0080 7B61     		str	r3, [r7, #20]
1079:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (sec % 10u) << RTC_1_SECONDS_OFFSET;
 604              		.loc 1 1079 0
 605 0082 3B6A     		ldr	r3, [r7, #32]
 606 0084 0A21     		movs	r1, #10
 607 0086 1800     		movs	r0, r3
 608 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 609 008c 0B00     		movs	r3, r1
 610 008e 1A00     		movs	r2, r3
 611 0090 7B69     		ldr	r3, [r7, #20]
 612 0092 1343     		orrs	r3, r2
 613 0094 7B61     		str	r3, [r7, #20]
1080:Generated_Source\PSoC4/RTC_1.h **** 
1081:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 614              		.loc 1 1081 0
 615 0096 7B69     		ldr	r3, [r7, #20]
1082:Generated_Source\PSoC4/RTC_1.h **** }
 616              		.loc 1 1082 0
 617 0098 1800     		movs	r0, r3
 618 009a BD46     		mov	sp, r7
 619 009c 06B0     		add	sp, sp, #24
 620              		@ sp needed
 621 009e 80BD     		pop	{r7, pc}
 622              		.cfi_endproc
 623              	.LFE25:
 624              		.size	RTC_1_ConstructTime, .-RTC_1_ConstructTime
 625              		.section	.text.RTC_1_ConstructDate,"ax",%progbits
 626              		.align	2
 627              		.code	16
 628              		.thumb_func
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 31


 629              		.type	RTC_1_ConstructDate, %function
 630              	RTC_1_ConstructDate:
 631              	.LFB26:
1083:Generated_Source\PSoC4/RTC_1.h **** 
1084:Generated_Source\PSoC4/RTC_1.h **** 
1085:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1086:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_ConstructDate
1087:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1088:Generated_Source\PSoC4/RTC_1.h **** *
1089:Generated_Source\PSoC4/RTC_1.h **** * \brief
1090:Generated_Source\PSoC4/RTC_1.h **** *  Returns the date in the format used in APIs from individual elements
1091:Generated_Source\PSoC4/RTC_1.h **** *  passed (day. Month and year)
1092:Generated_Source\PSoC4/RTC_1.h **** *
1093:Generated_Source\PSoC4/RTC_1.h **** * \param
1094:Generated_Source\PSoC4/RTC_1.h **** *  month The month.
1095:Generated_Source\PSoC4/RTC_1.h **** *
1096:Generated_Source\PSoC4/RTC_1.h **** * \param
1097:Generated_Source\PSoC4/RTC_1.h **** *  day The day.
1098:Generated_Source\PSoC4/RTC_1.h **** *
1099:Generated_Source\PSoC4/RTC_1.h **** * \param
1100:Generated_Source\PSoC4/RTC_1.h **** *  year The year.
1101:Generated_Source\PSoC4/RTC_1.h **** *
1102:Generated_Source\PSoC4/RTC_1.h **** * \return
1103:Generated_Source\PSoC4/RTC_1.h **** *  The date in the format used in API.
1104:Generated_Source\PSoC4/RTC_1.h **** *
1105:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1106:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_ConstructDate(uint32 month, uint32 day, uint32 year)
1107:Generated_Source\PSoC4/RTC_1.h **** {
 632              		.loc 1 1107 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 24
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 86B0     		sub	sp, sp, #24
 641              		.cfi_def_cfa_offset 32
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 644 0006 F860     		str	r0, [r7, #12]
 645 0008 B960     		str	r1, [r7, #8]
 646 000a 7A60     		str	r2, [r7, #4]
1108:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1109:Generated_Source\PSoC4/RTC_1.h ****     uint32 tmpVal = year;
 647              		.loc 1 1109 0
 648 000c 7B68     		ldr	r3, [r7, #4]
 649 000e 7B61     		str	r3, [r7, #20]
1110:Generated_Source\PSoC4/RTC_1.h **** 
1111:Generated_Source\PSoC4/RTC_1.h ****     retVal  = (month / 10u) << RTC_1_10_MONTH_OFFSET;
 650              		.loc 1 1111 0
 651 0010 FB68     		ldr	r3, [r7, #12]
 652 0012 0A21     		movs	r1, #10
 653 0014 1800     		movs	r0, r3
 654 0016 FFF7FEFF 		bl	__aeabi_uidiv
 655 001a 0300     		movs	r3, r0
 656 001c 1B05     		lsls	r3, r3, #20
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 32


 657 001e 3B61     		str	r3, [r7, #16]
1112:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (month % 10u) << RTC_1_MONTH_OFFSET;
 658              		.loc 1 1112 0
 659 0020 FB68     		ldr	r3, [r7, #12]
 660 0022 0A21     		movs	r1, #10
 661 0024 1800     		movs	r0, r3
 662 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 663 002a 0B00     		movs	r3, r1
 664 002c 1B04     		lsls	r3, r3, #16
 665 002e 3A69     		ldr	r2, [r7, #16]
 666 0030 1343     		orrs	r3, r2
 667 0032 3B61     		str	r3, [r7, #16]
1113:Generated_Source\PSoC4/RTC_1.h **** 
1114:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (day / 10u) << RTC_1_10_DAY_OFFSET;
 668              		.loc 1 1114 0
 669 0034 BB68     		ldr	r3, [r7, #8]
 670 0036 0A21     		movs	r1, #10
 671 0038 1800     		movs	r0, r3
 672 003a FFF7FEFF 		bl	__aeabi_uidiv
 673 003e 0300     		movs	r3, r0
 674 0040 1B07     		lsls	r3, r3, #28
 675 0042 3A69     		ldr	r2, [r7, #16]
 676 0044 1343     		orrs	r3, r2
 677 0046 3B61     		str	r3, [r7, #16]
1115:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (day % 10u) << RTC_1_DAY_OFFSET;
 678              		.loc 1 1115 0
 679 0048 BB68     		ldr	r3, [r7, #8]
 680 004a 0A21     		movs	r1, #10
 681 004c 1800     		movs	r0, r3
 682 004e FFF7FEFF 		bl	__aeabi_uidivmod
 683 0052 0B00     		movs	r3, r1
 684 0054 1B06     		lsls	r3, r3, #24
 685 0056 3A69     		ldr	r2, [r7, #16]
 686 0058 1343     		orrs	r3, r2
 687 005a 3B61     		str	r3, [r7, #16]
1116:Generated_Source\PSoC4/RTC_1.h **** 
1117:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (year / 1000u) << RTC_1_1000_YEAR_OFFSET;
 688              		.loc 1 1117 0
 689 005c 7A68     		ldr	r2, [r7, #4]
 690 005e FA23     		movs	r3, #250
 691 0060 9900     		lsls	r1, r3, #2
 692 0062 1000     		movs	r0, r2
 693 0064 FFF7FEFF 		bl	__aeabi_uidiv
 694 0068 0300     		movs	r3, r0
 695 006a 1B03     		lsls	r3, r3, #12
 696 006c 3A69     		ldr	r2, [r7, #16]
 697 006e 1343     		orrs	r3, r2
 698 0070 3B61     		str	r3, [r7, #16]
1118:Generated_Source\PSoC4/RTC_1.h ****     tmpVal %= 1000u;
 699              		.loc 1 1118 0
 700 0072 7A69     		ldr	r2, [r7, #20]
 701 0074 FA23     		movs	r3, #250
 702 0076 9900     		lsls	r1, r3, #2
 703 0078 1000     		movs	r0, r2
 704 007a FFF7FEFF 		bl	__aeabi_uidivmod
 705 007e 0B00     		movs	r3, r1
 706 0080 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 33


1119:Generated_Source\PSoC4/RTC_1.h **** 
1120:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal / 100u) << RTC_1_100_YEAR_OFFSET;
 707              		.loc 1 1120 0
 708 0082 7B69     		ldr	r3, [r7, #20]
 709 0084 6421     		movs	r1, #100
 710 0086 1800     		movs	r0, r3
 711 0088 FFF7FEFF 		bl	__aeabi_uidiv
 712 008c 0300     		movs	r3, r0
 713 008e 1B02     		lsls	r3, r3, #8
 714 0090 3A69     		ldr	r2, [r7, #16]
 715 0092 1343     		orrs	r3, r2
 716 0094 3B61     		str	r3, [r7, #16]
1121:Generated_Source\PSoC4/RTC_1.h ****     tmpVal %= 100u;
 717              		.loc 1 1121 0
 718 0096 7B69     		ldr	r3, [r7, #20]
 719 0098 6421     		movs	r1, #100
 720 009a 1800     		movs	r0, r3
 721 009c FFF7FEFF 		bl	__aeabi_uidivmod
 722 00a0 0B00     		movs	r3, r1
 723 00a2 7B61     		str	r3, [r7, #20]
1122:Generated_Source\PSoC4/RTC_1.h **** 
1123:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal / 10u) << RTC_1_10_YEAR_OFFSET;
 724              		.loc 1 1123 0
 725 00a4 7B69     		ldr	r3, [r7, #20]
 726 00a6 0A21     		movs	r1, #10
 727 00a8 1800     		movs	r0, r3
 728 00aa FFF7FEFF 		bl	__aeabi_uidiv
 729 00ae 0300     		movs	r3, r0
 730 00b0 1B01     		lsls	r3, r3, #4
 731 00b2 3A69     		ldr	r2, [r7, #16]
 732 00b4 1343     		orrs	r3, r2
 733 00b6 3B61     		str	r3, [r7, #16]
1124:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal % 10u) << RTC_1_YEAR_OFFSET;
 734              		.loc 1 1124 0
 735 00b8 7B69     		ldr	r3, [r7, #20]
 736 00ba 0A21     		movs	r1, #10
 737 00bc 1800     		movs	r0, r3
 738 00be FFF7FEFF 		bl	__aeabi_uidivmod
 739 00c2 0B00     		movs	r3, r1
 740 00c4 1A00     		movs	r2, r3
 741 00c6 3B69     		ldr	r3, [r7, #16]
 742 00c8 1343     		orrs	r3, r2
 743 00ca 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC_1.h **** 
1126:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 744              		.loc 1 1126 0
 745 00cc 3B69     		ldr	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC_1.h **** }
 746              		.loc 1 1127 0
 747 00ce 1800     		movs	r0, r3
 748 00d0 BD46     		mov	sp, r7
 749 00d2 06B0     		add	sp, sp, #24
 750              		@ sp needed
 751 00d4 80BD     		pop	{r7, pc}
 752              		.cfi_endproc
 753              	.LFE26:
 754              		.size	RTC_1_ConstructDate, .-RTC_1_ConstructDate
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 34


 755              		.section	.text.RTC_1_GetDayOfWeek,"ax",%progbits
 756              		.align	2
 757              		.code	16
 758              		.thumb_func
 759              		.type	RTC_1_GetDayOfWeek, %function
 760              	RTC_1_GetDayOfWeek:
 761              	.LFB27:
1128:Generated_Source\PSoC4/RTC_1.h **** 
1129:Generated_Source\PSoC4/RTC_1.h **** 
1130:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1131:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetDayOfWeek
1132:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1133:Generated_Source\PSoC4/RTC_1.h **** * \internal
1134:Generated_Source\PSoC4/RTC_1.h **** *
1135:Generated_Source\PSoC4/RTC_1.h **** * \brief
1136:Generated_Source\PSoC4/RTC_1.h **** *  Returns a day of the week for a year, month, and day of month that are passed
1137:Generated_Source\PSoC4/RTC_1.h **** *  through parameters. Zeller's congruence is used to calculate the day of
1138:Generated_Source\PSoC4/RTC_1.h **** *  the week.
1139:Generated_Source\PSoC4/RTC_1.h **** *
1140:Generated_Source\PSoC4/RTC_1.h **** *  For the Georgian calendar, Zeller's congruence is:
1141:Generated_Source\PSoC4/RTC_1.h **** *  h = (q + [13 * (m + 1)] + K + [K/4] + [J/4] - 2J) mod 7
1142:Generated_Source\PSoC4/RTC_1.h **** *
1143:Generated_Source\PSoC4/RTC_1.h **** *  h - The day of the week (0 = Saturday, 1 = Sunday, 2 = Monday, ..., 6 = Friday).
1144:Generated_Source\PSoC4/RTC_1.h **** *  q - The day of the month.
1145:Generated_Source\PSoC4/RTC_1.h **** *  m - The month (3 = March, 4 = April, 5 = May, ..., 14 = February)
1146:Generated_Source\PSoC4/RTC_1.h **** *  K - The year of the century (year \mod 100).
1147:Generated_Source\PSoC4/RTC_1.h **** *  J - The zero-based century (actually [year/100]) For example, the zero-based
1148:Generated_Source\PSoC4/RTC_1.h **** *  centuries for 1995 and 2000 are 19 and 20 respectively (not to be
1149:Generated_Source\PSoC4/RTC_1.h **** *  confused with the common ordinal century enumeration which indicates
1150:Generated_Source\PSoC4/RTC_1.h **** *  20th for both cases).
1151:Generated_Source\PSoC4/RTC_1.h **** *
1152:Generated_Source\PSoC4/RTC_1.h **** * \note In this algorithm January and February are counted as months 13 and 14
1153:Generated_Source\PSoC4/RTC_1.h **** * of the previous year.
1154:Generated_Source\PSoC4/RTC_1.h **** *
1155:Generated_Source\PSoC4/RTC_1.h **** * \param
1156:Generated_Source\PSoC4/RTC_1.h **** *  day The day of the month(1..31)
1157:Generated_Source\PSoC4/RTC_1.h **** *
1158:Generated_Source\PSoC4/RTC_1.h **** * \param
1159:Generated_Source\PSoC4/RTC_1.h **** *  month The month of the year
1160:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JANUARY <br>
1161:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_FEBRUARY <br>
1162:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MARCH <br>
1163:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_APRIL <br>
1164:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MAY <br>
1165:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JUNE <br>
1166:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JULY <br>
1167:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_AUGUST <br>
1168:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SEPTEMBER <br>
1169:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_OCTOBER <br>
1170:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_NOVEMBER <br>
1171:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_DECEMBER <br>
1172:Generated_Source\PSoC4/RTC_1.h **** *
1173:Generated_Source\PSoC4/RTC_1.h **** * \param
1174:Generated_Source\PSoC4/RTC_1.h **** *  year The year value.
1175:Generated_Source\PSoC4/RTC_1.h **** *
1176:Generated_Source\PSoC4/RTC_1.h **** * \return
1177:Generated_Source\PSoC4/RTC_1.h **** * Returns a day of the week
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 35


1178:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SUNDAY <br>
1179:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MONDAY <br>
1180:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_TUESDAY <br>
1181:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_WEDNESDAY <br>
1182:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_THURSDAY <br>
1183:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_FRIDAY <br>
1184:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SATURDAY <br>
1185:Generated_Source\PSoC4/RTC_1.h **** *
1186:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
1187:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1188:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetDayOfWeek(uint32 day, uint32 month, uint32 year)
1189:Generated_Source\PSoC4/RTC_1.h **** {
 762              		.loc 1 1189 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 24
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 90B5     		push	{r4, r7, lr}
 767              		.cfi_def_cfa_offset 12
 768              		.cfi_offset 4, -12
 769              		.cfi_offset 7, -8
 770              		.cfi_offset 14, -4
 771 0002 87B0     		sub	sp, sp, #28
 772              		.cfi_def_cfa_offset 40
 773 0004 00AF     		add	r7, sp, #0
 774              		.cfi_def_cfa_register 7
 775 0006 F860     		str	r0, [r7, #12]
 776 0008 B960     		str	r1, [r7, #8]
 777 000a 7A60     		str	r2, [r7, #4]
1190:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1191:Generated_Source\PSoC4/RTC_1.h **** 
1192:Generated_Source\PSoC4/RTC_1.h ****     /* Converts month number from regular convention
1193:Generated_Source\PSoC4/RTC_1.h ****      * (1=January,..., 12=December) to convention required for this
1194:Generated_Source\PSoC4/RTC_1.h ****      * algorithm(January and February are counted as months 13 and 14 of
1195:Generated_Source\PSoC4/RTC_1.h ****      * previous year).
1196:Generated_Source\PSoC4/RTC_1.h ****     */
1197:Generated_Source\PSoC4/RTC_1.h ****     if(month < (uint32)RTC_1_MARCH)
 778              		.loc 1 1197 0
 779 000c BB68     		ldr	r3, [r7, #8]
 780 000e 022B     		cmp	r3, #2
 781 0010 05D8     		bhi	.L34
1198:Generated_Source\PSoC4/RTC_1.h ****     {
1199:Generated_Source\PSoC4/RTC_1.h ****         month = 12u + month;
 782              		.loc 1 1199 0
 783 0012 BB68     		ldr	r3, [r7, #8]
 784 0014 0C33     		adds	r3, r3, #12
 785 0016 BB60     		str	r3, [r7, #8]
1200:Generated_Source\PSoC4/RTC_1.h ****         year--;
 786              		.loc 1 1200 0
 787 0018 7B68     		ldr	r3, [r7, #4]
 788 001a 013B     		subs	r3, r3, #1
 789 001c 7B60     		str	r3, [r7, #4]
 790              	.L34:
1201:Generated_Source\PSoC4/RTC_1.h ****     }
1202:Generated_Source\PSoC4/RTC_1.h **** 
1203:Generated_Source\PSoC4/RTC_1.h ****     /* Calculates Day of Week using Zeller's congruence algorithms.
1204:Generated_Source\PSoC4/RTC_1.h ****     */
1205:Generated_Source\PSoC4/RTC_1.h ****     retVal = (day + (((month + 1u) * 26u) / 10u) + year + (year / 4u) + (6u * (year / 100u)) + (yea
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 36


 791              		.loc 1 1205 0
 792 001e BB68     		ldr	r3, [r7, #8]
 793 0020 0133     		adds	r3, r3, #1
 794 0022 1A22     		movs	r2, #26
 795 0024 5343     		muls	r3, r2
 796 0026 0A21     		movs	r1, #10
 797 0028 1800     		movs	r0, r3
 798 002a FFF7FEFF 		bl	__aeabi_uidiv
 799 002e 0300     		movs	r3, r0
 800 0030 1A00     		movs	r2, r3
 801 0032 FB68     		ldr	r3, [r7, #12]
 802 0034 D218     		adds	r2, r2, r3
 803 0036 7B68     		ldr	r3, [r7, #4]
 804 0038 D218     		adds	r2, r2, r3
 805 003a 7B68     		ldr	r3, [r7, #4]
 806 003c 9B08     		lsrs	r3, r3, #2
 807 003e D418     		adds	r4, r2, r3
 808 0040 7B68     		ldr	r3, [r7, #4]
 809 0042 6421     		movs	r1, #100
 810 0044 1800     		movs	r0, r3
 811 0046 FFF7FEFF 		bl	__aeabi_uidiv
 812 004a 0300     		movs	r3, r0
 813 004c 1A00     		movs	r2, r3
 814 004e 1300     		movs	r3, r2
 815 0050 5B00     		lsls	r3, r3, #1
 816 0052 9B18     		adds	r3, r3, r2
 817 0054 5B00     		lsls	r3, r3, #1
 818 0056 E418     		adds	r4, r4, r3
 819 0058 7A68     		ldr	r2, [r7, #4]
 820 005a C823     		movs	r3, #200
 821 005c 5900     		lsls	r1, r3, #1
 822 005e 1000     		movs	r0, r2
 823 0060 FFF7FEFF 		bl	__aeabi_uidiv
 824 0064 0300     		movs	r3, r0
 825 0066 E318     		adds	r3, r4, r3
 826 0068 0721     		movs	r1, #7
 827 006a 1800     		movs	r0, r3
 828 006c FFF7FEFF 		bl	__aeabi_uidivmod
 829 0070 0B00     		movs	r3, r1
 830 0072 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/RTC_1.h **** 
1207:Generated_Source\PSoC4/RTC_1.h ****     /* Makes correction for Saturday. Saturday number should be 7 instead of 0. */
1208:Generated_Source\PSoC4/RTC_1.h ****     if(0u == retVal)
 831              		.loc 1 1208 0
 832 0074 7B69     		ldr	r3, [r7, #20]
 833 0076 002B     		cmp	r3, #0
 834 0078 01D1     		bne	.L35
1209:Generated_Source\PSoC4/RTC_1.h ****     {
1210:Generated_Source\PSoC4/RTC_1.h ****         retVal = (uint32)RTC_1_SATURDAY;
 835              		.loc 1 1210 0
 836 007a 0723     		movs	r3, #7
 837 007c 7B61     		str	r3, [r7, #20]
 838              	.L35:
1211:Generated_Source\PSoC4/RTC_1.h ****     }
1212:Generated_Source\PSoC4/RTC_1.h **** 
1213:Generated_Source\PSoC4/RTC_1.h ****     return(retVal);
 839              		.loc 1 1213 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 37


 840 007e 7B69     		ldr	r3, [r7, #20]
1214:Generated_Source\PSoC4/RTC_1.h **** }
 841              		.loc 1 1214 0
 842 0080 1800     		movs	r0, r3
 843 0082 BD46     		mov	sp, r7
 844 0084 07B0     		add	sp, sp, #28
 845              		@ sp needed
 846 0086 90BD     		pop	{r4, r7, pc}
 847              		.cfi_endproc
 848              	.LFE27:
 849              		.size	RTC_1_GetDayOfWeek, .-RTC_1_GetDayOfWeek
 850              		.section	.text.RTC_1_CySysRtcSetCallback,"ax",%progbits
 851              		.align	2
 852              		.code	16
 853              		.thumb_func
 854              		.type	RTC_1_CySysRtcSetCallback, %function
 855              	RTC_1_CySysRtcSetCallback:
 856              	.LFB28:
1215:Generated_Source\PSoC4/RTC_1.h **** 
1216:Generated_Source\PSoC4/RTC_1.h **** 
1217:Generated_Source\PSoC4/RTC_1.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
1218:Generated_Source\PSoC4/RTC_1.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
1219:Generated_Source\PSoC4/RTC_1.h **** 
1220:Generated_Source\PSoC4/RTC_1.h ****         /*******************************************************************************
1221:Generated_Source\PSoC4/RTC_1.h ****         * Function Name: RTC_1_CySysRtcSetCallback
1222:Generated_Source\PSoC4/RTC_1.h ****         ****************************************************************************//**
1223:Generated_Source\PSoC4/RTC_1.h ****         * \internal
1224:Generated_Source\PSoC4/RTC_1.h ****         * \brief
1225:Generated_Source\PSoC4/RTC_1.h ****         *  This is an internal function that registers a callback for the
1226:Generated_Source\PSoC4/RTC_1.h ****         *  RTC_1_Update() function by address "0".
1227:Generated_Source\PSoC4/RTC_1.h ****         *
1228:Generated_Source\PSoC4/RTC_1.h ****         * \param
1229:Generated_Source\PSoC4/RTC_1.h ****         *  wdtNumber The number of the WDT or WCO timer to be used to pull the
1230:Generated_Source\PSoC4/RTC_1.h ****         *  RTC_1_Update() function.
1231:Generated_Source\PSoC4/RTC_1.h ****         *
1232:Generated_Source\PSoC4/RTC_1.h ****         *  The callback registered before by address "0" is replaced
1233:Generated_Source\PSoC4/RTC_1.h ****         *  by the RTC_1_Update() function.
1234:Generated_Source\PSoC4/RTC_1.h ****         * \endinternal
1235:Generated_Source\PSoC4/RTC_1.h ****         *******************************************************************************/
1236:Generated_Source\PSoC4/RTC_1.h ****         static CY_INLINE void RTC_1_CySysRtcSetCallback(uint32 wdtNumber)
1237:Generated_Source\PSoC4/RTC_1.h ****         {
 857              		.loc 1 1237 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 8
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861 0000 80B5     		push	{r7, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 82B0     		sub	sp, sp, #8
 866              		.cfi_def_cfa_offset 16
 867 0004 00AF     		add	r7, sp, #0
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
1238:Generated_Source\PSoC4/RTC_1.h ****             #if((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT))
1239:Generated_Source\PSoC4/RTC_1.h ****                 (void)CySysTimerSetInterruptCallback(wdtNumber, RTC_1_Update);
1240:Generated_Source\PSoC4/RTC_1.h ****             #else
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 38


1241:Generated_Source\PSoC4/RTC_1.h ****                 (void)CySysWdtSetIsrCallback(wdtNumber, RTC_1_Update);
 870              		.loc 1 1241 0
 871 0008 044A     		ldr	r2, .L38
 872 000a 7B68     		ldr	r3, [r7, #4]
 873 000c 1100     		movs	r1, r2
 874 000e 1800     		movs	r0, r3
 875 0010 FFF7FEFF 		bl	CySysWdtSetInterruptCallback
1242:Generated_Source\PSoC4/RTC_1.h ****             #endif /* ((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT)) */
1243:Generated_Source\PSoC4/RTC_1.h ****         }
 876              		.loc 1 1243 0
 877 0014 C046     		nop
 878 0016 BD46     		mov	sp, r7
 879 0018 02B0     		add	sp, sp, #8
 880              		@ sp needed
 881 001a 80BD     		pop	{r7, pc}
 882              	.L39:
 883              		.align	2
 884              	.L38:
 885 001c 00000000 		.word	RTC_1_Update
 886              		.cfi_endproc
 887              	.LFE28:
 888              		.size	RTC_1_CySysRtcSetCallback, .-RTC_1_CySysRtcSetCallback
 889              		.section	.text.RTC_1_CySysRtcResetCallback,"ax",%progbits
 890              		.align	2
 891              		.code	16
 892              		.thumb_func
 893              		.type	RTC_1_CySysRtcResetCallback, %function
 894              	RTC_1_CySysRtcResetCallback:
 895              	.LFB29:
1244:Generated_Source\PSoC4/RTC_1.h **** 
1245:Generated_Source\PSoC4/RTC_1.h **** 
1246:Generated_Source\PSoC4/RTC_1.h ****         /*******************************************************************************
1247:Generated_Source\PSoC4/RTC_1.h ****         * Function Name: RTC_1_CySysRtcResetCallback
1248:Generated_Source\PSoC4/RTC_1.h ****         ****************************************************************************//**
1249:Generated_Source\PSoC4/RTC_1.h ****         * \internal
1250:Generated_Source\PSoC4/RTC_1.h ****         * \brief
1251:Generated_Source\PSoC4/RTC_1.h ****         *  This is an internal function that clears a callback by address "0".
1252:Generated_Source\PSoC4/RTC_1.h ****         *
1253:Generated_Source\PSoC4/RTC_1.h ****         * \param
1254:Generated_Source\PSoC4/RTC_1.h ****         *  wdtNumber The number of the WDT or WCO timer to be cleared callback for.
1255:Generated_Source\PSoC4/RTC_1.h ****         *
1256:Generated_Source\PSoC4/RTC_1.h ****         *  The callback registered before by address "0" is replaced
1257:Generated_Source\PSoC4/RTC_1.h ****         *  by the NULL pointer.
1258:Generated_Source\PSoC4/RTC_1.h ****         * \endinternal
1259:Generated_Source\PSoC4/RTC_1.h ****         *******************************************************************************/
1260:Generated_Source\PSoC4/RTC_1.h ****         static CY_INLINE void RTC_1_CySysRtcResetCallback(uint32 wdtNumber)
1261:Generated_Source\PSoC4/RTC_1.h ****         {
 896              		.loc 1 1261 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 82B0     		sub	sp, sp, #8
 905              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 39


 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
1262:Generated_Source\PSoC4/RTC_1.h ****             #if((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT))
1263:Generated_Source\PSoC4/RTC_1.h ****                 (void)CySysTimerSetInterruptCallback(wdtNumber, (void *)0);
1264:Generated_Source\PSoC4/RTC_1.h ****             #else
1265:Generated_Source\PSoC4/RTC_1.h ****                 (void)CySysWdtSetIsrCallback(wdtNumber, (void *)0);
 909              		.loc 1 1265 0
 910 0008 7B68     		ldr	r3, [r7, #4]
 911 000a 0021     		movs	r1, #0
 912 000c 1800     		movs	r0, r3
 913 000e FFF7FEFF 		bl	CySysWdtSetInterruptCallback
1266:Generated_Source\PSoC4/RTC_1.h ****             #endif /* ((0u != CY_IP_WCO_WDT_EN) && (0u != CY_IP_SRSSLT)) */
1267:Generated_Source\PSoC4/RTC_1.h ****         }
 914              		.loc 1 1267 0
 915 0012 C046     		nop
 916 0014 BD46     		mov	sp, r7
 917 0016 02B0     		add	sp, sp, #8
 918              		@ sp needed
 919 0018 80BD     		pop	{r7, pc}
 920              		.cfi_endproc
 921              	.LFE29:
 922              		.size	RTC_1_CySysRtcResetCallback, .-RTC_1_CySysRtcResetCallback
 923              		.comm	RTC_1_initVar,1,1
 924              		.comm	RTC_1_unixTime,8,8
 925              		.comm	RTC_1_currentTimeDate,16,4
 926 001a C046     		.bss
 927              		.align	2
 928              	RTC_1_updateTimePeriod:
 929 0000 00000000 		.space	4
 930              		.align	2
 931              	RTC_1_tickRefOneSec:
 932 0004 00000000 		.space	4
 933              		.comm	RTC_1_dstStatus,1,1
 934              		.align	2
 935              	RTC_1_dstTimeOffset:
 936 0008 00000000 		.space	4
 937              		.comm	RTC_1_alarmCurStatus,4,4
 938              		.global	RTC_1_daysBeforeMonthTbl
 939              		.section	.rodata
 940              		.align	2
 941              		.type	RTC_1_daysBeforeMonthTbl, %object
 942              		.size	RTC_1_daysBeforeMonthTbl, 24
 943              	RTC_1_daysBeforeMonthTbl:
 944 0000 0000     		.short	0
 945 0002 1F00     		.short	31
 946 0004 3B00     		.short	59
 947 0006 5A00     		.short	90
 948 0008 7800     		.short	120
 949 000a 9700     		.short	151
 950 000c B500     		.short	181
 951 000e D400     		.short	212
 952 0010 F300     		.short	243
 953 0012 1101     		.short	273
 954 0014 3001     		.short	304
 955 0016 4E01     		.short	334
 956              		.global	RTC_1_daysInMonthTbl
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 40


 957              		.align	2
 958              		.type	RTC_1_daysInMonthTbl, %object
 959              		.size	RTC_1_daysInMonthTbl, 12
 960              	RTC_1_daysInMonthTbl:
 961 0018 1F       		.byte	31
 962 0019 1C       		.byte	28
 963 001a 1F       		.byte	31
 964 001b 1E       		.byte	30
 965 001c 1F       		.byte	31
 966 001d 1E       		.byte	30
 967 001e 1F       		.byte	31
 968 001f 1F       		.byte	31
 969 0020 1E       		.byte	30
 970 0021 1F       		.byte	31
 971 0022 1E       		.byte	30
 972 0023 1F       		.byte	31
 973              		.section	.text.RTC_1_Start,"ax",%progbits
 974              		.align	2
 975              		.global	RTC_1_Start
 976              		.code	16
 977              		.thumb_func
 978              		.type	RTC_1_Start, %function
 979              	RTC_1_Start:
 980              	.LFB30:
 981              		.file 2 "Generated_Source\\PSoC4\\RTC_1.c"
   1:Generated_Source\PSoC4/RTC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC_1.c **** * \file Name: RTC_1.c
   3:Generated_Source\PSoC4/RTC_1.c **** * \version 1.10
   4:Generated_Source\PSoC4/RTC_1.c **** *
   5:Generated_Source\PSoC4/RTC_1.c **** * \brief
   6:Generated_Source\PSoC4/RTC_1.c **** *  This file provides the source code to the API for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC_1.c **** *
   8:Generated_Source\PSoC4/RTC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC_1.c **** * \copyright
  10:Generated_Source\PSoC4/RTC_1.c **** * Copyright 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/RTC_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/RTC_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/RTC_1.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
  15:Generated_Source\PSoC4/RTC_1.c **** 
  16:Generated_Source\PSoC4/RTC_1.c **** #include "RTC_1.h"
  17:Generated_Source\PSoC4/RTC_1.c **** 
  18:Generated_Source\PSoC4/RTC_1.c **** uint8  RTC_1_initVar;
  19:Generated_Source\PSoC4/RTC_1.c **** 
  20:Generated_Source\PSoC4/RTC_1.c **** volatile uint64 RTC_1_unixTime;
  21:Generated_Source\PSoC4/RTC_1.c **** RTC_1_DATE_TIME RTC_1_currentTimeDate;
  22:Generated_Source\PSoC4/RTC_1.c **** 
  23:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_updateTimePeriod;
  24:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_tickRefOneSec;
  25:Generated_Source\PSoC4/RTC_1.c **** 
  26:Generated_Source\PSoC4/RTC_1.c **** uint8  RTC_1_dstStatus;
  27:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_dstTimeOffset;
  28:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_DST_STATUS)
  29:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeDstStart;
  30:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeDstStop;
  31:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DST_TIME RTC_1_dstStartTime;
  32:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DST_TIME RTC_1_dstStopTime;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 41


  33:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
  34:Generated_Source\PSoC4/RTC_1.c **** 
  35:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_alarmCurStatus;
  36:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_ALARM_STATUS)
  37:Generated_Source\PSoC4/RTC_1.c ****     uint32  RTC_1_alarmCfgMask = 0xFFu;
  38:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeAlarm;
  39:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME RTC_1_alarmCfgTimeDate;
  40:Generated_Source\PSoC4/RTC_1.c ****     void (*RTC_1_alarmCallbackPtr)(void) = (void *)0;
  41:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_ALARM_STATUS) */
  42:Generated_Source\PSoC4/RTC_1.c **** 
  43:Generated_Source\PSoC4/RTC_1.c **** const uint16 RTC_1_daysBeforeMonthTbl[RTC_1_MONTHS_PER_YEAR] = {
  44:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u), /* JANUARY */
  45:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u), /* FEBRUARY */
  46:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u), /* MARCH */
  47:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u), /* APRIL */
  48:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u), /* MAY */
  49:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u), /* JUNE */
  50:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u), /* JULY 
  51:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u), /*
  52:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  53:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  54:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  55:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  56:Generated_Source\PSoC4/RTC_1.c **** 
  57:Generated_Source\PSoC4/RTC_1.c **** const uint8 RTC_1_daysInMonthTbl[RTC_1_MONTHS_PER_YEAR] = {RTC_1_DAYS_IN_JANUARY,
  58:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_FEBR
  59:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_MARC
  60:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_APRI
  61:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_MAY,
  62:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_JUNE
  63:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_JULY
  64:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_AUGU
  65:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_SEPT
  66:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_OCTO
  67:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_NOVE
  68:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_DECE
  69:Generated_Source\PSoC4/RTC_1.c **** 
  70:Generated_Source\PSoC4/RTC_1.c **** 
  71:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Start
  73:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
  74:Generated_Source\PSoC4/RTC_1.c **** *
  75:Generated_Source\PSoC4/RTC_1.c **** * \brief
  76:Generated_Source\PSoC4/RTC_1.c **** *  Performs all the required calculations for the time and date registers and
  77:Generated_Source\PSoC4/RTC_1.c **** *  initializes the component along with the date and time selected in the
  78:Generated_Source\PSoC4/RTC_1.c **** *  customizer. 
  79:Generated_Source\PSoC4/RTC_1.c **** *
  80:Generated_Source\PSoC4/RTC_1.c **** *  If "Implement RTC update manually" is disabled in the customizer
  81:Generated_Source\PSoC4/RTC_1.c **** *  and if WDT or WCO timer is selected as a source in the clocks configuration 
  82:Generated_Source\PSoC4/RTC_1.c **** *  window (low frequency clocks tab), attaches RTC_Update API to a corresponding
  83:Generated_Source\PSoC4/RTC_1.c **** *  WDT's or WCO's ISR callback.
  84:Generated_Source\PSoC4/RTC_1.c **** *
  85:Generated_Source\PSoC4/RTC_1.c **** * \note "Implement RTC update manually" checkbox is available for PSoC 4200L / 
  86:Generated_Source\PSoC4/RTC_1.c **** * PSoC 4100M / PSoC 4200M / PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4000S / PSoC 
  87:Generated_Source\PSoC4/RTC_1.c **** * 4100S and Analog Coprocessor.
  88:Generated_Source\PSoC4/RTC_1.c **** *
  89:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 42


  90:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Start(void)
  91:Generated_Source\PSoC4/RTC_1.c **** {
 982              		.loc 2 91 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
  92:Generated_Source\PSoC4/RTC_1.c ****     if(0u == RTC_1_initVar)
 992              		.loc 2 92 0
 993 0004 054B     		ldr	r3, .L43
 994 0006 1B78     		ldrb	r3, [r3]
 995 0008 002B     		cmp	r3, #0
 996 000a 01D1     		bne	.L42
  93:Generated_Source\PSoC4/RTC_1.c ****     {
  94:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_Init();
 997              		.loc 2 94 0
 998 000c FFF7FEFF 		bl	RTC_1_Init
 999              	.L42:
  95:Generated_Source\PSoC4/RTC_1.c ****     }
  96:Generated_Source\PSoC4/RTC_1.c **** 
  97:Generated_Source\PSoC4/RTC_1.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
  98:Generated_Source\PSoC4/RTC_1.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
  99:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_CySysRtcSetCallback(CYDEV_RTC_SOURCE_WDT);
 1000              		.loc 2 99 0
 1001 0010 0020     		movs	r0, #0
 1002 0012 FFF7FEFF 		bl	RTC_1_CySysRtcSetCallback
 100:Generated_Source\PSoC4/RTC_1.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 101:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 102:Generated_Source\PSoC4/RTC_1.c **** }
 1003              		.loc 2 102 0
 1004 0016 C046     		nop
 1005 0018 BD46     		mov	sp, r7
 1006              		@ sp needed
 1007 001a 80BD     		pop	{r7, pc}
 1008              	.L44:
 1009              		.align	2
 1010              	.L43:
 1011 001c 00000000 		.word	RTC_1_initVar
 1012              		.cfi_endproc
 1013              	.LFE30:
 1014              		.size	RTC_1_Start, .-RTC_1_Start
 1015              		.section	.text.RTC_1_Stop,"ax",%progbits
 1016              		.align	2
 1017              		.global	RTC_1_Stop
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	RTC_1_Stop, %function
 1021              	RTC_1_Stop:
 1022              	.LFB31:
 103:Generated_Source\PSoC4/RTC_1.c **** 
 104:Generated_Source\PSoC4/RTC_1.c **** 
 105:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 43


 106:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Stop
 107:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 108:Generated_Source\PSoC4/RTC_1.c **** *
 109:Generated_Source\PSoC4/RTC_1.c **** * \brief
 110:Generated_Source\PSoC4/RTC_1.c **** *  Stops the time and date updates.
 111:Generated_Source\PSoC4/RTC_1.c **** *
 112:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 113:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Stop(void)
 114:Generated_Source\PSoC4/RTC_1.c **** {
 1023              		.loc 2 114 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 00AF     		add	r7, sp, #0
 1032              		.cfi_def_cfa_register 7
 115:Generated_Source\PSoC4/RTC_1.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
 116:Generated_Source\PSoC4/RTC_1.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
 117:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_CySysRtcResetCallback(CYDEV_RTC_SOURCE_WDT);
 1033              		.loc 2 117 0
 1034 0004 0020     		movs	r0, #0
 1035 0006 FFF7FEFF 		bl	RTC_1_CySysRtcResetCallback
 118:Generated_Source\PSoC4/RTC_1.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 119:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 120:Generated_Source\PSoC4/RTC_1.c **** }
 1036              		.loc 2 120 0
 1037 000a C046     		nop
 1038 000c BD46     		mov	sp, r7
 1039              		@ sp needed
 1040 000e 80BD     		pop	{r7, pc}
 1041              		.cfi_endproc
 1042              	.LFE31:
 1043              		.size	RTC_1_Stop, .-RTC_1_Stop
 1044              		.section	.text.RTC_1_Init,"ax",%progbits
 1045              		.align	2
 1046              		.global	RTC_1_Init
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	RTC_1_Init, %function
 1050              	RTC_1_Init:
 1051              	.LFB32:
 121:Generated_Source\PSoC4/RTC_1.c **** 
 122:Generated_Source\PSoC4/RTC_1.c **** 
 123:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 124:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Init
 125:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 126:Generated_Source\PSoC4/RTC_1.c **** *
 127:Generated_Source\PSoC4/RTC_1.c **** * \brief
 128:Generated_Source\PSoC4/RTC_1.c **** *  Initializes or restores the component according to the customizer Configure
 129:Generated_Source\PSoC4/RTC_1.c **** *  dialog settings. 
 130:Generated_Source\PSoC4/RTC_1.c **** *
 131:Generated_Source\PSoC4/RTC_1.c **** * It is not necessary to call RTC_Init() because
 132:Generated_Source\PSoC4/RTC_1.c **** *  RTC_Start() API calls this function and is the preferred method to begin
 133:Generated_Source\PSoC4/RTC_1.c **** *  component operation.
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 44


 134:Generated_Source\PSoC4/RTC_1.c **** *
 135:Generated_Source\PSoC4/RTC_1.c **** *  All registers are set to values according to the customizer Configure
 136:Generated_Source\PSoC4/RTC_1.c **** *  dialog. The default date value, if not set by the user before this function 
 137:Generated_Source\PSoC4/RTC_1.c **** *  call, is 12:00:00 AM January 1, 2000.
 138:Generated_Source\PSoC4/RTC_1.c **** *
 139:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Init(void)
 141:Generated_Source\PSoC4/RTC_1.c **** {
 1052              		.loc 2 141 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 8
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 84B0     		sub	sp, sp, #16
 1061              		.cfi_def_cfa_offset 24
 1062 0004 02AF     		add	r7, sp, #8
 1063              		.cfi_def_cfa 7, 16
 142:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDate;
 143:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpTime;
 144:Generated_Source\PSoC4/RTC_1.c **** 
 145:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 146:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DST_TIME dstTimeTmp;
 147:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 148:Generated_Source\PSoC4/RTC_1.c **** 
 149:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_initVar = 1u;
 1064              		.loc 2 149 0
 1065 0006 154B     		ldr	r3, .L47
 1066 0008 0122     		movs	r2, #1
 1067 000a 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_dstTimeOffset = 0uL;
 1068              		.loc 2 150 0
 1069 000c 144B     		ldr	r3, .L47+4
 1070 000e 0022     		movs	r2, #0
 1071 0010 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.status = 0uL;
 1072              		.loc 2 151 0
 1073 0012 144B     		ldr	r3, .L47+8
 1074 0014 0022     		movs	r2, #0
 1075 0016 DA60     		str	r2, [r3, #12]
 152:Generated_Source\PSoC4/RTC_1.c **** 
 153:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_dstStatus      = RTC_1_INITIAL_DST_STATUS;
 1076              		.loc 2 153 0
 1077 0018 134B     		ldr	r3, .L47+12
 1078 001a 0022     		movs	r2, #0
 1079 001c 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_alarmCurStatus = RTC_1_INITIAL_ALARM_STATUS;
 1080              		.loc 2 154 0
 1081 001e 134B     		ldr	r3, .L47+16
 1082 0020 0022     		movs	r2, #0
 1083 0022 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/RTC_1.c **** 
 156:Generated_Source\PSoC4/RTC_1.c ****     tmpDate = RTC_1_ConstructDate(RTC_1_INITIAL_MONTH,
 1084              		.loc 2 156 0
 1085 0024 124B     		ldr	r3, .L47+20
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 45


 1086 0026 1A00     		movs	r2, r3
 1087 0028 0421     		movs	r1, #4
 1088 002a 0C20     		movs	r0, #12
 1089 002c FFF7FEFF 		bl	RTC_1_ConstructDate
 1090 0030 0300     		movs	r3, r0
 1091 0032 7B60     		str	r3, [r7, #4]
 157:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_DAY,
 158:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_YEAR);
 159:Generated_Source\PSoC4/RTC_1.c **** 
 160:Generated_Source\PSoC4/RTC_1.c ****     tmpTime = RTC_1_ConstructTime(RTC_1_INITIAL_TIME_FORMAT,
 1092              		.loc 2 160 0
 1093 0034 0023     		movs	r3, #0
 1094 0036 0093     		str	r3, [sp]
 1095 0038 0023     		movs	r3, #0
 1096 003a 0C22     		movs	r2, #12
 1097 003c 0021     		movs	r1, #0
 1098 003e 0020     		movs	r0, #0
 1099 0040 FFF7FEFF 		bl	RTC_1_ConstructTime
 1100 0044 0300     		movs	r3, r0
 1101 0046 3B60     		str	r3, [r7]
 161:Generated_Source\PSoC4/RTC_1.c ****                                           0u,
 162:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_HOUR,
 163:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_MINUTE,
 164:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_SECOND);
 165:Generated_Source\PSoC4/RTC_1.c **** 
 166:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 167:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStatus = 0u;
 168:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status = (1uL << RTC_1_STATUS_DST_OFFSET);
 169:Generated_Source\PSoC4/RTC_1.c **** 
 170:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.timeFormat    = RTC_1_INITIAL_DST_DATE_TYPE;
 171:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.hour          = RTC_1_INITIAL_DST_START_HRS;
 172:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfWeek     = RTC_1_INITIAL_DST_START_DOW;
 173:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.weekOfMonth   = RTC_1_INITIAL_DST_START_WOM;
 174:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfMonth    = RTC_1_INITIAL_DST_START_DOM;
 175:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.month         = RTC_1_INITIAL_DST_START_MONTH;
 176:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_SetDSTStartTime(&dstTimeTmp, (RTC_1_DST_DATETYPE_ENUM)RTC_1_INITIAL_DST_DATE_TYPE);
 177:Generated_Source\PSoC4/RTC_1.c **** 
 178:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.timeFormat    = RTC_1_INITIAL_DST_DATE_TYPE;
 179:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.hour          = RTC_1_INITIAL_DST_STOP_HRS;
 180:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfWeek     = RTC_1_INITIAL_DST_STOP_DOW;
 181:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.weekOfMonth   = RTC_1_INITIAL_DST_STOP_WOM;
 182:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfMonth    = RTC_1_INITIAL_DST_STOP_DOM;
 183:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.month         = RTC_1_INITIAL_DST_STOP_MONTH;
 184:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_SetDSTStopTime(&dstTimeTmp, (RTC_1_DST_DATETYPE_ENUM)RTC_1_INITIAL_DST_DATE_TYPE);
 185:Generated_Source\PSoC4/RTC_1.c **** 
 186:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 187:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 188:Generated_Source\PSoC4/RTC_1.c **** 
 189:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 190:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 191:Generated_Source\PSoC4/RTC_1.c ****         {
 192:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 193:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 194:Generated_Source\PSoC4/RTC_1.c ****         }
 195:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 196:Generated_Source\PSoC4/RTC_1.c **** 
 197:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_SetDateAndTime(tmpTime, tmpDate);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 46


 1102              		.loc 2 197 0
 1103 0048 7A68     		ldr	r2, [r7, #4]
 1104 004a 3B68     		ldr	r3, [r7]
 1105 004c 1100     		movs	r1, r2
 1106 004e 1800     		movs	r0, r3
 1107 0050 FFF7FEFF 		bl	RTC_1_SetDateAndTime
 198:Generated_Source\PSoC4/RTC_1.c **** }
 1108              		.loc 2 198 0
 1109 0054 C046     		nop
 1110 0056 BD46     		mov	sp, r7
 1111 0058 02B0     		add	sp, sp, #8
 1112              		@ sp needed
 1113 005a 80BD     		pop	{r7, pc}
 1114              	.L48:
 1115              		.align	2
 1116              	.L47:
 1117 005c 00000000 		.word	RTC_1_initVar
 1118 0060 08000000 		.word	RTC_1_dstTimeOffset
 1119 0064 00000000 		.word	RTC_1_currentTimeDate
 1120 0068 00000000 		.word	RTC_1_dstStatus
 1121 006c 00000000 		.word	RTC_1_alarmCurStatus
 1122 0070 E1070000 		.word	2017
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	RTC_1_Init, .-RTC_1_Init
 1126              		.section	.text.RTC_1_SetDateAndTime,"ax",%progbits
 1127              		.align	2
 1128              		.global	RTC_1_SetDateAndTime
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	RTC_1_SetDateAndTime, %function
 1132              	RTC_1_SetDateAndTime:
 1133              	.LFB33:
 199:Generated_Source\PSoC4/RTC_1.c **** 
 200:Generated_Source\PSoC4/RTC_1.c **** 
 201:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 202:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetDateAndTime
 203:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 204:Generated_Source\PSoC4/RTC_1.c **** *
 205:Generated_Source\PSoC4/RTC_1.c **** * \brief
 206:Generated_Source\PSoC4/RTC_1.c **** * Sets the time and date values as the current time and date.
 207:Generated_Source\PSoC4/RTC_1.c **** *
 208:Generated_Source\PSoC4/RTC_1.c **** * \param
 209:Generated_Source\PSoC4/RTC_1.c **** * inputTime The time value in the HH:MM:SS format. <br>
 210:Generated_Source\PSoC4/RTC_1.c **** * "HH"- The 2nd 8-bit MSB that denotes the hour value.
 211:Generated_Source\PSoC4/RTC_1.c **** * (0-23 for the 24-hour format and 1-12 for the 12-hour format. The MSB bit of the
 212:Generated_Source\PSoC4/RTC_1.c **** * value denotes AM/PM for the 12-hour format (0-AM and 1-PM). <br>
 213:Generated_Source\PSoC4/RTC_1.c **** * "MM" - The 3nd 8-bit MSB denotes the minutes value, the valid entries -> 0-59.<br>
 214:Generated_Source\PSoC4/RTC_1.c **** * "SS" - The 8-bit LSB denotes the seconds value, the valid entries -> 0-59.
 215:Generated_Source\PSoC4/RTC_1.c **** * Each byte is in the BCD format. Invalid time entries retain the
 216:Generated_Source\PSoC4/RTC_1.c **** * previously set values.
 217:Generated_Source\PSoC4/RTC_1.c **** *
 218:Generated_Source\PSoC4/RTC_1.c **** * \param
 219:Generated_Source\PSoC4/RTC_1.c **** *  inputDate The date value in the format selected in the customizer.
 220:Generated_Source\PSoC4/RTC_1.c **** * For the MM/DD/YYYY format: <br>
 221:Generated_Source\PSoC4/RTC_1.c **** * "MM" - The 8-bit MSB denotes the month value in BCD, the valid entries -> 1-12<br>
 222:Generated_Source\PSoC4/RTC_1.c **** * "DD" - The 2nd 8-bit MSB denotes a day of the month value in BCD, the valid
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 47


 223:Generated_Source\PSoC4/RTC_1.c **** * entries -> 1-31.<br>
 224:Generated_Source\PSoC4/RTC_1.c **** * "YYYY" - The 16-bit LSB denotes a year in BCD, the valid entries -> 1900-2200.
 225:Generated_Source\PSoC4/RTC_1.c **** * Each byte is in the BCD format. Invalid date entries retain the
 226:Generated_Source\PSoC4/RTC_1.c **** * previously set values.
 227:Generated_Source\PSoC4/RTC_1.c **** *
 228:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 229:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetDateAndTime(uint32 inputTime, uint32 inputDate)
 230:Generated_Source\PSoC4/RTC_1.c **** {
 1134              		.loc 2 230 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 24
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0000 90B5     		push	{r4, r7, lr}
 1139              		.cfi_def_cfa_offset 12
 1140              		.cfi_offset 4, -12
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 87B0     		sub	sp, sp, #28
 1144              		.cfi_def_cfa_offset 40
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 7860     		str	r0, [r7, #4]
 1148 0008 3960     		str	r1, [r7]
 231:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDay;
 232:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
 233:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
 234:Generated_Source\PSoC4/RTC_1.c **** 
 235:Generated_Source\PSoC4/RTC_1.c ****     tmpDay   = RTC_1_GetDay(inputDate);
 1149              		.loc 2 235 0
 1150 000a 3B68     		ldr	r3, [r7]
 1151 000c 1800     		movs	r0, r3
 1152 000e FFF7FEFF 		bl	RTC_1_GetDay
 1153 0012 0300     		movs	r3, r0
 1154 0014 7B61     		str	r3, [r7, #20]
 236:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = RTC_1_GetMonth(inputDate);
 1155              		.loc 2 236 0
 1156 0016 3B68     		ldr	r3, [r7]
 1157 0018 1800     		movs	r0, r3
 1158 001a FFF7FEFF 		bl	RTC_1_GetMonth
 1159 001e 0300     		movs	r3, r0
 1160 0020 3B61     		str	r3, [r7, #16]
 237:Generated_Source\PSoC4/RTC_1.c ****     tmpYear  = RTC_1_GetYear(inputDate);
 1161              		.loc 2 237 0
 1162 0022 3B68     		ldr	r3, [r7]
 1163 0024 1800     		movs	r0, r3
 1164 0026 FFF7FEFF 		bl	RTC_1_GetYear
 1165 002a 0300     		movs	r3, r0
 1166 002c FB60     		str	r3, [r7, #12]
 238:Generated_Source\PSoC4/RTC_1.c **** 
 239:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_unixTime = RTC_1_DateTimeToUnix(inputDate, inputTime);
 1167              		.loc 2 239 0
 1168 002e 7A68     		ldr	r2, [r7, #4]
 1169 0030 3B68     		ldr	r3, [r7]
 1170 0032 1100     		movs	r1, r2
 1171 0034 1800     		movs	r0, r3
 1172 0036 FFF7FEFF 		bl	RTC_1_DateTimeToUnix
 1173 003a 0300     		movs	r3, r0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 48


 1174 003c 0C00     		movs	r4, r1
 1175 003e 0B4A     		ldr	r2, .L50
 1176 0040 1360     		str	r3, [r2]
 1177 0042 5460     		str	r4, [r2, #4]
 240:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.date = inputDate;
 1178              		.loc 2 240 0
 1179 0044 0A4B     		ldr	r3, .L50+4
 1180 0046 3A68     		ldr	r2, [r7]
 1181 0048 5A60     		str	r2, [r3, #4]
 241:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.time = inputTime;
 1182              		.loc 2 241 0
 1183 004a 094B     		ldr	r3, .L50+4
 1184 004c 7A68     		ldr	r2, [r7, #4]
 1185 004e 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.dayOfWeek = RTC_1_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 1186              		.loc 2 242 0
 1187 0050 FA68     		ldr	r2, [r7, #12]
 1188 0052 3969     		ldr	r1, [r7, #16]
 1189 0054 7B69     		ldr	r3, [r7, #20]
 1190 0056 1800     		movs	r0, r3
 1191 0058 FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 1192 005c 0200     		movs	r2, r0
 1193 005e 044B     		ldr	r3, .L50+4
 1194 0060 9A60     		str	r2, [r3, #8]
 243:Generated_Source\PSoC4/RTC_1.c **** 
 244:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 245:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 246:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 247:Generated_Source\PSoC4/RTC_1.c **** 
 248:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 249:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 250:Generated_Source\PSoC4/RTC_1.c ****         {
 251:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 252:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 253:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTime -= RTC_1_dstTimeOffset;
 254:Generated_Source\PSoC4/RTC_1.c ****         }
 255:Generated_Source\PSoC4/RTC_1.c ****         else
 256:Generated_Source\PSoC4/RTC_1.c ****         {
 257:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 258:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 259:Generated_Source\PSoC4/RTC_1.c ****         }
 260:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 261:Generated_Source\PSoC4/RTC_1.c **** 
 262:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_ALARM_STATUS)
 263:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(&RTC_1_alarmCfgTimeDate,
 264:Generated_Source\PSoC4/RTC_1.c ****                                                                                  (uint8)RTC_1_alarm
 265:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_ALARM_STATUS) */
 266:Generated_Source\PSoC4/RTC_1.c **** }
 1195              		.loc 2 266 0
 1196 0062 C046     		nop
 1197 0064 BD46     		mov	sp, r7
 1198 0066 07B0     		add	sp, sp, #28
 1199              		@ sp needed
 1200 0068 90BD     		pop	{r4, r7, pc}
 1201              	.L51:
 1202 006a C046     		.align	2
 1203              	.L50:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 49


 1204 006c 00000000 		.word	RTC_1_unixTime
 1205 0070 00000000 		.word	RTC_1_currentTimeDate
 1206              		.cfi_endproc
 1207              	.LFE33:
 1208              		.size	RTC_1_SetDateAndTime, .-RTC_1_SetDateAndTime
 1209              		.section	.text.RTC_1_SetUnixTime,"ax",%progbits
 1210              		.align	2
 1211              		.global	RTC_1_SetUnixTime
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	RTC_1_SetUnixTime, %function
 1215              	RTC_1_SetUnixTime:
 1216              	.LFB34:
 267:Generated_Source\PSoC4/RTC_1.c **** 
 268:Generated_Source\PSoC4/RTC_1.c **** 
 269:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 270:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetUnixTime
 271:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 272:Generated_Source\PSoC4/RTC_1.c **** *
 273:Generated_Source\PSoC4/RTC_1.c **** * \brief
 274:Generated_Source\PSoC4/RTC_1.c **** * Sets the time in the Unix/Epoch time format - the number of seconds elapsed 
 275:Generated_Source\PSoC4/RTC_1.c **** *  from January 1, 1970 UTC 00:00 hrs.
 276:Generated_Source\PSoC4/RTC_1.c **** *
 277:Generated_Source\PSoC4/RTC_1.c **** * \param
 278:Generated_Source\PSoC4/RTC_1.c **** *  time The time value in the Unix time/Epoch time format.
 279:Generated_Source\PSoC4/RTC_1.c **** *
 280:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 281:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetUnixTime(uint64 unixTime)
 282:Generated_Source\PSoC4/RTC_1.c **** {
 1217              		.loc 2 282 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 24
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 90B5     		push	{r4, r7, lr}
 1222              		.cfi_def_cfa_offset 12
 1223              		.cfi_offset 4, -12
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 89B0     		sub	sp, sp, #36
 1227              		.cfi_def_cfa_offset 48
 1228 0004 02AF     		add	r7, sp, #8
 1229              		.cfi_def_cfa 7, 40
 1230 0006 3860     		str	r0, [r7]
 1231 0008 7960     		str	r1, [r7, #4]
 283:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME tmpDateTime;
 284:Generated_Source\PSoC4/RTC_1.c **** 
 285:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_unixTime = unixTime;
 1232              		.loc 2 285 0
 1233 000a 0A4A     		ldr	r2, .L53
 1234 000c 3B68     		ldr	r3, [r7]
 1235 000e 7C68     		ldr	r4, [r7, #4]
 1236 0010 1360     		str	r3, [r2]
 1237 0012 5460     		str	r4, [r2, #4]
 286:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&tmpDateTime, unixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 1238              		.loc 2 286 0
 1239 0014 3B68     		ldr	r3, [r7]
 1240 0016 7C68     		ldr	r4, [r7, #4]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 50


 1241 0018 0822     		movs	r2, #8
 1242 001a B918     		adds	r1, r7, r2
 1243 001c 0022     		movs	r2, #0
 1244 001e 0092     		str	r2, [sp]
 1245 0020 1A00     		movs	r2, r3
 1246 0022 2300     		movs	r3, r4
 1247 0024 0800     		movs	r0, r1
 1248 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 287:Generated_Source\PSoC4/RTC_1.c **** 
 288:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 289:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 290:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 291:Generated_Source\PSoC4/RTC_1.c **** 
 292:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 293:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 294:Generated_Source\PSoC4/RTC_1.c ****         {
 295:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 296:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 297:Generated_Source\PSoC4/RTC_1.c ****         }
 298:Generated_Source\PSoC4/RTC_1.c ****         else
 299:Generated_Source\PSoC4/RTC_1.c ****         {
 300:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 301:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 302:Generated_Source\PSoC4/RTC_1.c ****         }
 303:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 304:Generated_Source\PSoC4/RTC_1.c **** }
 1249              		.loc 2 304 0
 1250 002a C046     		nop
 1251 002c BD46     		mov	sp, r7
 1252 002e 07B0     		add	sp, sp, #28
 1253              		@ sp needed
 1254 0030 90BD     		pop	{r4, r7, pc}
 1255              	.L54:
 1256 0032 C046     		.align	2
 1257              	.L53:
 1258 0034 00000000 		.word	RTC_1_unixTime
 1259              		.cfi_endproc
 1260              	.LFE34:
 1261              		.size	RTC_1_SetUnixTime, .-RTC_1_SetUnixTime
 1262              		.section	.text.RTC_1_GetUnixTime,"ax",%progbits
 1263              		.align	2
 1264              		.global	RTC_1_GetUnixTime
 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	RTC_1_GetUnixTime, %function
 1268              	RTC_1_GetUnixTime:
 1269              	.LFB35:
 305:Generated_Source\PSoC4/RTC_1.c **** 
 306:Generated_Source\PSoC4/RTC_1.c **** 
 307:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetUnixTime
 309:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/RTC_1.c **** *
 311:Generated_Source\PSoC4/RTC_1.c **** * \brief
 312:Generated_Source\PSoC4/RTC_1.c **** *  Returns the time in the Unix/Epoch time format - the number of seconds 
 313:Generated_Source\PSoC4/RTC_1.c **** * elapsed from January 1, 1970 UTC 00:00 hrs.
 314:Generated_Source\PSoC4/RTC_1.c **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 51


 315:Generated_Source\PSoC4/RTC_1.c **** * \return time The time value in the Unix time/Epoch time format.
 316:Generated_Source\PSoC4/RTC_1.c **** *
 317:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 318:Generated_Source\PSoC4/RTC_1.c **** uint64 RTC_1_GetUnixTime(void)
 319:Generated_Source\PSoC4/RTC_1.c **** {
 1270              		.loc 2 319 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274 0000 90B5     		push	{r4, r7, lr}
 1275              		.cfi_def_cfa_offset 12
 1276              		.cfi_offset 4, -12
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 00AF     		add	r7, sp, #0
 1280              		.cfi_def_cfa_register 7
 320:Generated_Source\PSoC4/RTC_1.c ****     return (RTC_1_unixTime);
 1281              		.loc 2 320 0
 1282 0004 034B     		ldr	r3, .L57
 1283 0006 5C68     		ldr	r4, [r3, #4]
 1284 0008 1B68     		ldr	r3, [r3]
 321:Generated_Source\PSoC4/RTC_1.c **** }
 1285              		.loc 2 321 0
 1286 000a 1800     		movs	r0, r3
 1287 000c 2100     		movs	r1, r4
 1288 000e BD46     		mov	sp, r7
 1289              		@ sp needed
 1290 0010 90BD     		pop	{r4, r7, pc}
 1291              	.L58:
 1292 0012 C046     		.align	2
 1293              	.L57:
 1294 0014 00000000 		.word	RTC_1_unixTime
 1295              		.cfi_endproc
 1296              	.LFE35:
 1297              		.size	RTC_1_GetUnixTime, .-RTC_1_GetUnixTime
 1298              		.section	.text.RTC_1_SetPeriod,"ax",%progbits
 1299              		.align	2
 1300              		.global	RTC_1_SetPeriod
 1301              		.code	16
 1302              		.thumb_func
 1303              		.type	RTC_1_SetPeriod, %function
 1304              	RTC_1_SetPeriod:
 1305              	.LFB36:
 322:Generated_Source\PSoC4/RTC_1.c **** 
 323:Generated_Source\PSoC4/RTC_1.c **** 
 324:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 325:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetPeriod
 326:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 327:Generated_Source\PSoC4/RTC_1.c **** *
 328:Generated_Source\PSoC4/RTC_1.c **** * \brief
 329:Generated_Source\PSoC4/RTC_1.c **** *  Sets the RTC time update API period.
 330:Generated_Source\PSoC4/RTC_1.c **** *
 331:Generated_Source\PSoC4/RTC_1.c **** *  The user needs to pass the period as
 332:Generated_Source\PSoC4/RTC_1.c **** *  a number of ticks and also a reference number of ticks taken by the same clock
 333:Generated_Source\PSoC4/RTC_1.c **** *  source for one second. For instance, for a 32 kHz clock source and RTC
 334:Generated_Source\PSoC4/RTC_1.c **** *  period of 100 ms, the "ticks" value is 3200 and the "refOneSecTicks" value
 335:Generated_Source\PSoC4/RTC_1.c **** *  is 32000. This value is used to increment the time every time
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 52


 336:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_Update() API is called.
 337:Generated_Source\PSoC4/RTC_1.c **** *
 338:Generated_Source\PSoC4/RTC_1.c **** * \param
 339:Generated_Source\PSoC4/RTC_1.c **** *  ticks The clock period taken as a number of ticks.
 340:Generated_Source\PSoC4/RTC_1.c **** *
 341:Generated_Source\PSoC4/RTC_1.c **** * \param
 342:Generated_Source\PSoC4/RTC_1.c **** * refOneSecTicks The reference number of ticks taken by the same clock source
 343:Generated_Source\PSoC4/RTC_1.c **** *  for one second (the input clock frequency in Hz).
 344:Generated_Source\PSoC4/RTC_1.c **** *
 345:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetPeriod(uint32 ticks, uint32 refOneSecTicks)
 347:Generated_Source\PSoC4/RTC_1.c **** {
 1306              		.loc 2 347 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 8
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 82B0     		sub	sp, sp, #8
 1315              		.cfi_def_cfa_offset 16
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
 1319 0008 3960     		str	r1, [r7]
 348:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_updateTimePeriod = ticks;
 1320              		.loc 2 348 0
 1321 000a 054B     		ldr	r3, .L60
 1322 000c 7A68     		ldr	r2, [r7, #4]
 1323 000e 1A60     		str	r2, [r3]
 349:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_tickRefOneSec    = refOneSecTicks;
 1324              		.loc 2 349 0
 1325 0010 044B     		ldr	r3, .L60+4
 1326 0012 3A68     		ldr	r2, [r7]
 1327 0014 1A60     		str	r2, [r3]
 350:Generated_Source\PSoC4/RTC_1.c **** }
 1328              		.loc 2 350 0
 1329 0016 C046     		nop
 1330 0018 BD46     		mov	sp, r7
 1331 001a 02B0     		add	sp, sp, #8
 1332              		@ sp needed
 1333 001c 80BD     		pop	{r7, pc}
 1334              	.L61:
 1335 001e C046     		.align	2
 1336              	.L60:
 1337 0020 00000000 		.word	RTC_1_updateTimePeriod
 1338 0024 04000000 		.word	RTC_1_tickRefOneSec
 1339              		.cfi_endproc
 1340              	.LFE36:
 1341              		.size	RTC_1_SetPeriod, .-RTC_1_SetPeriod
 1342              		.section	.text.RTC_1_GetPeriod,"ax",%progbits
 1343              		.align	2
 1344              		.global	RTC_1_GetPeriod
 1345              		.code	16
 1346              		.thumb_func
 1347              		.type	RTC_1_GetPeriod, %function
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 53


 1348              	RTC_1_GetPeriod:
 1349              	.LFB37:
 351:Generated_Source\PSoC4/RTC_1.c **** 
 352:Generated_Source\PSoC4/RTC_1.c **** 
 353:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 354:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetPeriod
 355:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 356:Generated_Source\PSoC4/RTC_1.c **** *
 357:Generated_Source\PSoC4/RTC_1.c **** * \brief
 358:Generated_Source\PSoC4/RTC_1.c **** *  Gets the RTC time update API period.
 359:Generated_Source\PSoC4/RTC_1.c **** *
 360:Generated_Source\PSoC4/RTC_1.c **** * \return period The clock period taken as a number of ticks.
 361:Generated_Source\PSoC4/RTC_1.c **** *
 362:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetPeriod(void)
 364:Generated_Source\PSoC4/RTC_1.c **** {
 1350              		.loc 2 364 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 00AF     		add	r7, sp, #0
 1359              		.cfi_def_cfa_register 7
 365:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_updateTimePeriod);
 1360              		.loc 2 365 0
 1361 0004 024B     		ldr	r3, .L64
 1362 0006 1B68     		ldr	r3, [r3]
 366:Generated_Source\PSoC4/RTC_1.c **** }
 1363              		.loc 2 366 0
 1364 0008 1800     		movs	r0, r3
 1365 000a BD46     		mov	sp, r7
 1366              		@ sp needed
 1367 000c 80BD     		pop	{r7, pc}
 1368              	.L65:
 1369 000e C046     		.align	2
 1370              	.L64:
 1371 0010 00000000 		.word	RTC_1_updateTimePeriod
 1372              		.cfi_endproc
 1373              	.LFE37:
 1374              		.size	RTC_1_GetPeriod, .-RTC_1_GetPeriod
 1375              		.section	.text.RTC_1_GetRefOneSec,"ax",%progbits
 1376              		.align	2
 1377              		.global	RTC_1_GetRefOneSec
 1378              		.code	16
 1379              		.thumb_func
 1380              		.type	RTC_1_GetRefOneSec, %function
 1381              	RTC_1_GetRefOneSec:
 1382              	.LFB38:
 367:Generated_Source\PSoC4/RTC_1.c **** 
 368:Generated_Source\PSoC4/RTC_1.c **** 
 369:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetRefOneSec
 371:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC4/RTC_1.c **** * \brief
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 54


 373:Generated_Source\PSoC4/RTC_1.c **** * Gets the RTC time update API period.
 374:Generated_Source\PSoC4/RTC_1.c **** *
 375:Generated_Source\PSoC4/RTC_1.c **** * \return
 376:Generated_Source\PSoC4/RTC_1.c **** * period The reference number of ticks taken by the RTC clock source for one
 377:Generated_Source\PSoC4/RTC_1.c **** * second.
 378:Generated_Source\PSoC4/RTC_1.c **** *
 379:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 380:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetRefOneSec(void)
 381:Generated_Source\PSoC4/RTC_1.c **** {
 1383              		.loc 2 381 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 1, uses_anonymous_args = 0
 1387 0000 80B5     		push	{r7, lr}
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 382:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_tickRefOneSec);
 1393              		.loc 2 382 0
 1394 0004 024B     		ldr	r3, .L68
 1395 0006 1B68     		ldr	r3, [r3]
 383:Generated_Source\PSoC4/RTC_1.c **** }
 1396              		.loc 2 383 0
 1397 0008 1800     		movs	r0, r3
 1398 000a BD46     		mov	sp, r7
 1399              		@ sp needed
 1400 000c 80BD     		pop	{r7, pc}
 1401              	.L69:
 1402 000e C046     		.align	2
 1403              	.L68:
 1404 0010 04000000 		.word	RTC_1_tickRefOneSec
 1405              		.cfi_endproc
 1406              	.LFE38:
 1407              		.size	RTC_1_GetRefOneSec, .-RTC_1_GetRefOneSec
 1408              		.section	.text.RTC_1_GetDateAndTime,"ax",%progbits
 1409              		.align	2
 1410              		.global	RTC_1_GetDateAndTime
 1411              		.code	16
 1412              		.thumb_func
 1413              		.type	RTC_1_GetDateAndTime, %function
 1414              	RTC_1_GetDateAndTime:
 1415              	.LFB39:
 384:Generated_Source\PSoC4/RTC_1.c **** 
 385:Generated_Source\PSoC4/RTC_1.c **** 
 386:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 387:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetDateAndTime
 388:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 389:Generated_Source\PSoC4/RTC_1.c **** *
 390:Generated_Source\PSoC4/RTC_1.c **** * Reads the current time and date.
 391:Generated_Source\PSoC4/RTC_1.c **** *
 392:Generated_Source\PSoC4/RTC_1.c **** * \param dateTime The pointer to the RTC_date_time structure to which time and 
 393:Generated_Source\PSoC4/RTC_1.c **** * date is returned.
 394:Generated_Source\PSoC4/RTC_1.c **** *
 395:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 396:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_GetDateAndTime(RTC_1_DATE_TIME* dateTime)
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 55


 397:Generated_Source\PSoC4/RTC_1.c **** {
 1416              		.loc 2 397 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 90B5     		push	{r4, r7, lr}
 1421              		.cfi_def_cfa_offset 12
 1422              		.cfi_offset 4, -12
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
 1425 0002 85B0     		sub	sp, sp, #20
 1426              		.cfi_def_cfa_offset 32
 1427 0004 02AF     		add	r7, sp, #8
 1428              		.cfi_def_cfa 7, 24
 1429 0006 7860     		str	r0, [r7, #4]
 398:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(dateTime, (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 1430              		.loc 2 398 0
 1431 0008 0A4B     		ldr	r3, .L71
 1432 000a 1B68     		ldr	r3, [r3]
 1433 000c 1900     		movs	r1, r3
 1434 000e 0023     		movs	r3, #0
 1435 0010 1A00     		movs	r2, r3
 1436 0012 094B     		ldr	r3, .L71+4
 1437 0014 5C68     		ldr	r4, [r3, #4]
 1438 0016 1B68     		ldr	r3, [r3]
 1439 0018 5B18     		adds	r3, r3, r1
 1440 001a 5441     		adcs	r4, r4, r2
 1441 001c 7968     		ldr	r1, [r7, #4]
 1442 001e 0022     		movs	r2, #0
 1443 0020 0092     		str	r2, [sp]
 1444 0022 1A00     		movs	r2, r3
 1445 0024 2300     		movs	r3, r4
 1446 0026 0800     		movs	r0, r1
 1447 0028 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 399:Generated_Source\PSoC4/RTC_1.c ****                                                                             RTC_1_INITIAL_TIME_FORM
 400:Generated_Source\PSoC4/RTC_1.c **** }
 1448              		.loc 2 400 0
 1449 002c C046     		nop
 1450 002e BD46     		mov	sp, r7
 1451 0030 03B0     		add	sp, sp, #12
 1452              		@ sp needed
 1453 0032 90BD     		pop	{r4, r7, pc}
 1454              	.L72:
 1455              		.align	2
 1456              	.L71:
 1457 0034 08000000 		.word	RTC_1_dstTimeOffset
 1458 0038 00000000 		.word	RTC_1_unixTime
 1459              		.cfi_endproc
 1460              	.LFE39:
 1461              		.size	RTC_1_GetDateAndTime, .-RTC_1_GetDateAndTime
 1462              		.section	.text.RTC_1_GetTime,"ax",%progbits
 1463              		.align	2
 1464              		.global	RTC_1_GetTime
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	RTC_1_GetTime, %function
 1468              	RTC_1_GetTime:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 56


 1469              	.LFB40:
 401:Generated_Source\PSoC4/RTC_1.c **** 
 402:Generated_Source\PSoC4/RTC_1.c **** 
 403:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 404:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetTime
 405:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 406:Generated_Source\PSoC4/RTC_1.c **** * \brief
 407:Generated_Source\PSoC4/RTC_1.c **** * Reads the current time.
 408:Generated_Source\PSoC4/RTC_1.c **** *
 409:Generated_Source\PSoC4/RTC_1.c **** * \return
 410:Generated_Source\PSoC4/RTC_1.c **** * date The value of date in the user selected format. The date value is 
 411:Generated_Source\PSoC4/RTC_1.c **** * available in the BCD format.
 412:Generated_Source\PSoC4/RTC_1.c **** *
 413:Generated_Source\PSoC4/RTC_1.c **** * \warning
 414:Generated_Source\PSoC4/RTC_1.c **** *  Using RTC_1_GetTime and RTC_GetDate API separately might result
 415:Generated_Source\PSoC4/RTC_1.c **** *  in errors when the time wraps around the end of the day. To avoid this,
 416:Generated_Source\PSoC4/RTC_1.c **** *  use RTC_1_GetDateAndTime API.
 417:Generated_Source\PSoC4/RTC_1.c **** *
 418:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 419:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetTime(void)
 420:Generated_Source\PSoC4/RTC_1.c **** {
 1470              		.loc 2 420 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 0
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
 1474 0000 90B5     		push	{r4, r7, lr}
 1475              		.cfi_def_cfa_offset 12
 1476              		.cfi_offset 4, -12
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 83B0     		sub	sp, sp, #12
 1480              		.cfi_def_cfa_offset 24
 1481 0004 02AF     		add	r7, sp, #8
 1482              		.cfi_def_cfa 7, 16
 421:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&RTC_1_currentTimeDate,
 1483              		.loc 2 421 0
 1484 0006 0C4B     		ldr	r3, .L75
 1485 0008 1B68     		ldr	r3, [r3]
 1486 000a 1900     		movs	r1, r3
 1487 000c 0023     		movs	r3, #0
 1488 000e 1A00     		movs	r2, r3
 1489 0010 0A4B     		ldr	r3, .L75+4
 1490 0012 5C68     		ldr	r4, [r3, #4]
 1491 0014 1B68     		ldr	r3, [r3]
 1492 0016 5B18     		adds	r3, r3, r1
 1493 0018 5441     		adcs	r4, r4, r2
 1494 001a 0949     		ldr	r1, .L75+8
 1495 001c 0022     		movs	r2, #0
 1496 001e 0092     		str	r2, [sp]
 1497 0020 1A00     		movs	r2, r3
 1498 0022 2300     		movs	r3, r4
 1499 0024 0800     		movs	r0, r1
 1500 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 422:Generated_Source\PSoC4/RTC_1.c ****                                     (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 423:Generated_Source\PSoC4/RTC_1.c ****                                      RTC_1_INITIAL_TIME_FORMAT);
 424:Generated_Source\PSoC4/RTC_1.c **** 
 425:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.time);
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 57


 1501              		.loc 2 425 0
 1502 002a 054B     		ldr	r3, .L75+8
 1503 002c 1B68     		ldr	r3, [r3]
 426:Generated_Source\PSoC4/RTC_1.c **** }
 1504              		.loc 2 426 0
 1505 002e 1800     		movs	r0, r3
 1506 0030 BD46     		mov	sp, r7
 1507 0032 01B0     		add	sp, sp, #4
 1508              		@ sp needed
 1509 0034 90BD     		pop	{r4, r7, pc}
 1510              	.L76:
 1511 0036 C046     		.align	2
 1512              	.L75:
 1513 0038 08000000 		.word	RTC_1_dstTimeOffset
 1514 003c 00000000 		.word	RTC_1_unixTime
 1515 0040 00000000 		.word	RTC_1_currentTimeDate
 1516              		.cfi_endproc
 1517              	.LFE40:
 1518              		.size	RTC_1_GetTime, .-RTC_1_GetTime
 1519              		.section	.text.RTC_1_GetDate,"ax",%progbits
 1520              		.align	2
 1521              		.global	RTC_1_GetDate
 1522              		.code	16
 1523              		.thumb_func
 1524              		.type	RTC_1_GetDate, %function
 1525              	RTC_1_GetDate:
 1526              	.LFB41:
 427:Generated_Source\PSoC4/RTC_1.c **** 
 428:Generated_Source\PSoC4/RTC_1.c **** 
 429:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 430:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetDate
 431:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 432:Generated_Source\PSoC4/RTC_1.c **** *
 433:Generated_Source\PSoC4/RTC_1.c **** * \brief Reads the current time.
 434:Generated_Source\PSoC4/RTC_1.c **** *
 435:Generated_Source\PSoC4/RTC_1.c **** * \return
 436:Generated_Source\PSoC4/RTC_1.c **** * time The time value in the format selected by the user (12/24 hr);
 437:Generated_Source\PSoC4/RTC_1.c **** * The time value is available in the BCD format.
 438:Generated_Source\PSoC4/RTC_1.c **** *
 439:Generated_Source\PSoC4/RTC_1.c **** * \note
 440:Generated_Source\PSoC4/RTC_1.c **** *  Using RTC_1_GetTime and RTC_1_GetDate API separately
 441:Generated_Source\PSoC4/RTC_1.c **** *  might result in errors when the time wraps around the end of the day. To
 442:Generated_Source\PSoC4/RTC_1.c **** *  avoid this, use RTC_1_GetDateAndTime API.
 443:Generated_Source\PSoC4/RTC_1.c **** *
 444:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 445:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetDate(void)
 446:Generated_Source\PSoC4/RTC_1.c **** {
 1527              		.loc 2 446 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531 0000 90B5     		push	{r4, r7, lr}
 1532              		.cfi_def_cfa_offset 12
 1533              		.cfi_offset 4, -12
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 58


 1537              		.cfi_def_cfa_offset 24
 1538 0004 02AF     		add	r7, sp, #8
 1539              		.cfi_def_cfa 7, 16
 447:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&RTC_1_currentTimeDate,
 1540              		.loc 2 447 0
 1541 0006 0C4B     		ldr	r3, .L79
 1542 0008 1B68     		ldr	r3, [r3]
 1543 000a 1900     		movs	r1, r3
 1544 000c 0023     		movs	r3, #0
 1545 000e 1A00     		movs	r2, r3
 1546 0010 0A4B     		ldr	r3, .L79+4
 1547 0012 5C68     		ldr	r4, [r3, #4]
 1548 0014 1B68     		ldr	r3, [r3]
 1549 0016 5B18     		adds	r3, r3, r1
 1550 0018 5441     		adcs	r4, r4, r2
 1551 001a 0949     		ldr	r1, .L79+8
 1552 001c 0022     		movs	r2, #0
 1553 001e 0092     		str	r2, [sp]
 1554 0020 1A00     		movs	r2, r3
 1555 0022 2300     		movs	r3, r4
 1556 0024 0800     		movs	r0, r1
 1557 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 448:Generated_Source\PSoC4/RTC_1.c ****                                     (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 449:Generated_Source\PSoC4/RTC_1.c ****                                      RTC_1_INITIAL_TIME_FORMAT);
 450:Generated_Source\PSoC4/RTC_1.c **** 
 451:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.date);
 1558              		.loc 2 451 0
 1559 002a 054B     		ldr	r3, .L79+8
 1560 002c 5B68     		ldr	r3, [r3, #4]
 452:Generated_Source\PSoC4/RTC_1.c **** }
 1561              		.loc 2 452 0
 1562 002e 1800     		movs	r0, r3
 1563 0030 BD46     		mov	sp, r7
 1564 0032 01B0     		add	sp, sp, #4
 1565              		@ sp needed
 1566 0034 90BD     		pop	{r4, r7, pc}
 1567              	.L80:
 1568 0036 C046     		.align	2
 1569              	.L79:
 1570 0038 08000000 		.word	RTC_1_dstTimeOffset
 1571 003c 00000000 		.word	RTC_1_unixTime
 1572 0040 00000000 		.word	RTC_1_currentTimeDate
 1573              		.cfi_endproc
 1574              	.LFE41:
 1575              		.size	RTC_1_GetDate, .-RTC_1_GetDate
 1576              		.section	.text.RTC_1_ReadStatus,"ax",%progbits
 1577              		.align	2
 1578              		.global	RTC_1_ReadStatus
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	RTC_1_ReadStatus, %function
 1582              	RTC_1_ReadStatus:
 1583              	.LFB42:
 453:Generated_Source\PSoC4/RTC_1.c **** 
 454:Generated_Source\PSoC4/RTC_1.c **** 
 455:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_ALARM_STATUS)
 456:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 59


 457:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmDateAndTime
 458:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/RTC_1.c ****     *
 460:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 461:Generated_Source\PSoC4/RTC_1.c ****     *  Writes the time and date values as the current alarm time and date.
 462:Generated_Source\PSoC4/RTC_1.c ****     *
 463:Generated_Source\PSoC4/RTC_1.c ****     * \param
 464:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTime The pointer to the RTC_1_date_time global structure where
 465:Generated_Source\PSoC4/RTC_1.c ****     *  new values of the alarm time and date are stored.
 466:Generated_Source\PSoC4/RTC_1.c ****     *
 467:Generated_Source\PSoC4/RTC_1.c ****     * \note
 468:Generated_Source\PSoC4/RTC_1.c ****     *  Invalid time entries are written with "00:00:00:00" for the 24-hour format and
 469:Generated_Source\PSoC4/RTC_1.c ****     *  "AM 12:00:00:00" for the 12-hour format. Invalid date entries are written with
 470:Generated_Source\PSoC4/RTC_1.c ****     *  a date equivalent to 01-JAN-2000.
 471:Generated_Source\PSoC4/RTC_1.c ****     *
 472:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 473:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetAlarmDateAndTime(const RTC_1_DATE_TIME* alarmTime)
 474:Generated_Source\PSoC4/RTC_1.c ****     {
 475:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCfgTimeDate = *alarmTime;
 476:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(alarmTime, (uint8)RTC_1_alarmCfgMask);
 477:Generated_Source\PSoC4/RTC_1.c ****     }
 478:Generated_Source\PSoC4/RTC_1.c **** 
 479:Generated_Source\PSoC4/RTC_1.c **** 
 480:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 481:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmDateAndTime
 482:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 483:Generated_Source\PSoC4/RTC_1.c ****     *
 484:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 485:Generated_Source\PSoC4/RTC_1.c ****     *  Reads the current alarm time and date.
 486:Generated_Source\PSoC4/RTC_1.c ****     *
 487:Generated_Source\PSoC4/RTC_1.c ****     * \param
 488:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTimeDate The pointer to the RTC_1_date_time structure to which
 489:Generated_Source\PSoC4/RTC_1.c ****     *  the alarm date and time are returned.
 490:Generated_Source\PSoC4/RTC_1.c ****     *
 491:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 492:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_GetAlarmDateAndTime(RTC_1_DATE_TIME* alarmTimeDate)
 493:Generated_Source\PSoC4/RTC_1.c ****     {
 494:Generated_Source\PSoC4/RTC_1.c ****         *alarmTimeDate = RTC_1_alarmCfgTimeDate;
 495:Generated_Source\PSoC4/RTC_1.c ****     }
 496:Generated_Source\PSoC4/RTC_1.c **** 
 497:Generated_Source\PSoC4/RTC_1.c **** 
 498:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 499:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmMask
 500:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 501:Generated_Source\PSoC4/RTC_1.c ****     *
 502:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 503:Generated_Source\PSoC4/RTC_1.c ****     *  Writes the Alarm Mask software register with one bit per time/date entry.
 504:Generated_Source\PSoC4/RTC_1.c ****     *  The alarm is true when all masked time/date values match the Alarm values.
 505:Generated_Source\PSoC4/RTC_1.c ****     *  Generated only if the alarm functionality is enabled.
 506:Generated_Source\PSoC4/RTC_1.c ****     *
 507:Generated_Source\PSoC4/RTC_1.c ****     * \param
 508:Generated_Source\PSoC4/RTC_1.c ****     *  mask The Alarm Mask software register value. The values shown below can be
 509:Generated_Source\PSoC4/RTC_1.c ****     *  OR'ed and passed as an argument as well.
 510:Generated_Source\PSoC4/RTC_1.c ****     * \param
 511:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_SEC_MASK The second alarm mask allows
 512:Generated_Source\PSoC4/RTC_1.c ****     *  matching the alarm second register with the current second register.
 513:Generated_Source\PSoC4/RTC_1.c ****     * \param
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 60


 514:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_MIN_MASK The minute alarm mask allows matching the
 515:Generated_Source\PSoC4/RTC_1.c ****     *  alarm minute register with the current minute register.
 516:Generated_Source\PSoC4/RTC_1.c ****     * \param
 517:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_HOUR_MASK The hour alarm mask allows
 518:Generated_Source\PSoC4/RTC_1.c ****     * matching the alarm hour register with the current hour register.
 519:Generated_Source\PSoC4/RTC_1.c ****     * \param
 520:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFWEEK_MASK The day of the week alarm mask 
 521:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the week register with the current day of
 522:Generated_Source\PSoC4/RTC_1.c ****     * the week register.
 523:Generated_Source\PSoC4/RTC_1.c ****     * \param
 524:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_DAYOFMONTH_MASK The day of the month alarm mask
 525:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the month register with the current day 
 526:Generated_Source\PSoC4/RTC_1.c ****     * of the month register.
 527:Generated_Source\PSoC4/RTC_1.c ****     * \param
 528:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_MONTH_MASK The month alarm mask allows matching 
 529:Generated_Source\PSoC4/RTC_1.c ****     * the alarm month register with the current month register.
 530:Generated_Source\PSoC4/RTC_1.c ****     * \param
 531:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_YEAR_MASK The year alarm mask allows matching the
 532:Generated_Source\PSoC4/RTC_1.c ****     *  alarm year register with the current year register.
 533:Generated_Source\PSoC4/RTC_1.c ****     *
 534:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 535:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetAlarmMask(uint32 mask)
 536:Generated_Source\PSoC4/RTC_1.c ****     {
 537:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCfgMask = (uint8)mask;
 538:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(&RTC_1_alarmCfgTimeDate, (uint8)mask);
 539:Generated_Source\PSoC4/RTC_1.c ****     }
 540:Generated_Source\PSoC4/RTC_1.c **** 
 541:Generated_Source\PSoC4/RTC_1.c **** 
 542:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 543:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmMask
 544:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 545:Generated_Source\PSoC4/RTC_1.c ****     *
 546:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 547:Generated_Source\PSoC4/RTC_1.c ****     *  Reads the Alarm Mask software register. Generated only if the alarm 
 548:Generated_Source\PSoC4/RTC_1.c ****     * functionality is enabled.
 549:Generated_Source\PSoC4/RTC_1.c ****     *
 550:Generated_Source\PSoC4/RTC_1.c ****     * \return
 551:Generated_Source\PSoC4/RTC_1.c ****     *  The Alarm Mask value with each bit representing the status of the alarm 
 552:Generated_Source\PSoC4/RTC_1.c ****     * time/date match enable.
 553:Generated_Source\PSoC4/RTC_1.c ****     *
 554:Generated_Source\PSoC4/RTC_1.c ****     * \return
 555:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_SEC_MASK - The second alarm mask allows matching the
 556:Generated_Source\PSoC4/RTC_1.c ****     * alarm second register with the current second register.
 557:Generated_Source\PSoC4/RTC_1.c ****     *
 558:Generated_Source\PSoC4/RTC_1.c ****     * \return
 559:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_MIN_MASK - The minute alarm mask allows matching the 
 560:Generated_Source\PSoC4/RTC_1.c ****     * alarm minute register with the current minute register.
 561:Generated_Source\PSoC4/RTC_1.c ****     *
 562:Generated_Source\PSoC4/RTC_1.c ****     * \return
 563:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_HOUR_MASK - The hour alarm mask allows matching the 
 564:Generated_Source\PSoC4/RTC_1.c ****     * alarm hour register with the current hour register.
 565:Generated_Source\PSoC4/RTC_1.c ****     *
 566:Generated_Source\PSoC4/RTC_1.c ****     * \return
 567:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFWEEK_MASK - The day of the week alarm mask allows
 568:Generated_Source\PSoC4/RTC_1.c ****     * matching the alarm day of the week register with the current day of the 
 569:Generated_Source\PSoC4/RTC_1.c ****     * week register.
 570:Generated_Source\PSoC4/RTC_1.c ****     *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 61


 571:Generated_Source\PSoC4/RTC_1.c ****     * \return
 572:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFMONTH_MASK - The day of the month alarm mask 
 573:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the month register with the current day of 
 574:Generated_Source\PSoC4/RTC_1.c ****     * the month register.
 575:Generated_Source\PSoC4/RTC_1.c ****     *
 576:Generated_Source\PSoC4/RTC_1.c ****     * \return
 577:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_MONTH_MASK - The month alarm mask allows matching 
 578:Generated_Source\PSoC4/RTC_1.c ****     * the alarm month register with the current month register.
 579:Generated_Source\PSoC4/RTC_1.c ****     *
 580:Generated_Source\PSoC4/RTC_1.c ****     * \return
 581:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_YEAR_MASK - The year alarm mask allows matching the
 582:Generated_Source\PSoC4/RTC_1.c ****     * alarm year register with the current year register.
 583:Generated_Source\PSoC4/RTC_1.c ****     *
 584:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 585:Generated_Source\PSoC4/RTC_1.c ****     uint32 RTC_1_GetAlarmMask(void)
 586:Generated_Source\PSoC4/RTC_1.c ****     {
 587:Generated_Source\PSoC4/RTC_1.c ****         return((uint32)RTC_1_alarmCfgMask);
 588:Generated_Source\PSoC4/RTC_1.c ****     }
 589:Generated_Source\PSoC4/RTC_1.c **** 
 590:Generated_Source\PSoC4/RTC_1.c **** 
 591:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 592:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmStatus
 593:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 594:Generated_Source\PSoC4/RTC_1.c ****     *
 595:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 596:Generated_Source\PSoC4/RTC_1.c ****     *  Returns the alarm status of RTC.
 597:Generated_Source\PSoC4/RTC_1.c ****     *
 598:Generated_Source\PSoC4/RTC_1.c ****     * \return
 599:Generated_Source\PSoC4/RTC_1.c ****     *  The Alarm active status. This bit is high when the current time and date match the alarm
 600:Generated_Source\PSoC4/RTC_1.c ****     *  time and date.
 601:Generated_Source\PSoC4/RTC_1.c ****     *
 602:Generated_Source\PSoC4/RTC_1.c ****     * \return
 603:Generated_Source\PSoC4/RTC_1.c ****     *  0 - The Alarm status is not active.
 604:Generated_Source\PSoC4/RTC_1.c ****     * \return
 605:Generated_Source\PSoC4/RTC_1.c ****     *  1 - The Alarm status is active.
 606:Generated_Source\PSoC4/RTC_1.c ****     *
 607:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 608:Generated_Source\PSoC4/RTC_1.c ****     uint32 RTC_1_GetAlarmStatus(void)
 609:Generated_Source\PSoC4/RTC_1.c ****     {
 610:Generated_Source\PSoC4/RTC_1.c ****         return((0uL != (RTC_1_currentTimeDate.status & (1uL << RTC_1_STATUS_ALARM_OFFSET))) ? 1uL :
 611:Generated_Source\PSoC4/RTC_1.c ****     }
 612:Generated_Source\PSoC4/RTC_1.c **** 
 613:Generated_Source\PSoC4/RTC_1.c **** 
 614:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 615:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_ClearAlarmStatus
 616:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 617:Generated_Source\PSoC4/RTC_1.c ****     *
 618:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 619:Generated_Source\PSoC4/RTC_1.c ****     *  Clears the alarm status of RTC.
 620:Generated_Source\PSoC4/RTC_1.c ****     *
 621:Generated_Source\PSoC4/RTC_1.c ****     * \note
 622:Generated_Source\PSoC4/RTC_1.c ****     * The Alarm active (AA) flag clears after read. This bit will be set in the next
 623:Generated_Source\PSoC4/RTC_1.c ****     * alarm match event only. If Alarm is set on only minutes and the alarm
 624:Generated_Source\PSoC4/RTC_1.c ****     * minutes is 20 minutes - the alarm triggers once every 20th minute of
 625:Generated_Source\PSoC4/RTC_1.c ****     * every hour.
 626:Generated_Source\PSoC4/RTC_1.c ****     *
 627:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 62


 628:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_ClearAlarmStatus(void)
 629:Generated_Source\PSoC4/RTC_1.c ****     {
 630:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= (~(1uL << RTC_1_STATUS_ALARM_OFFSET));
 631:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCurStatus = 0u;
 632:Generated_Source\PSoC4/RTC_1.c ****     }
 633:Generated_Source\PSoC4/RTC_1.c **** 
 634:Generated_Source\PSoC4/RTC_1.c **** 
 635:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 636:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmHandler
 637:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC_1.c ****     *
 639:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 640:Generated_Source\PSoC4/RTC_1.c ****     *  This API sets the function to be called when the alarm goes off / triggers.
 641:Generated_Source\PSoC4/RTC_1.c ****     *  This API is generated only if the alarm functionality is enabled in the
 642:Generated_Source\PSoC4/RTC_1.c ****     *  customizer.
 643:Generated_Source\PSoC4/RTC_1.c ****     *
 644:Generated_Source\PSoC4/RTC_1.c ****     * \param
 645:Generated_Source\PSoC4/RTC_1.c ****     *  CallbackFunction The callback function address.
 646:Generated_Source\PSoC4/RTC_1.c ****     *
 647:Generated_Source\PSoC4/RTC_1.c ****     * \return
 648:Generated_Source\PSoC4/RTC_1.c ****     *  A previous callback function address.
 649:Generated_Source\PSoC4/RTC_1.c ****     *
 650:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 651:Generated_Source\PSoC4/RTC_1.c ****     void* RTC_1_SetAlarmHandler(void (*CallbackFunction)(void))
 652:Generated_Source\PSoC4/RTC_1.c ****     {
 653:Generated_Source\PSoC4/RTC_1.c ****         void (*tmpCallbackPtr)(void);
 654:Generated_Source\PSoC4/RTC_1.c **** 
 655:Generated_Source\PSoC4/RTC_1.c ****         tmpCallbackPtr = RTC_1_alarmCallbackPtr;
 656:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCallbackPtr = CallbackFunction;
 657:Generated_Source\PSoC4/RTC_1.c **** 
 658:Generated_Source\PSoC4/RTC_1.c ****         return((void*)tmpCallbackPtr);
 659:Generated_Source\PSoC4/RTC_1.c ****     }
 660:Generated_Source\PSoC4/RTC_1.c **** 
 661:Generated_Source\PSoC4/RTC_1.c **** 
 662:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 663:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetNexAlarmTime
 664:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 665:Generated_Source\PSoC4/RTC_1.c ****     *
 666:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 667:Generated_Source\PSoC4/RTC_1.c ****     *  This is an internal function that calculates the time of the next alarm
 668:Generated_Source\PSoC4/RTC_1.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 669:Generated_Source\PSoC4/RTC_1.c ****     *
 670:Generated_Source\PSoC4/RTC_1.c ****     * \param
 671:Generated_Source\PSoC4/RTC_1.c ****     *  curUnixTime The current time value in the UNIX format.
 672:Generated_Source\PSoC4/RTC_1.c ****     *
 673:Generated_Source\PSoC4/RTC_1.c ****     * \param
 674:Generated_Source\PSoC4/RTC_1.c ****     *  alarmCfgMask The current Alarm Config Mask.
 675:Generated_Source\PSoC4/RTC_1.c ****     *
 676:Generated_Source\PSoC4/RTC_1.c ****     * \return Returns time of the next alarm in the UNIX format.
 677:Generated_Source\PSoC4/RTC_1.c ****     *
 678:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 679:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask)
 680:Generated_Source\PSoC4/RTC_1.c ****     {
 681:Generated_Source\PSoC4/RTC_1.c ****         uint32 prevVal;
 682:Generated_Source\PSoC4/RTC_1.c ****         uint32 nextVal;
 683:Generated_Source\PSoC4/RTC_1.c ****         uint32 carryFlag;
 684:Generated_Source\PSoC4/RTC_1.c ****         uint32 daysInMonth;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 63


 685:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME curDateTime;
 686:Generated_Source\PSoC4/RTC_1.c **** 
 687:Generated_Source\PSoC4/RTC_1.c ****         carryFlag = 1u;
 688:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&curDateTime, curUnixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 689:Generated_Source\PSoC4/RTC_1.c **** 
 690:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Second value of next alarm time based on current time and Alarm Config Mask. 
 691:Generated_Source\PSoC4/RTC_1.c ****         if(0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_SEC_MASK))
 692:Generated_Source\PSoC4/RTC_1.c ****         {
 693:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetSecond(curDateTime.time);
 694:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMinSec(prevVal);
 695:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetSecond(curDateTime.time, nextVal);
 696:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 697:Generated_Source\PSoC4/RTC_1.c ****         }
 698:Generated_Source\PSoC4/RTC_1.c **** 
 699:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Minute value of next alarm time based on current time and Alarm Config Mask. 
 700:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MIN_MASK)))
 701:Generated_Source\PSoC4/RTC_1.c ****         {
 702:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetMinutes(curDateTime.time);
 703:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMinSec(prevVal);
 704:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetMinutes(curDateTime.time, nextVal);
 705:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 706:Generated_Source\PSoC4/RTC_1.c ****         }
 707:Generated_Source\PSoC4/RTC_1.c **** 
 708:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Hour value of next alarm time based on current time and Alarm Config Mask. */
 709:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_HOUR_MASK)))
 710:Generated_Source\PSoC4/RTC_1.c ****         {
 711:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetHours(curDateTime.time);
 712:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextHour(prevVal);
 713:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetHours(curDateTime.time, nextVal);
 714:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 715:Generated_Source\PSoC4/RTC_1.c ****         }
 716:Generated_Source\PSoC4/RTC_1.c **** 
 717:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Day value of next alarm time based on current time and Alarm Config Mask. */
 718:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_DAYOFMONTH_MASK))
 719:Generated_Source\PSoC4/RTC_1.c ****         {
 720:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetDay(curDateTime.date);
 721:Generated_Source\PSoC4/RTC_1.c ****             if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 722:Generated_Source\PSoC4/RTC_1.c ****             {
 723:Generated_Source\PSoC4/RTC_1.c ****                 daysInMonth = RTC_1_DaysInMonth(RTC_1_GetMonth(curDateTime.date),
 724:Generated_Source\PSoC4/RTC_1.c ****                                                            RTC_1_GetYear(curDateTime.date));
 725:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = prevVal + RTC_1_DAYS_PER_WEEK;
 726:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = (nextVal > daysInMonth) ? (nextVal - daysInMonth) : nextVal;
 727:Generated_Source\PSoC4/RTC_1.c ****             }
 728:Generated_Source\PSoC4/RTC_1.c ****             else
 729:Generated_Source\PSoC4/RTC_1.c ****             {
 730:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = RTC_1_GetNextDay(RTC_1_GetYear(curDateTime.date),
 731:Generated_Source\PSoC4/RTC_1.c ****                                                       RTC_1_GetMonth(curDateTime.date),
 732:Generated_Source\PSoC4/RTC_1.c ****                                                       RTC_1_GetDay(curDateTime.date),
 733:Generated_Source\PSoC4/RTC_1.c ****                                                       (~((uint32)alarmCfgMask)));
 734:Generated_Source\PSoC4/RTC_1.c ****             }
 735:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetDay(curDateTime.date, nextVal);
 736:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 737:Generated_Source\PSoC4/RTC_1.c ****         }
 738:Generated_Source\PSoC4/RTC_1.c **** 
 739:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Month value of next alarm time based on current time and Alarm Config Mask. *
 740:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK)))
 741:Generated_Source\PSoC4/RTC_1.c ****         {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 64


 742:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetMonth(curDateTime.date);
 743:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMonth(prevVal);
 744:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetMonth(curDateTime.date, nextVal);
 745:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 746:Generated_Source\PSoC4/RTC_1.c ****         }
 747:Generated_Source\PSoC4/RTC_1.c **** 
 748:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Year value of next alarm time based on current time and Alarm Config Mask. */
 749:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_YEAR_MASK)))
 750:Generated_Source\PSoC4/RTC_1.c ****         {
 751:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetYear(curDateTime.date);
 752:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextYear(prevVal);
 753:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetYear(curDateTime.date, nextVal);
 754:Generated_Source\PSoC4/RTC_1.c ****         }
 755:Generated_Source\PSoC4/RTC_1.c **** 
 756:Generated_Source\PSoC4/RTC_1.c ****         return(RTC_1_DateTimeToUnix(curDateTime.date, curDateTime.time));
 757:Generated_Source\PSoC4/RTC_1.c ****     }
 758:Generated_Source\PSoC4/RTC_1.c **** 
 759:Generated_Source\PSoC4/RTC_1.c **** 
 760:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 761:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_ConstructUnixAlarmTime
 762:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 763:Generated_Source\PSoC4/RTC_1.c ****     *
 764:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 765:Generated_Source\PSoC4/RTC_1.c ****     *  This is an internal function that calculates the time of the first alarm
 766:Generated_Source\PSoC4/RTC_1.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 767:Generated_Source\PSoC4/RTC_1.c ****     *
 768:Generated_Source\PSoC4/RTC_1.c ****     * \param
 769:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTime Desired alarm time in the regular time format.
 770:Generated_Source\PSoC4/RTC_1.c ****     *
 771:Generated_Source\PSoC4/RTC_1.c ****     * \param
 772:Generated_Source\PSoC4/RTC_1.c ****     *  alarmCfgMask The current Alarm Config Mask.
 773:Generated_Source\PSoC4/RTC_1.c ****     *
 774:Generated_Source\PSoC4/RTC_1.c ****     * \return
 775:Generated_Source\PSoC4/RTC_1.c ****     *  time of the first alarm in the UNIX format.
 776:Generated_Source\PSoC4/RTC_1.c ****     *
 777:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 778:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_ConstructUnixAlarmTime(const RTC_1_DATE_TIME* alarmTime, uint8 alarmCfgMask)
 779:Generated_Source\PSoC4/RTC_1.c ****     {
 780:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpCurVal;
 781:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpNextVal;
 782:Generated_Source\PSoC4/RTC_1.c ****         uint32 carryFlag;
 783:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpAlarmDate;
 784:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpAlarmTime;
 785:Generated_Source\PSoC4/RTC_1.c ****         uint32 daysInMonth;
 786:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME curDateTime;
 787:Generated_Source\PSoC4/RTC_1.c **** 
 788:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate = 0u;
 789:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime = 0u;
 790:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&curDateTime, RTC_1_unixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 791:Generated_Source\PSoC4/RTC_1.c **** 
 792:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Seconds value of first Alarm based on current time and Alarm Config Mask. */
 793:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal =  RTC_1_GetSecond(curDateTime.time);
 794:Generated_Source\PSoC4/RTC_1.c ****         tmpNextVal = RTC_1_GetSecond(alarmTime->time);
 795:Generated_Source\PSoC4/RTC_1.c ****         carryFlag = (tmpCurVal > tmpNextVal) ? 1u : 0u;
 796:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_SEC_MASK))
 797:Generated_Source\PSoC4/RTC_1.c ****         {
 798:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? 0u : tmpCurVal;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 65


 799:Generated_Source\PSoC4/RTC_1.c ****         }
 800:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime = RTC_1_SetSecond(tmpAlarmTime, tmpNextVal);
 801:Generated_Source\PSoC4/RTC_1.c **** 
 802:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Minutes value of first Alarm based on current time and Alarm Config Mask. */
 803:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetMinutes(curDateTime.time);
 804:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MIN_MASK))
 805:Generated_Source\PSoC4/RTC_1.c ****         {
 806:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextMinSec(tmpCurVal) : tmpCurVal;
 807:Generated_Source\PSoC4/RTC_1.c ****         }
 808:Generated_Source\PSoC4/RTC_1.c ****         else
 809:Generated_Source\PSoC4/RTC_1.c ****         {
 810:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetMinutes(alarmTime->time);
 811:Generated_Source\PSoC4/RTC_1.c ****         }
 812:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 813:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime =  RTC_1_SetMinutes(tmpAlarmTime, tmpNextVal);
 814:Generated_Source\PSoC4/RTC_1.c **** 
 815:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Hours value of first Alarm based on current time and Alarm Config Mask. */
 816:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetHours(curDateTime.time);
 817:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_HOUR_MASK))
 818:Generated_Source\PSoC4/RTC_1.c ****         {
 819:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextHour(tmpCurVal) : tmpCurVal;
 820:Generated_Source\PSoC4/RTC_1.c ****         }
 821:Generated_Source\PSoC4/RTC_1.c ****         else
 822:Generated_Source\PSoC4/RTC_1.c ****         {
 823:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetHours(alarmTime->time);
 824:Generated_Source\PSoC4/RTC_1.c ****             if((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(alarmTime->time))
 825:Generated_Source\PSoC4/RTC_1.c ****             {
 826:Generated_Source\PSoC4/RTC_1.c ****                 if((uint32)RTC_1_AM != RTC_1_GetAmPm(alarmTime->time))
 827:Generated_Source\PSoC4/RTC_1.c ****                 {
 828:Generated_Source\PSoC4/RTC_1.c ****                     tmpNextVal += RTC_1_HOURS_PER_HALF_DAY;
 829:Generated_Source\PSoC4/RTC_1.c ****                 }
 830:Generated_Source\PSoC4/RTC_1.c ****             }
 831:Generated_Source\PSoC4/RTC_1.c ****         }
 832:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 833:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime =  RTC_1_SetHours(tmpAlarmTime, tmpNextVal);
 834:Generated_Source\PSoC4/RTC_1.c **** 
 835:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Day value of first Alarm based on current time and Alarm Config Mask. */
 836:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetDay(curDateTime.date);
 837:Generated_Source\PSoC4/RTC_1.c ****         tmpNextVal = RTC_1_GetDay(alarmTime->date);
 838:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_DAYOFMONTH_MASK))
 839:Generated_Source\PSoC4/RTC_1.c ****         {
 840:Generated_Source\PSoC4/RTC_1.c ****             if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 841:Generated_Source\PSoC4/RTC_1.c ****             {
 842:Generated_Source\PSoC4/RTC_1.c ****                 daysInMonth = RTC_1_DaysInMonth(RTC_1_GetMonth(curDateTime.date),
 843:Generated_Source\PSoC4/RTC_1.c ****                                                            RTC_1_GetYear(curDateTime.date));
 844:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (curDateTime.dayOfWeek <= alarmTime->dayOfWeek) ? (alarmTime->dayOfWee
 845:Generated_Source\PSoC4/RTC_1.c ****                                 ((RTC_1_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWe
 846:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = tmpCurVal + tmpNextVal;
 847:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (tmpNextVal > daysInMonth) ? (tmpNextVal - daysInMonth) : tmpNextVal;
 848:Generated_Source\PSoC4/RTC_1.c ****             }
 849:Generated_Source\PSoC4/RTC_1.c ****             else
 850:Generated_Source\PSoC4/RTC_1.c ****             {
 851:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (0u == carryFlag) ? tmpCurVal : RTC_1_GetNextDay(RTC_1_GetYear(curDate
 852:Generated_Source\PSoC4/RTC_1.c ****                                                               RTC_1_GetMonth(curDateTime.date),
 853:Generated_Source\PSoC4/RTC_1.c ****                                                                tmpCurVal,
 854:Generated_Source\PSoC4/RTC_1.c ****                                                               RTC_1_ALARM_DAYOFMONTH_MASK);
 855:Generated_Source\PSoC4/RTC_1.c ****             }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 66


 856:Generated_Source\PSoC4/RTC_1.c ****         }
 857:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 858:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetDay(tmpAlarmDate, tmpNextVal);
 859:Generated_Source\PSoC4/RTC_1.c **** 
 860:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Month value of first Alarm based on current time and Alarm Config Mask. */
 861:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetMonth(curDateTime.date);
 862:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK))
 863:Generated_Source\PSoC4/RTC_1.c ****         {
 864:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextMonth(tmpCurVal) : tmpCurVal;
 865:Generated_Source\PSoC4/RTC_1.c ****         }
 866:Generated_Source\PSoC4/RTC_1.c ****         else
 867:Generated_Source\PSoC4/RTC_1.c ****         {
 868:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetMonth(alarmTime->date);
 869:Generated_Source\PSoC4/RTC_1.c ****         }
 870:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 871:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetMonth(tmpAlarmDate, tmpNextVal);
 872:Generated_Source\PSoC4/RTC_1.c **** 
 873:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Year value of first Alarm based on current time and Alarm Config Mask. */
 874:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetYear(curDateTime.date);
 875:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK))
 876:Generated_Source\PSoC4/RTC_1.c ****         {
 877:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextYear(tmpCurVal) : tmpCurVal;
 878:Generated_Source\PSoC4/RTC_1.c ****         }
 879:Generated_Source\PSoC4/RTC_1.c ****         else
 880:Generated_Source\PSoC4/RTC_1.c ****         {
 881:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetYear(alarmTime->date);
 882:Generated_Source\PSoC4/RTC_1.c ****         }
 883:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetYear(tmpAlarmDate, tmpNextVal);
 884:Generated_Source\PSoC4/RTC_1.c **** 
 885:Generated_Source\PSoC4/RTC_1.c ****         return(RTC_1_DateTimeToUnix(tmpAlarmDate, tmpAlarmTime));
 886:Generated_Source\PSoC4/RTC_1.c ****     }
 887:Generated_Source\PSoC4/RTC_1.c **** #endif/* (0u != RTC_1_INITIAL_ALARM_STATUS) */
 888:Generated_Source\PSoC4/RTC_1.c **** 
 889:Generated_Source\PSoC4/RTC_1.c **** 
 890:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 891:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ReadStatus
 892:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 893:Generated_Source\PSoC4/RTC_1.c **** *
 894:Generated_Source\PSoC4/RTC_1.c **** * \brief
 895:Generated_Source\PSoC4/RTC_1.c **** * Reads the Status software register, which has flags for DST (DST),
 896:Generated_Source\PSoC4/RTC_1.c **** * Leap Year (LY), AM/PM (AM_PM).
 897:Generated_Source\PSoC4/RTC_1.c **** *
 898:Generated_Source\PSoC4/RTC_1.c **** * \return
 899:Generated_Source\PSoC4/RTC_1.c **** * The values shown below are OR'ed and returned if more than one status
 900:Generated_Source\PSoC4/RTC_1.c **** * bits are set.
 901:Generated_Source\PSoC4/RTC_1.c **** *
 902:Generated_Source\PSoC4/RTC_1.c **** * \return
 903:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_DST - Status of Daylight Saving Time. This bit
 904:Generated_Source\PSoC4/RTC_1.c **** * goes high when the current time and date match the DST time and date and the 
 905:Generated_Source\PSoC4/RTC_1.c **** * time is incremented. This bit goes low after the DST interval and the time is 
 906:Generated_Source\PSoC4/RTC_1.c **** * decremented.
 907:Generated_Source\PSoC4/RTC_1.c **** *
 908:Generated_Source\PSoC4/RTC_1.c **** * \return
 909:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_LY - Status of Leap Year. This bit goes high when the 
 910:Generated_Source\PSoC4/RTC_1.c **** * current year is a leap year.
 911:Generated_Source\PSoC4/RTC_1.c **** *
 912:Generated_Source\PSoC4/RTC_1.c **** * \return
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 67


 913:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_AM_PM - Status of Current Time. This bit is low from 
 914:Generated_Source\PSoC4/RTC_1.c **** * midnight to noon and high from noon to midnight.
 915:Generated_Source\PSoC4/RTC_1.c **** *
 916:Generated_Source\PSoC4/RTC_1.c **** * \note
 917:Generated_Source\PSoC4/RTC_1.c **** * Reading the status without sync with the date and time read may cause an
 918:Generated_Source\PSoC4/RTC_1.c **** * error due to a roll-over at AM/PM, the end of a year, the end of a day;
 919:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_GetDateAndTime() API is used to obtain the status and
 920:Generated_Source\PSoC4/RTC_1.c **** * the status member of the returned structure can be checked with the masks.
 921:Generated_Source\PSoC4/RTC_1.c **** *
 922:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 923:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ReadStatus(void)
 924:Generated_Source\PSoC4/RTC_1.c **** {
 1584              		.loc 2 924 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 24
 1587              		@ frame_needed = 1, uses_anonymous_args = 0
 1588 0000 80B5     		push	{r7, lr}
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 86B0     		sub	sp, sp, #24
 1593              		.cfi_def_cfa_offset 32
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 925:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
 926:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME tmpTimeDate;
 927:Generated_Source\PSoC4/RTC_1.c **** 
 928:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_GetDateAndTime(&tmpTimeDate);
 1596              		.loc 2 928 0
 1597 0006 3B1D     		adds	r3, r7, #4
 1598 0008 1800     		movs	r0, r3
 1599 000a FFF7FEFF 		bl	RTC_1_GetDateAndTime
 929:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_GetYear(tmpTimeDate.date);
 1600              		.loc 2 929 0
 1601 000e 3B1D     		adds	r3, r7, #4
 1602 0010 5B68     		ldr	r3, [r3, #4]
 1603 0012 1800     		movs	r0, r3
 1604 0014 FFF7FEFF 		bl	RTC_1_GetYear
 1605 0018 0300     		movs	r3, r0
 1606 001a 7B61     		str	r3, [r7, #20]
 930:Generated_Source\PSoC4/RTC_1.c **** 
 931:Generated_Source\PSoC4/RTC_1.c ****     if(0uL != RTC_1_LeapYear(tmpYear))
 1607              		.loc 2 931 0
 1608 001c 7B69     		ldr	r3, [r7, #20]
 1609 001e 1800     		movs	r0, r3
 1610 0020 FFF7FEFF 		bl	RTC_1_LeapYear
 1611 0024 031E     		subs	r3, r0, #0
 1612 0026 06D0     		beq	.L82
 932:Generated_Source\PSoC4/RTC_1.c ****     {
 933:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_LY_OFFSET);
 1613              		.loc 2 933 0
 1614 0028 144B     		ldr	r3, .L87
 1615 002a DB68     		ldr	r3, [r3, #12]
 1616 002c 0822     		movs	r2, #8
 1617 002e 1A43     		orrs	r2, r3
 1618 0030 124B     		ldr	r3, .L87
 1619 0032 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 68


 1620 0034 06E0     		b	.L83
 1621              	.L82:
 934:Generated_Source\PSoC4/RTC_1.c ****     }
 935:Generated_Source\PSoC4/RTC_1.c ****     else
 936:Generated_Source\PSoC4/RTC_1.c ****     {
 937:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= ~(1uL << RTC_1_STATUS_LY_OFFSET);
 1622              		.loc 2 937 0
 1623 0036 114B     		ldr	r3, .L87
 1624 0038 DB68     		ldr	r3, [r3, #12]
 1625 003a 0822     		movs	r2, #8
 1626 003c 9343     		bics	r3, r2
 1627 003e 1A00     		movs	r2, r3
 1628 0040 0E4B     		ldr	r3, .L87
 1629 0042 DA60     		str	r2, [r3, #12]
 1630              	.L83:
 938:Generated_Source\PSoC4/RTC_1.c ****     }
 939:Generated_Source\PSoC4/RTC_1.c **** 
 940:Generated_Source\PSoC4/RTC_1.c **** 
 941:Generated_Source\PSoC4/RTC_1.c ****     if(0uL != RTC_1_GetAmPm(tmpTimeDate.time))
 1631              		.loc 2 941 0
 1632 0044 3B1D     		adds	r3, r7, #4
 1633 0046 1B68     		ldr	r3, [r3]
 1634 0048 1800     		movs	r0, r3
 1635 004a FFF7FEFF 		bl	RTC_1_GetAmPm
 1636 004e 031E     		subs	r3, r0, #0
 1637 0050 06D0     		beq	.L84
 942:Generated_Source\PSoC4/RTC_1.c ****     {
 943:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_AM_PM_OFFSET);
 1638              		.loc 2 943 0
 1639 0052 0A4B     		ldr	r3, .L87
 1640 0054 DB68     		ldr	r3, [r3, #12]
 1641 0056 1022     		movs	r2, #16
 1642 0058 1A43     		orrs	r2, r3
 1643 005a 084B     		ldr	r3, .L87
 1644 005c DA60     		str	r2, [r3, #12]
 1645 005e 06E0     		b	.L85
 1646              	.L84:
 944:Generated_Source\PSoC4/RTC_1.c ****     }
 945:Generated_Source\PSoC4/RTC_1.c ****     else
 946:Generated_Source\PSoC4/RTC_1.c ****     {
 947:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= ~(1uL << RTC_1_STATUS_AM_PM_OFFSET);
 1647              		.loc 2 947 0
 1648 0060 064B     		ldr	r3, .L87
 1649 0062 DB68     		ldr	r3, [r3, #12]
 1650 0064 1022     		movs	r2, #16
 1651 0066 9343     		bics	r3, r2
 1652 0068 1A00     		movs	r2, r3
 1653 006a 044B     		ldr	r3, .L87
 1654 006c DA60     		str	r2, [r3, #12]
 1655              	.L85:
 948:Generated_Source\PSoC4/RTC_1.c ****     }
 949:Generated_Source\PSoC4/RTC_1.c **** 
 950:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.status);
 1656              		.loc 2 950 0
 1657 006e 034B     		ldr	r3, .L87
 1658 0070 DB68     		ldr	r3, [r3, #12]
 951:Generated_Source\PSoC4/RTC_1.c **** }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 69


 1659              		.loc 2 951 0
 1660 0072 1800     		movs	r0, r3
 1661 0074 BD46     		mov	sp, r7
 1662 0076 06B0     		add	sp, sp, #24
 1663              		@ sp needed
 1664 0078 80BD     		pop	{r7, pc}
 1665              	.L88:
 1666 007a C046     		.align	2
 1667              	.L87:
 1668 007c 00000000 		.word	RTC_1_currentTimeDate
 1669              		.cfi_endproc
 1670              	.LFE42:
 1671              		.size	RTC_1_ReadStatus, .-RTC_1_ReadStatus
 1672              		.section	.text.RTC_1_ConvertBCDToDec,"ax",%progbits
 1673              		.align	2
 1674              		.global	RTC_1_ConvertBCDToDec
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	RTC_1_ConvertBCDToDec, %function
 1678              	RTC_1_ConvertBCDToDec:
 1679              	.LFB43:
 952:Generated_Source\PSoC4/RTC_1.c **** 
 953:Generated_Source\PSoC4/RTC_1.c **** 
 954:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_DST_STATUS)
 955:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetDSTStartTime
 957:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/RTC_1.c ****     *
 959:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 960:Generated_Source\PSoC4/RTC_1.c ****     *  Stores the DST Start time.
 961:Generated_Source\PSoC4/RTC_1.c ****     *
 962:Generated_Source\PSoC4/RTC_1.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
 963:Generated_Source\PSoC4/RTC_1.c ****     *  For a relative date, the user needs to provide a valid day of a week, a 
 964:Generated_Source\PSoC4/RTC_1.c ****     *  week of a month and a month in the dstStartTime structure.
 965:Generated_Source\PSoC4/RTC_1.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in
 966:Generated_Source\PSoC4/RTC_1.c ****     *  the dstStartTime structure. The hour value is optional and if invalid
 967:Generated_Source\PSoC4/RTC_1.c ****     *  taken as 00 hrs. Invalid entries are not stored and the DST start date
 968:Generated_Source\PSoC4/RTC_1.c ****     *  retains a previous value or no value at all.
 969:Generated_Source\PSoC4/RTC_1.c ****     *
 970:Generated_Source\PSoC4/RTC_1.c ****     * \param
 971:Generated_Source\PSoC4/RTC_1.c ****     *  dstStartTime The DST Start time register value.
 972:Generated_Source\PSoC4/RTC_1.c ****     *
 973:Generated_Source\PSoC4/RTC_1.c ****     * \param
 974:Generated_Source\PSoC4/RTC_1.c ****     *  type Defines the DST operation mode <br>
 975:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
 976:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
 977:Generated_Source\PSoC4/RTC_1.c ****     *
 978:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 979:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetDSTStartTime(const RTC_1_DST_TIME* dstStartTime,
 980:Generated_Source\PSoC4/RTC_1.c ****                                                 RTC_1_DST_DATETYPE_ENUM type)
 981:Generated_Source\PSoC4/RTC_1.c ****     {
 982:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.timeFormat    = (uint8)type;
 983:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.hour          = dstStartTime->hour;
 984:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.dayOfWeek     = dstStartTime->dayOfWeek;
 985:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.weekOfMonth   = dstStartTime->weekOfMonth;
 986:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.dayOfMonth    = dstStartTime->dayOfMonth;
 987:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.month         = dstStartTime->month;
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 70


 988:Generated_Source\PSoC4/RTC_1.c **** 
 989:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 990:Generated_Source\PSoC4/RTC_1.c **** 
 991:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 992:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 993:Generated_Source\PSoC4/RTC_1.c ****         {
 994:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 995:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 996:Generated_Source\PSoC4/RTC_1.c ****         }
 997:Generated_Source\PSoC4/RTC_1.c ****         else
 998:Generated_Source\PSoC4/RTC_1.c ****         {
 999:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
1000:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
1001:Generated_Source\PSoC4/RTC_1.c ****         }
1002:Generated_Source\PSoC4/RTC_1.c ****     }
1003:Generated_Source\PSoC4/RTC_1.c **** 
1004:Generated_Source\PSoC4/RTC_1.c **** 
1005:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
1006:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetDSTStopTime
1007:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
1008:Generated_Source\PSoC4/RTC_1.c ****     *
1009:Generated_Source\PSoC4/RTC_1.c ****     * \brief
1010:Generated_Source\PSoC4/RTC_1.c ****     *  Stores the DST Stop time.
1011:Generated_Source\PSoC4/RTC_1.c ****     * 
1012:Generated_Source\PSoC4/RTC_1.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
1013:Generated_Source\PSoC4/RTC_1.c ****     *  For a relative date, the user needs to provide a valid day of a week, a week 
1014:Generated_Source\PSoC4/RTC_1.c ****     *  of a month and a month in the dstStopTime structure.
1015:Generated_Source\PSoC4/RTC_1.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in the
1016:Generated_Source\PSoC4/RTC_1.c ****     *  dstSoptTime structure. The hour value is optional and if invalid taken
1017:Generated_Source\PSoC4/RTC_1.c ****     *  as 00 hrs. Invalid entries are not stored and the DST start date retains
1018:Generated_Source\PSoC4/RTC_1.c ****     *  a previous value or no value at all.
1019:Generated_Source\PSoC4/RTC_1.c ****     *
1020:Generated_Source\PSoC4/RTC_1.c ****     * \param
1021:Generated_Source\PSoC4/RTC_1.c ****     *  dstStopTime DST Stop time register values.
1022:Generated_Source\PSoC4/RTC_1.c ****     *
1023:Generated_Source\PSoC4/RTC_1.c ****     * \param
1024:Generated_Source\PSoC4/RTC_1.c ****     *  type Defines the DST operation mode <br>
1025:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
1026:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
1027:Generated_Source\PSoC4/RTC_1.c ****     *
1028:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetDSTStopTime(const RTC_1_DST_TIME* dstStopTime,
1030:Generated_Source\PSoC4/RTC_1.c ****                                                RTC_1_DST_DATETYPE_ENUM type)
1031:Generated_Source\PSoC4/RTC_1.c ****     {
1032:Generated_Source\PSoC4/RTC_1.c **** 
1033:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.timeFormat  = (uint8)type;
1034:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.hour           = dstStopTime->hour;
1035:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.dayOfWeek      = dstStopTime->dayOfWeek;
1036:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.weekOfMonth = dstStopTime->weekOfMonth;
1037:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.dayOfMonth     = dstStopTime->dayOfMonth;
1038:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.month         = dstStopTime->month;
1039:Generated_Source\PSoC4/RTC_1.c **** 
1040:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
1041:Generated_Source\PSoC4/RTC_1.c **** 
1042:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
1043:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
1044:Generated_Source\PSoC4/RTC_1.c ****         {
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 71


1045:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
1046:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
1047:Generated_Source\PSoC4/RTC_1.c ****         }
1048:Generated_Source\PSoC4/RTC_1.c ****         else
1049:Generated_Source\PSoC4/RTC_1.c ****         {
1050:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
1051:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
1052:Generated_Source\PSoC4/RTC_1.c ****         }
1053:Generated_Source\PSoC4/RTC_1.c ****     }
1054:Generated_Source\PSoC4/RTC_1.c **** 
1055:Generated_Source\PSoC4/RTC_1.c **** 
1056:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
1057:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetDstUnixTime
1058:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
1059:Generated_Source\PSoC4/RTC_1.c ****     *
1060:Generated_Source\PSoC4/RTC_1.c ****     * \brief
1061:Generated_Source\PSoC4/RTC_1.c ****     *  Calculates the DST Start/Stop time in the UNIX format.
1062:Generated_Source\PSoC4/RTC_1.c ****     *
1063:Generated_Source\PSoC4/RTC_1.c ****     * \param
1064:Generated_Source\PSoC4/RTC_1.c ****     *  dstTime The DST Start/Stop time in the regular time format.
1065:Generated_Source\PSoC4/RTC_1.c ****     *
1066:Generated_Source\PSoC4/RTC_1.c ****     * \return
1067:Generated_Source\PSoC4/RTC_1.c ****     *  The DST Start/Stop time in the UNIX format.
1068:Generated_Source\PSoC4/RTC_1.c ****     *
1069:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
1070:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_GetDstUnixTime(const RTC_1_DST_TIME* dstTime)
1071:Generated_Source\PSoC4/RTC_1.c ****     {
1072:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpYear;
1073:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpDate;
1074:Generated_Source\PSoC4/RTC_1.c ****         uint64 dstUnixTime;
1075:Generated_Source\PSoC4/RTC_1.c **** 
1076:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME tmpTimeDate;
1077:Generated_Source\PSoC4/RTC_1.c **** 
1078:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&tmpTimeDate, RTC_1_unixTime, RTC_1_INITIAL_TIME_FORMAT);
1079:Generated_Source\PSoC4/RTC_1.c ****         tmpYear = RTC_1_GetYear(tmpTimeDate.date);
1080:Generated_Source\PSoC4/RTC_1.c **** 
1081:Generated_Source\PSoC4/RTC_1.c ****         if(dstTime->timeFormat == (uint8)RTC_1_DST_DATE_FIXED)
1082:Generated_Source\PSoC4/RTC_1.c ****         {
1083:Generated_Source\PSoC4/RTC_1.c ****             tmpDate =     RTC_1_ConstructDate(dstTime->month, dstTime->dayOfMonth, tmpYear);
1084:Generated_Source\PSoC4/RTC_1.c ****         }
1085:Generated_Source\PSoC4/RTC_1.c ****         else
1086:Generated_Source\PSoC4/RTC_1.c ****         {
1087:Generated_Source\PSoC4/RTC_1.c ****             tmpDate = RTC_1_RelativeToFixed(dstTime->dayOfWeek, dstTime->weekOfMonth, dstTime->mont
1088:Generated_Source\PSoC4/RTC_1.c ****         }
1089:Generated_Source\PSoC4/RTC_1.c **** 
1090:Generated_Source\PSoC4/RTC_1.c ****         tmpTimeDate.time = RTC_1_ConstructTime((uint32)RTC_1_24_HOURS_FORMAT, 0u, dstTime->hour, 0u
1091:Generated_Source\PSoC4/RTC_1.c ****         dstUnixTime = RTC_1_DateTimeToUnix(tmpDate, tmpTimeDate.time);
1092:Generated_Source\PSoC4/RTC_1.c **** 
1093:Generated_Source\PSoC4/RTC_1.c ****         return(dstUnixTime);
1094:Generated_Source\PSoC4/RTC_1.c ****     }
1095:Generated_Source\PSoC4/RTC_1.c **** 
1096:Generated_Source\PSoC4/RTC_1.c **** 
1097:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
1098:Generated_Source\PSoC4/RTC_1.c **** 
1099:Generated_Source\PSoC4/RTC_1.c **** 
1100:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1101:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ConvertBCDToDec
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 72


1102:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1103:Generated_Source\PSoC4/RTC_1.c **** *
1104:Generated_Source\PSoC4/RTC_1.c **** * \brief
1105:Generated_Source\PSoC4/RTC_1.c **** *  Converts a 4-byte BCD number into a 4-byte hexadecimal number. Each byte is
1106:Generated_Source\PSoC4/RTC_1.c **** *  converted individually and returned as an individual byte in the 32-bit
1107:Generated_Source\PSoC4/RTC_1.c **** *  variable.
1108:Generated_Source\PSoC4/RTC_1.c **** *
1109:Generated_Source\PSoC4/RTC_1.c **** * \param
1110:Generated_Source\PSoC4/RTC_1.c **** *  bcdNum A 4-byte BCD number. Each byte represents BCD.
1111:Generated_Source\PSoC4/RTC_1.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 the in BCD format.
1112:Generated_Source\PSoC4/RTC_1.c **** *
1113:Generated_Source\PSoC4/RTC_1.c **** * \return
1114:Generated_Source\PSoC4/RTC_1.c **** *  decNum A 4-byte hexadecimal equivalent number of the BCD number.
1115:Generated_Source\PSoC4/RTC_1.c **** *  BCD number 0x11223344 -> returned hexadecimal number 0x0B16212C.
1116:Generated_Source\PSoC4/RTC_1.c **** *
1117:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1118:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ConvertBCDToDec(uint32 bcdNum)
1119:Generated_Source\PSoC4/RTC_1.c **** {
 1680              		.loc 2 1119 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 24
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684 0000 80B5     		push	{r7, lr}
 1685              		.cfi_def_cfa_offset 8
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 86B0     		sub	sp, sp, #24
 1689              		.cfi_def_cfa_offset 32
 1690 0004 00AF     		add	r7, sp, #0
 1691              		.cfi_def_cfa_register 7
 1692 0006 7860     		str	r0, [r7, #4]
1120:Generated_Source\PSoC4/RTC_1.c ****     uint32 i;
1121:Generated_Source\PSoC4/RTC_1.c ****     uint32 mult;
1122:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1123:Generated_Source\PSoC4/RTC_1.c **** 
1124:Generated_Source\PSoC4/RTC_1.c ****     mult   = 1u;
 1693              		.loc 2 1124 0
 1694 0008 0123     		movs	r3, #1
 1695 000a 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC_1.c ****     retVal = 0u;
 1696              		.loc 2 1125 0
 1697 000c 0023     		movs	r3, #0
 1698 000e FB60     		str	r3, [r7, #12]
1126:Generated_Source\PSoC4/RTC_1.c **** 
1127:Generated_Source\PSoC4/RTC_1.c ****     for(i = 0u; i < 16u; i++)
 1699              		.loc 2 1127 0
 1700 0010 0023     		movs	r3, #0
 1701 0012 7B61     		str	r3, [r7, #20]
 1702 0014 13E0     		b	.L90
 1703              	.L91:
1128:Generated_Source\PSoC4/RTC_1.c ****     {
1129:Generated_Source\PSoC4/RTC_1.c ****         retVal += (bcdNum & RTC_1_BCD_ONE_DIGIT_MASK) * mult;
 1704              		.loc 2 1129 0 discriminator 3
 1705 0016 7B68     		ldr	r3, [r7, #4]
 1706 0018 0F22     		movs	r2, #15
 1707 001a 1340     		ands	r3, r2
 1708 001c 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 73


 1709 001e 5343     		muls	r3, r2
 1710 0020 FA68     		ldr	r2, [r7, #12]
 1711 0022 D318     		adds	r3, r2, r3
 1712 0024 FB60     		str	r3, [r7, #12]
1130:Generated_Source\PSoC4/RTC_1.c ****         bcdNum >>= RTC_1_BCD_NUMBER_SIZE;
 1713              		.loc 2 1130 0 discriminator 3
 1714 0026 7B68     		ldr	r3, [r7, #4]
 1715 0028 1B09     		lsrs	r3, r3, #4
 1716 002a 7B60     		str	r3, [r7, #4]
1131:Generated_Source\PSoC4/RTC_1.c ****         mult *= 10u;
 1717              		.loc 2 1131 0 discriminator 3
 1718 002c 3A69     		ldr	r2, [r7, #16]
 1719 002e 1300     		movs	r3, r2
 1720 0030 9B00     		lsls	r3, r3, #2
 1721 0032 9B18     		adds	r3, r3, r2
 1722 0034 5B00     		lsls	r3, r3, #1
 1723 0036 3B61     		str	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC_1.c ****     {
 1724              		.loc 2 1127 0 discriminator 3
 1725 0038 7B69     		ldr	r3, [r7, #20]
 1726 003a 0133     		adds	r3, r3, #1
 1727 003c 7B61     		str	r3, [r7, #20]
 1728              	.L90:
1127:Generated_Source\PSoC4/RTC_1.c ****     {
 1729              		.loc 2 1127 0 is_stmt 0 discriminator 1
 1730 003e 7B69     		ldr	r3, [r7, #20]
 1731 0040 0F2B     		cmp	r3, #15
 1732 0042 E8D9     		bls	.L91
1132:Generated_Source\PSoC4/RTC_1.c ****     }
1133:Generated_Source\PSoC4/RTC_1.c **** 
1134:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 1733              		.loc 2 1134 0 is_stmt 1
 1734 0044 FB68     		ldr	r3, [r7, #12]
1135:Generated_Source\PSoC4/RTC_1.c **** }
 1735              		.loc 2 1135 0
 1736 0046 1800     		movs	r0, r3
 1737 0048 BD46     		mov	sp, r7
 1738 004a 06B0     		add	sp, sp, #24
 1739              		@ sp needed
 1740 004c 80BD     		pop	{r7, pc}
 1741              		.cfi_endproc
 1742              	.LFE43:
 1743              		.size	RTC_1_ConvertBCDToDec, .-RTC_1_ConvertBCDToDec
 1744 004e C046     		.section	.text.RTC_1_ConvertDecToBCD,"ax",%progbits
 1745              		.align	2
 1746              		.global	RTC_1_ConvertDecToBCD
 1747              		.code	16
 1748              		.thumb_func
 1749              		.type	RTC_1_ConvertDecToBCD, %function
 1750              	RTC_1_ConvertDecToBCD:
 1751              	.LFB44:
1136:Generated_Source\PSoC4/RTC_1.c **** 
1137:Generated_Source\PSoC4/RTC_1.c **** 
1138:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1139:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ConvertDecToBCD
1140:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1141:Generated_Source\PSoC4/RTC_1.c **** *
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 74


1142:Generated_Source\PSoC4/RTC_1.c **** * \brief
1143:Generated_Source\PSoC4/RTC_1.c **** *  Converts a 4-byte hexadecimal number into a 4-byte BCD number. Each byte
1144:Generated_Source\PSoC4/RTC_1.c **** *  is converted individually and returned as an individual byte in the 32-bit
1145:Generated_Source\PSoC4/RTC_1.c **** *  variable.
1146:Generated_Source\PSoC4/RTC_1.c **** *
1147:Generated_Source\PSoC4/RTC_1.c **** * \param 
1148:Generated_Source\PSoC4/RTC_1.c **** *  decNum A 4-byte hexadecimal number. Each byte is represented in hex.
1149:Generated_Source\PSoC4/RTC_1.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 in the hex format.
1150:Generated_Source\PSoC4/RTC_1.c **** *
1151:Generated_Source\PSoC4/RTC_1.c **** * \return
1152:Generated_Source\PSoC4/RTC_1.c **** *  bcdNum - A 4-byte BCD equivalent of the passed hexadecimal number. Hexadecimal
1153:Generated_Source\PSoC4/RTC_1.c **** *  number 0x11223344 -> returned BCD number 0x17345168.
1154:Generated_Source\PSoC4/RTC_1.c **** *
1155:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1156:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ConvertDecToBCD(uint32 decNum)
1157:Generated_Source\PSoC4/RTC_1.c **** {
 1752              		.loc 2 1157 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 24
 1755              		@ frame_needed = 1, uses_anonymous_args = 0
 1756 0000 80B5     		push	{r7, lr}
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 86B0     		sub	sp, sp, #24
 1761              		.cfi_def_cfa_offset 32
 1762 0004 00AF     		add	r7, sp, #0
 1763              		.cfi_def_cfa_register 7
 1764 0006 7860     		str	r0, [r7, #4]
1158:Generated_Source\PSoC4/RTC_1.c ****     uint32 shift;
1159:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVal;
1160:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1161:Generated_Source\PSoC4/RTC_1.c **** 
1162:Generated_Source\PSoC4/RTC_1.c ****     shift  = 0u;
 1765              		.loc 2 1162 0
 1766 0008 0023     		movs	r3, #0
 1767 000a 7B61     		str	r3, [r7, #20]
1163:Generated_Source\PSoC4/RTC_1.c ****     retVal = 0u;
 1768              		.loc 2 1163 0
 1769 000c 0023     		movs	r3, #0
 1770 000e FB60     		str	r3, [r7, #12]
1164:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = decNum;
 1771              		.loc 2 1164 0
 1772 0010 7B68     		ldr	r3, [r7, #4]
 1773 0012 3B61     		str	r3, [r7, #16]
 1774              	.L94:
1165:Generated_Source\PSoC4/RTC_1.c **** 
1166:Generated_Source\PSoC4/RTC_1.c ****     do
1167:Generated_Source\PSoC4/RTC_1.c ****     {
1168:Generated_Source\PSoC4/RTC_1.c ****         retVal |= ((tmpVal % 10u) << shift);
 1775              		.loc 2 1168 0 discriminator 1
 1776 0014 3B69     		ldr	r3, [r7, #16]
 1777 0016 0A21     		movs	r1, #10
 1778 0018 1800     		movs	r0, r3
 1779 001a FFF7FEFF 		bl	__aeabi_uidivmod
 1780 001e 0B00     		movs	r3, r1
 1781 0020 1A00     		movs	r2, r3
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 75


 1782 0022 7B69     		ldr	r3, [r7, #20]
 1783 0024 9A40     		lsls	r2, r2, r3
 1784 0026 1300     		movs	r3, r2
 1785 0028 FA68     		ldr	r2, [r7, #12]
 1786 002a 1343     		orrs	r3, r2
 1787 002c FB60     		str	r3, [r7, #12]
1169:Generated_Source\PSoC4/RTC_1.c ****         tmpVal /= 10u;
 1788              		.loc 2 1169 0 discriminator 1
 1789 002e 3B69     		ldr	r3, [r7, #16]
 1790 0030 0A21     		movs	r1, #10
 1791 0032 1800     		movs	r0, r3
 1792 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1793 0038 0300     		movs	r3, r0
 1794 003a 3B61     		str	r3, [r7, #16]
1170:Generated_Source\PSoC4/RTC_1.c ****         shift  += RTC_1_BCD_NUMBER_SIZE;
 1795              		.loc 2 1170 0 discriminator 1
 1796 003c 7B69     		ldr	r3, [r7, #20]
 1797 003e 0433     		adds	r3, r3, #4
 1798 0040 7B61     		str	r3, [r7, #20]
1171:Generated_Source\PSoC4/RTC_1.c ****     }
1172:Generated_Source\PSoC4/RTC_1.c ****     while(tmpVal >= 10u);
 1799              		.loc 2 1172 0 discriminator 1
 1800 0042 3B69     		ldr	r3, [r7, #16]
 1801 0044 092B     		cmp	r3, #9
 1802 0046 E5D8     		bhi	.L94
1173:Generated_Source\PSoC4/RTC_1.c **** 
1174:Generated_Source\PSoC4/RTC_1.c ****     retVal |= (tmpVal << shift);
 1803              		.loc 2 1174 0
 1804 0048 3A69     		ldr	r2, [r7, #16]
 1805 004a 7B69     		ldr	r3, [r7, #20]
 1806 004c 9A40     		lsls	r2, r2, r3
 1807 004e 1300     		movs	r3, r2
 1808 0050 FA68     		ldr	r2, [r7, #12]
 1809 0052 1343     		orrs	r3, r2
 1810 0054 FB60     		str	r3, [r7, #12]
1175:Generated_Source\PSoC4/RTC_1.c **** 
1176:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 1811              		.loc 2 1176 0
 1812 0056 FB68     		ldr	r3, [r7, #12]
1177:Generated_Source\PSoC4/RTC_1.c **** }
 1813              		.loc 2 1177 0
 1814 0058 1800     		movs	r0, r3
 1815 005a BD46     		mov	sp, r7
 1816 005c 06B0     		add	sp, sp, #24
 1817              		@ sp needed
 1818 005e 80BD     		pop	{r7, pc}
 1819              		.cfi_endproc
 1820              	.LFE44:
 1821              		.size	RTC_1_ConvertDecToBCD, .-RTC_1_ConvertDecToBCD
 1822              		.section	.text.RTC_1_Update,"ax",%progbits
 1823              		.align	2
 1824              		.global	RTC_1_Update
 1825              		.code	16
 1826              		.thumb_func
 1827              		.type	RTC_1_Update, %function
 1828              	RTC_1_Update:
 1829              	.LFB45:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 76


1178:Generated_Source\PSoC4/RTC_1.c **** 
1179:Generated_Source\PSoC4/RTC_1.c **** 
1180:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1181:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Update
1182:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1183:Generated_Source\PSoC4/RTC_1.c **** *
1184:Generated_Source\PSoC4/RTC_1.c **** * \brief
1185:Generated_Source\PSoC4/RTC_1.c **** *  This API updates the time registers and performs alarm/DST check.
1186:Generated_Source\PSoC4/RTC_1.c **** *
1187:Generated_Source\PSoC4/RTC_1.c **** *  This function increments the time/date registers by an input clock period.
1188:Generated_Source\PSoC4/RTC_1.c **** *  The period is set by RTC_SetPeriod() API or WDT period selected for RTC
1189:Generated_Source\PSoC4/RTC_1.c **** *  in the clocks configuration window (low frequency clocks tab) interface
1190:Generated_Source\PSoC4/RTC_1.c **** *  every time it is called.
1191:Generated_Source\PSoC4/RTC_1.c **** *
1192:Generated_Source\PSoC4/RTC_1.c **** *  API is automatically mapped to the WDT's callback slot and period if the
1193:Generated_Source\PSoC4/RTC_1.c **** *  configuration is as follows: 1) Option "Implement RTC update manually" in
1194:Generated_Source\PSoC4/RTC_1.c **** *  the customizer is unchecked 2) One of WDTs is selected in the "Use for RTC"
1195:Generated_Source\PSoC4/RTC_1.c **** *  panel of the low frequency clocks tab 3) Option "Implementation by IDE" is
1196:Generated_Source\PSoC4/RTC_1.c **** *  selected in the "Timer (WDT) ISR" panel.
1197:Generated_Source\PSoC4/RTC_1.c **** *
1198:Generated_Source\PSoC4/RTC_1.c **** *  If option "Implement RTC update manually" is checked in the customizer or
1199:Generated_Source\PSoC4/RTC_1.c **** *  option "None" is selected in the "Use for RTC" panel,it is the user's
1200:Generated_Source\PSoC4/RTC_1.c **** *  responsibility: 1) to call this API from the clock ISR to be
1201:Generated_Source\PSoC4/RTC_1.c **** *  used as the RTC's input 2) set the period of the RTC through
1202:Generated_Source\PSoC4/RTC_1.c **** *  RTC_SetPeriod() API.
1203:Generated_Source\PSoC4/RTC_1.c **** *
1204:Generated_Source\PSoC4/RTC_1.c **** * \note Updates the Unix time register, updates the alarm and DST status.
1205:Generated_Source\PSoC4/RTC_1.c **** *
1206:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1207:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Update(void)
1208:Generated_Source\PSoC4/RTC_1.c **** {
 1830              		.loc 2 1208 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 1, uses_anonymous_args = 0
 1834 0000 90B5     		push	{r4, r7, lr}
 1835              		.cfi_def_cfa_offset 12
 1836              		.cfi_offset 4, -12
 1837              		.cfi_offset 7, -8
 1838              		.cfi_offset 14, -4
 1839 0002 00AF     		add	r7, sp, #0
 1840              		.cfi_def_cfa_register 7
1209:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint32 RTC_1_currentTickNumber;
1210:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTickNumber += RTC_1_updateTimePeriod;
 1841              		.loc 2 1210 0
 1842 0004 0E4B     		ldr	r3, .L99
 1843 0006 1A68     		ldr	r2, [r3]
 1844 0008 0E4B     		ldr	r3, .L99+4
 1845 000a 1B68     		ldr	r3, [r3]
 1846 000c D218     		adds	r2, r2, r3
 1847 000e 0C4B     		ldr	r3, .L99
 1848 0010 1A60     		str	r2, [r3]
1211:Generated_Source\PSoC4/RTC_1.c **** 
1212:Generated_Source\PSoC4/RTC_1.c ****     if(RTC_1_currentTickNumber >= RTC_1_tickRefOneSec)
 1849              		.loc 2 1212 0
 1850 0012 0B4B     		ldr	r3, .L99
 1851 0014 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 77


 1852 0016 0C4B     		ldr	r3, .L99+8
 1853 0018 1B68     		ldr	r3, [r3]
 1854 001a 9A42     		cmp	r2, r3
 1855 001c 0CD3     		bcc	.L98
1213:Generated_Source\PSoC4/RTC_1.c ****     {
1214:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTime++;
 1856              		.loc 2 1214 0
 1857 001e 0B4B     		ldr	r3, .L99+12
 1858 0020 5C68     		ldr	r4, [r3, #4]
 1859 0022 1B68     		ldr	r3, [r3]
 1860 0024 0121     		movs	r1, #1
 1861 0026 0022     		movs	r2, #0
 1862 0028 5B18     		adds	r3, r3, r1
 1863 002a 5441     		adcs	r4, r4, r2
 1864 002c 074A     		ldr	r2, .L99+12
 1865 002e 1360     		str	r3, [r2]
 1866 0030 5460     		str	r4, [r2, #4]
1215:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTickNumber = 0u;
 1867              		.loc 2 1215 0
 1868 0032 034B     		ldr	r3, .L99
 1869 0034 0022     		movs	r2, #0
 1870 0036 1A60     		str	r2, [r3]
 1871              	.L98:
1216:Generated_Source\PSoC4/RTC_1.c **** 
1217:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
1218:Generated_Source\PSoC4/RTC_1.c ****         if(RTC_1_unixTime == RTC_1_unixTimeDstStart)
1219:Generated_Source\PSoC4/RTC_1.c ****         {
1220:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
1221:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
1222:Generated_Source\PSoC4/RTC_1.c ****         }
1223:Generated_Source\PSoC4/RTC_1.c **** 
1224:Generated_Source\PSoC4/RTC_1.c ****         if(RTC_1_unixTime == (RTC_1_unixTimeDstStop  - RTC_1_dstTimeOffset))
1225:Generated_Source\PSoC4/RTC_1.c ****         {
1226:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
1227:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0u;
1228:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
1229:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
1230:Generated_Source\PSoC4/RTC_1.c ****         }
1231:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
1232:Generated_Source\PSoC4/RTC_1.c **** 
1233:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_ALARM_STATUS)
1234:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime + RTC_1_dstTimeOffset) == RTC_1_unixTimeAlarm)
1235:Generated_Source\PSoC4/RTC_1.c ****         {
1236:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_ALARM_OFFSET);
1237:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_alarmCurStatus = RTC_1_alarmCfgMask;
1238:Generated_Source\PSoC4/RTC_1.c ****             if (RTC_1_alarmCallbackPtr != (void *) 0)
1239:Generated_Source\PSoC4/RTC_1.c ****             {
1240:Generated_Source\PSoC4/RTC_1.c ****                 RTC_1_alarmCallbackPtr();
1241:Generated_Source\PSoC4/RTC_1.c ****             }
1242:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeAlarm = RTC_1_GetNexAlarmTime(RTC_1_unixTime + RTC_1_dstTimeOffset,
1243:Generated_Source\PSoC4/RTC_1.c ****                                                                                                   (
1244:Generated_Source\PSoC4/RTC_1.c ****         }
1245:Generated_Source\PSoC4/RTC_1.c ****     #endif/* (0u != RTC_1_INITIAL_ALARM_STATUS) */
1246:Generated_Source\PSoC4/RTC_1.c ****     }
1247:Generated_Source\PSoC4/RTC_1.c **** }
 1872              		.loc 2 1247 0
 1873 0038 C046     		nop
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 78


 1874 003a BD46     		mov	sp, r7
 1875              		@ sp needed
 1876 003c 90BD     		pop	{r4, r7, pc}
 1877              	.L100:
 1878 003e C046     		.align	2
 1879              	.L99:
 1880 0040 0C000000 		.word	RTC_1_currentTickNumber.5224
 1881 0044 00000000 		.word	RTC_1_updateTimePeriod
 1882 0048 04000000 		.word	RTC_1_tickRefOneSec
 1883 004c 00000000 		.word	RTC_1_unixTime
 1884              		.cfi_endproc
 1885              	.LFE45:
 1886              		.size	RTC_1_Update, .-RTC_1_Update
 1887              		.section	.text.RTC_1_DateTimeToUnix,"ax",%progbits
 1888              		.align	2
 1889              		.global	RTC_1_DateTimeToUnix
 1890              		.code	16
 1891              		.thumb_func
 1892              		.type	RTC_1_DateTimeToUnix, %function
 1893              	RTC_1_DateTimeToUnix:
 1894              	.LFB46:
1248:Generated_Source\PSoC4/RTC_1.c **** 
1249:Generated_Source\PSoC4/RTC_1.c **** 
1250:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1251:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DateTimeToUnix
1252:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1253:Generated_Source\PSoC4/RTC_1.c **** *
1254:Generated_Source\PSoC4/RTC_1.c **** * \brief
1255:Generated_Source\PSoC4/RTC_1.c **** *  This is an internal function to convert the date and time from
1256:Generated_Source\PSoC4/RTC_1.c **** *  the regular time format into the UNIX time format.
1257:Generated_Source\PSoC4/RTC_1.c **** *
1258:Generated_Source\PSoC4/RTC_1.c **** * \param
1259:Generated_Source\PSoC4/RTC_1.c **** *  inputDate The date in the selected in the customizer "date format".
1260:Generated_Source\PSoC4/RTC_1.c **** * \param
1261:Generated_Source\PSoC4/RTC_1.c **** *  inputTime The time in the defined "time format".
1262:Generated_Source\PSoC4/RTC_1.c **** *
1263:Generated_Source\PSoC4/RTC_1.c **** * \return Returns the date and time in the UNIX format.
1264:Generated_Source\PSoC4/RTC_1.c **** *
1265:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1266:Generated_Source\PSoC4/RTC_1.c **** uint64 RTC_1_DateTimeToUnix(uint32 inputDate, uint32 inputTime)
1267:Generated_Source\PSoC4/RTC_1.c **** {
 1895              		.loc 2 1267 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 64
 1898              		@ frame_needed = 1, uses_anonymous_args = 0
 1899 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1900              		.cfi_def_cfa_offset 20
 1901              		.cfi_offset 4, -20
 1902              		.cfi_offset 5, -16
 1903              		.cfi_offset 6, -12
 1904              		.cfi_offset 7, -8
 1905              		.cfi_offset 14, -4
 1906 0002 91B0     		sub	sp, sp, #68
 1907              		.cfi_def_cfa_offset 88
 1908 0004 00AF     		add	r7, sp, #0
 1909              		.cfi_def_cfa_register 7
 1910 0006 7862     		str	r0, [r7, #36]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 79


 1911 0008 3962     		str	r1, [r7, #32]
1268:Generated_Source\PSoC4/RTC_1.c ****     uint32 i;
1269:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
1270:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
1271:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVal;
1272:Generated_Source\PSoC4/RTC_1.c ****     uint64 unixTime;
1273:Generated_Source\PSoC4/RTC_1.c **** 
1274:Generated_Source\PSoC4/RTC_1.c ****     unixTime = 0u;
 1912              		.loc 2 1274 0
 1913 000a 0023     		movs	r3, #0
 1914 000c 0024     		movs	r4, #0
 1915 000e 3B63     		str	r3, [r7, #48]
 1916 0010 7C63     		str	r4, [r7, #52]
1275:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_GetYear(inputDate);
 1917              		.loc 2 1275 0
 1918 0012 7B6A     		ldr	r3, [r7, #36]
 1919 0014 1800     		movs	r0, r3
 1920 0016 FFF7FEFF 		bl	RTC_1_GetYear
 1921 001a 0300     		movs	r3, r0
 1922 001c FB62     		str	r3, [r7, #44]
1276:Generated_Source\PSoC4/RTC_1.c **** 
1277:Generated_Source\PSoC4/RTC_1.c ****     /* Calculate seconds from epoch start up to (but not including) current year. */
1278:Generated_Source\PSoC4/RTC_1.c ****     for(i = RTC_1_YEAR_0; i < tmpYear; i++)
 1923              		.loc 2 1278 0
 1924 001e 564B     		ldr	r3, .L109
 1925 0020 FB63     		str	r3, [r7, #60]
 1926 0022 19E0     		b	.L102
 1927              	.L105:
1279:Generated_Source\PSoC4/RTC_1.c ****     {
1280:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(i))
 1928              		.loc 2 1280 0
 1929 0024 FB6B     		ldr	r3, [r7, #60]
 1930 0026 1800     		movs	r0, r3
 1931 0028 FFF7FEFF 		bl	RTC_1_LeapYear
 1932 002c 031E     		subs	r3, r0, #0
 1933 002e 08D0     		beq	.L103
1281:Generated_Source\PSoC4/RTC_1.c ****         {
1282:Generated_Source\PSoC4/RTC_1.c ****             unixTime += RTC_1_SECONDS_PER_LEAP_YEAR;
 1934              		.loc 2 1282 0
 1935 0030 3B6B     		ldr	r3, [r7, #48]
 1936 0032 7C6B     		ldr	r4, [r7, #52]
 1937 0034 5149     		ldr	r1, .L109+4
 1938 0036 0022     		movs	r2, #0
 1939 0038 5B18     		adds	r3, r3, r1
 1940 003a 5441     		adcs	r4, r4, r2
 1941 003c 3B63     		str	r3, [r7, #48]
 1942 003e 7C63     		str	r4, [r7, #52]
 1943 0040 07E0     		b	.L104
 1944              	.L103:
1283:Generated_Source\PSoC4/RTC_1.c ****         }
1284:Generated_Source\PSoC4/RTC_1.c ****         else
1285:Generated_Source\PSoC4/RTC_1.c ****         {
1286:Generated_Source\PSoC4/RTC_1.c ****             unixTime += RTC_1_SECONDS_PER_NONLEAP_YEAR;
 1945              		.loc 2 1286 0
 1946 0042 3B6B     		ldr	r3, [r7, #48]
 1947 0044 7C6B     		ldr	r4, [r7, #52]
 1948 0046 4E49     		ldr	r1, .L109+8
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 80


 1949 0048 0022     		movs	r2, #0
 1950 004a 5B18     		adds	r3, r3, r1
 1951 004c 5441     		adcs	r4, r4, r2
 1952 004e 3B63     		str	r3, [r7, #48]
 1953 0050 7C63     		str	r4, [r7, #52]
 1954              	.L104:
1278:Generated_Source\PSoC4/RTC_1.c ****     {
 1955              		.loc 2 1278 0 discriminator 2
 1956 0052 FB6B     		ldr	r3, [r7, #60]
 1957 0054 0133     		adds	r3, r3, #1
 1958 0056 FB63     		str	r3, [r7, #60]
 1959              	.L102:
1278:Generated_Source\PSoC4/RTC_1.c ****     {
 1960              		.loc 2 1278 0 is_stmt 0 discriminator 1
 1961 0058 FA6B     		ldr	r2, [r7, #60]
 1962 005a FB6A     		ldr	r3, [r7, #44]
 1963 005c 9A42     		cmp	r2, r3
 1964 005e E1D3     		bcc	.L105
1287:Generated_Source\PSoC4/RTC_1.c ****         }
1288:Generated_Source\PSoC4/RTC_1.c ****     }
1289:Generated_Source\PSoC4/RTC_1.c **** 
1290:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds had elapsed in this year prior to the current month. */
1291:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = RTC_1_GetMonth(inputDate);
 1965              		.loc 2 1291 0 is_stmt 1
 1966 0060 7B6A     		ldr	r3, [r7, #36]
 1967 0062 1800     		movs	r0, r3
 1968 0064 FFF7FEFF 		bl	RTC_1_GetMonth
 1969 0068 0300     		movs	r3, r0
 1970 006a BB62     		str	r3, [r7, #40]
1292:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = RTC_1_daysBeforeMonthTbl[tmpMonth - 1u];
 1971              		.loc 2 1292 0
 1972 006c BB6A     		ldr	r3, [r7, #40]
 1973 006e 5A1E     		subs	r2, r3, #1
 1974 0070 444B     		ldr	r3, .L109+12
 1975 0072 5200     		lsls	r2, r2, #1
 1976 0074 D35A     		ldrh	r3, [r2, r3]
 1977 0076 BB63     		str	r3, [r7, #56]
1293:Generated_Source\PSoC4/RTC_1.c **** 
1294:Generated_Source\PSoC4/RTC_1.c ****     if((tmpMonth > 2u) && (0u != RTC_1_LeapYear(tmpYear)))
 1978              		.loc 2 1294 0
 1979 0078 BB6A     		ldr	r3, [r7, #40]
 1980 007a 022B     		cmp	r3, #2
 1981 007c 08D9     		bls	.L106
 1982              		.loc 2 1294 0 is_stmt 0 discriminator 1
 1983 007e FB6A     		ldr	r3, [r7, #44]
 1984 0080 1800     		movs	r0, r3
 1985 0082 FFF7FEFF 		bl	RTC_1_LeapYear
 1986 0086 031E     		subs	r3, r0, #0
 1987 0088 02D0     		beq	.L106
1295:Generated_Source\PSoC4/RTC_1.c ****     {
1296:Generated_Source\PSoC4/RTC_1.c ****         tmpVal++;
 1988              		.loc 2 1296 0 is_stmt 1
 1989 008a BB6B     		ldr	r3, [r7, #56]
 1990 008c 0133     		adds	r3, r3, #1
 1991 008e BB63     		str	r3, [r7, #56]
 1992              	.L106:
1297:Generated_Source\PSoC4/RTC_1.c ****     }
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 81


1298:Generated_Source\PSoC4/RTC_1.c **** 
1299:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds are in current month days prior to today. */
1300:Generated_Source\PSoC4/RTC_1.c ****     unixTime += tmpVal * RTC_1_SECONDS_PER_DAY;
 1993              		.loc 2 1300 0
 1994 0090 BB6B     		ldr	r3, [r7, #56]
 1995 0092 3D4A     		ldr	r2, .L109+16
 1996 0094 5343     		muls	r3, r2
 1997 0096 BB61     		str	r3, [r7, #24]
 1998 0098 0023     		movs	r3, #0
 1999 009a FB61     		str	r3, [r7, #28]
 2000 009c 3B6B     		ldr	r3, [r7, #48]
 2001 009e 7C6B     		ldr	r4, [r7, #52]
 2002 00a0 B969     		ldr	r1, [r7, #24]
 2003 00a2 FA69     		ldr	r2, [r7, #28]
 2004 00a4 5B18     		adds	r3, r3, r1
 2005 00a6 5441     		adcs	r4, r4, r2
 2006 00a8 3B63     		str	r3, [r7, #48]
 2007 00aa 7C63     		str	r4, [r7, #52]
1301:Generated_Source\PSoC4/RTC_1.c ****     unixTime += (RTC_1_GetDay(inputDate) - 1u) * RTC_1_SECONDS_PER_DAY;
 2008              		.loc 2 1301 0
 2009 00ac 7B6A     		ldr	r3, [r7, #36]
 2010 00ae 1800     		movs	r0, r3
 2011 00b0 FFF7FEFF 		bl	RTC_1_GetDay
 2012 00b4 0200     		movs	r2, r0
 2013 00b6 344B     		ldr	r3, .L109+16
 2014 00b8 5343     		muls	r3, r2
 2015 00ba 344A     		ldr	r2, .L109+20
 2016 00bc 9446     		mov	ip, r2
 2017 00be 6344     		add	r3, r3, ip
 2018 00c0 3B61     		str	r3, [r7, #16]
 2019 00c2 0023     		movs	r3, #0
 2020 00c4 7B61     		str	r3, [r7, #20]
 2021 00c6 3B6B     		ldr	r3, [r7, #48]
 2022 00c8 7C6B     		ldr	r4, [r7, #52]
 2023 00ca 3969     		ldr	r1, [r7, #16]
 2024 00cc 7A69     		ldr	r2, [r7, #20]
 2025 00ce 5B18     		adds	r3, r3, r1
 2026 00d0 5441     		adcs	r4, r4, r2
 2027 00d2 3B63     		str	r3, [r7, #48]
 2028 00d4 7C63     		str	r4, [r7, #52]
1302:Generated_Source\PSoC4/RTC_1.c **** 
1303:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds have elapsed today up to the current hour. */
1304:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = RTC_1_GetHours(inputTime);
 2029              		.loc 2 1304 0
 2030 00d6 3B6A     		ldr	r3, [r7, #32]
 2031 00d8 1800     		movs	r0, r3
 2032 00da FFF7FEFF 		bl	RTC_1_GetHours
 2033 00de 0300     		movs	r3, r0
 2034 00e0 BB63     		str	r3, [r7, #56]
1305:Generated_Source\PSoC4/RTC_1.c ****     if(((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(inputTime)) &&
 2035              		.loc 2 1305 0
 2036 00e2 3B6A     		ldr	r3, [r7, #32]
 2037 00e4 1800     		movs	r0, r3
 2038 00e6 FFF7FEFF 		bl	RTC_1_GetTimeFormat
 2039 00ea 031E     		subs	r3, r0, #0
 2040 00ec 0BD0     		beq	.L107
1306:Generated_Source\PSoC4/RTC_1.c ****        ((uint32)RTC_1_AM != RTC_1_GetAmPm(inputTime)) && (tmpVal < 12u))
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 82


 2041              		.loc 2 1306 0 discriminator 1
 2042 00ee 3B6A     		ldr	r3, [r7, #32]
 2043 00f0 1800     		movs	r0, r3
 2044 00f2 FFF7FEFF 		bl	RTC_1_GetAmPm
 2045 00f6 031E     		subs	r3, r0, #0
1305:Generated_Source\PSoC4/RTC_1.c ****     if(((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(inputTime)) &&
 2046              		.loc 2 1305 0 discriminator 1
 2047 00f8 05D0     		beq	.L107
 2048              		.loc 2 1306 0
 2049 00fa BB6B     		ldr	r3, [r7, #56]
 2050 00fc 0B2B     		cmp	r3, #11
 2051 00fe 02D8     		bhi	.L107
1307:Generated_Source\PSoC4/RTC_1.c ****     {
1308:Generated_Source\PSoC4/RTC_1.c ****         tmpVal += RTC_1_HOURS_PER_HALF_DAY;
 2052              		.loc 2 1308 0
 2053 0100 BB6B     		ldr	r3, [r7, #56]
 2054 0102 0C33     		adds	r3, r3, #12
 2055 0104 BB63     		str	r3, [r7, #56]
 2056              	.L107:
1309:Generated_Source\PSoC4/RTC_1.c ****     }
1310:Generated_Source\PSoC4/RTC_1.c ****     unixTime += tmpVal * RTC_1_SECONDS_PER_HOUR;
 2057              		.loc 2 1310 0
 2058 0106 BB6B     		ldr	r3, [r7, #56]
 2059 0108 E122     		movs	r2, #225
 2060 010a 1201     		lsls	r2, r2, #4
 2061 010c 5343     		muls	r3, r2
 2062 010e BB60     		str	r3, [r7, #8]
 2063 0110 0023     		movs	r3, #0
 2064 0112 FB60     		str	r3, [r7, #12]
 2065 0114 3B6B     		ldr	r3, [r7, #48]
 2066 0116 7C6B     		ldr	r4, [r7, #52]
 2067 0118 B968     		ldr	r1, [r7, #8]
 2068 011a FA68     		ldr	r2, [r7, #12]
 2069 011c 5B18     		adds	r3, r3, r1
 2070 011e 5441     		adcs	r4, r4, r2
 2071 0120 3B63     		str	r3, [r7, #48]
 2072 0122 7C63     		str	r4, [r7, #52]
1311:Generated_Source\PSoC4/RTC_1.c **** 
1312:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds have elapsed today up to the current minute. */
1313:Generated_Source\PSoC4/RTC_1.c ****     unixTime += RTC_1_GetMinutes(inputTime) * RTC_1_SECONDS_PER_MINUTE;
 2073              		.loc 2 1313 0
 2074 0124 3B6A     		ldr	r3, [r7, #32]
 2075 0126 1800     		movs	r0, r3
 2076 0128 FFF7FEFF 		bl	RTC_1_GetMinutes
 2077 012c 0200     		movs	r2, r0
 2078 012e 1300     		movs	r3, r2
 2079 0130 1B01     		lsls	r3, r3, #4
 2080 0132 9B1A     		subs	r3, r3, r2
 2081 0134 9B00     		lsls	r3, r3, #2
 2082 0136 3B60     		str	r3, [r7]
 2083 0138 0023     		movs	r3, #0
 2084 013a 7B60     		str	r3, [r7, #4]
 2085 013c 3B6B     		ldr	r3, [r7, #48]
 2086 013e 7C6B     		ldr	r4, [r7, #52]
 2087 0140 3968     		ldr	r1, [r7]
 2088 0142 7A68     		ldr	r2, [r7, #4]
 2089 0144 5B18     		adds	r3, r3, r1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 83


 2090 0146 5441     		adcs	r4, r4, r2
 2091 0148 3B63     		str	r3, [r7, #48]
 2092 014a 7C63     		str	r4, [r7, #52]
1314:Generated_Source\PSoC4/RTC_1.c **** 
1315:Generated_Source\PSoC4/RTC_1.c ****     /* Add remaining seconds of current minute. */
1316:Generated_Source\PSoC4/RTC_1.c ****     unixTime += RTC_1_GetSecond(inputTime);
 2093              		.loc 2 1316 0
 2094 014c 3B6A     		ldr	r3, [r7, #32]
 2095 014e 1800     		movs	r0, r3
 2096 0150 FFF7FEFF 		bl	RTC_1_GetSecond
 2097 0154 0300     		movs	r3, r0
 2098 0156 1D00     		movs	r5, r3
 2099 0158 0023     		movs	r3, #0
 2100 015a 1E00     		movs	r6, r3
 2101 015c 3B6B     		ldr	r3, [r7, #48]
 2102 015e 7C6B     		ldr	r4, [r7, #52]
 2103 0160 5B19     		adds	r3, r3, r5
 2104 0162 7441     		adcs	r4, r4, r6
 2105 0164 3B63     		str	r3, [r7, #48]
 2106 0166 7C63     		str	r4, [r7, #52]
1317:Generated_Source\PSoC4/RTC_1.c **** 
1318:Generated_Source\PSoC4/RTC_1.c ****     return(unixTime);
 2107              		.loc 2 1318 0
 2108 0168 3B6B     		ldr	r3, [r7, #48]
 2109 016a 7C6B     		ldr	r4, [r7, #52]
1319:Generated_Source\PSoC4/RTC_1.c **** }
 2110              		.loc 2 1319 0
 2111 016c 1800     		movs	r0, r3
 2112 016e 2100     		movs	r1, r4
 2113 0170 BD46     		mov	sp, r7
 2114 0172 11B0     		add	sp, sp, #68
 2115              		@ sp needed
 2116 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 2117              	.L110:
 2118 0176 C046     		.align	2
 2119              	.L109:
 2120 0178 B2070000 		.word	1970
 2121 017c 0085E201 		.word	31622400
 2122 0180 8033E101 		.word	31536000
 2123 0184 00000000 		.word	RTC_1_daysBeforeMonthTbl
 2124 0188 80510100 		.word	86400
 2125 018c 80AEFEFF 		.word	-86400
 2126              		.cfi_endproc
 2127              	.LFE46:
 2128              		.size	RTC_1_DateTimeToUnix, .-RTC_1_DateTimeToUnix
 2129              		.global	__aeabi_uldivmod
 2130              		.section	.text.RTC_1_UnixToDateTime,"ax",%progbits
 2131              		.align	2
 2132              		.global	RTC_1_UnixToDateTime
 2133              		.code	16
 2134              		.thumb_func
 2135              		.type	RTC_1_UnixToDateTime, %function
 2136              	RTC_1_UnixToDateTime:
 2137              	.LFB47:
1320:Generated_Source\PSoC4/RTC_1.c **** 
1321:Generated_Source\PSoC4/RTC_1.c **** 
1322:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 84


1323:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_UnixToDateTime
1324:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1325:Generated_Source\PSoC4/RTC_1.c **** *
1326:Generated_Source\PSoC4/RTC_1.c **** * \brief
1327:Generated_Source\PSoC4/RTC_1.c **** *  This is an internal function to convert the date and time from
1328:Generated_Source\PSoC4/RTC_1.c **** *  the UNIX time format into the regular time format.
1329:Generated_Source\PSoC4/RTC_1.c **** *
1330:Generated_Source\PSoC4/RTC_1.c **** * \param dayOfWeek A day of a week <br>
1331:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SUNDAY <br>
1332:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_MONDAY <br>
1333:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_TUESDAY <br>
1334:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_WEDNESDAY <br>
1335:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THURSDAY <br>
1336:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FRIDAY <br>
1337:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SATURDAY <br>
1338:Generated_Source\PSoC4/RTC_1.c **** *
1339:Generated_Source\PSoC4/RTC_1.c **** * \param weekOfMonth A week of a month <br>
1340:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIRST <br>
1341:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SECOND <br>
1342:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THIRD <br>
1343:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FOURTH <br>
1344:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_LAST <br>
1345:Generated_Source\PSoC4/RTC_1.c **** *
1346:Generated_Source\PSoC4/RTC_1.c **** * \param month A month of a year <br>
1347:Generated_Source\PSoC4/RTC_1.c **** *                   RTC_1_JANUARY <br>
1348:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_FEBRUARY <br>
1349:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MARCH <br>
1350:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_APRIL <br>
1351:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MAY <br>
1352:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JUNE <br>
1353:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JULY <br>
1354:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_AUGUST <br>
1355:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_SEPTEMBER <br>
1356:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_OCTOBER <br>
1357:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_NOVEMBER <br>
1358:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_DECEMBER <br>
1359:Generated_Source\PSoC4/RTC_1.c **** *
1360:Generated_Source\PSoC4/RTC_1.c **** * \param year A year value.
1361:Generated_Source\PSoC4/RTC_1.c **** *
1362:Generated_Source\PSoC4/RTC_1.c **** * \return A date in the "date format".
1363:Generated_Source\PSoC4/RTC_1.c **** *
1364:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_UnixToDateTime(RTC_1_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat)
1366:Generated_Source\PSoC4/RTC_1.c **** {
 2138              		.loc 2 1366 0
 2139              		.cfi_startproc
 2140              		@ args = 4, pretend = 0, frame = 120
 2141              		@ frame_needed = 1, uses_anonymous_args = 0
 2142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2143              		.cfi_def_cfa_offset 20
 2144              		.cfi_offset 4, -20
 2145              		.cfi_offset 5, -16
 2146              		.cfi_offset 6, -12
 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 A1B0     		sub	sp, sp, #132
 2150              		.cfi_def_cfa_offset 152
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 85


 2151 0004 02AF     		add	r7, sp, #8
 2152              		.cfi_def_cfa 7, 144
 2153 0006 7865     		str	r0, [r7, #84]
 2154 0008 BA64     		str	r2, [r7, #72]
 2155 000a FB64     		str	r3, [r7, #76]
1367:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMinute;
1368:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpHour;
1369:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpAmPmState;
1370:Generated_Source\PSoC4/RTC_1.c **** 
1371:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDay;
1372:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
1373:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
1374:Generated_Source\PSoC4/RTC_1.c **** 
1375:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVar;
1376:Generated_Source\PSoC4/RTC_1.c **** 
1377:Generated_Source\PSoC4/RTC_1.c ****     tmpAmPmState = 0u;
 2156              		.loc 2 1377 0
 2157 000c 0023     		movs	r3, #0
 2158 000e 3B67     		str	r3, [r7, #112]
1378:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_YEAR_0;
 2159              		.loc 2 1378 0
 2160 0010 9C4B     		ldr	r3, .L141
 2161 0012 BB66     		str	r3, [r7, #104]
1379:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = RTC_1_SECONDS_PER_NONLEAP_YEAR;
 2162              		.loc 2 1379 0
 2163 0014 9C4B     		ldr	r3, .L141+4
 2164 0016 7B66     		str	r3, [r7, #100]
1380:Generated_Source\PSoC4/RTC_1.c **** 
1381:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current year value. Variable tmpYear
1382:Generated_Source\PSoC4/RTC_1.c ****     *  increments while it contains value greater than number
1383:Generated_Source\PSoC4/RTC_1.c ****     *  of seconds in current year.
1384:Generated_Source\PSoC4/RTC_1.c ****     */
1385:Generated_Source\PSoC4/RTC_1.c ****     while(unixTime > tmpVar)
 2165              		.loc 2 1385 0
 2166 0018 19E0     		b	.L112
 2167              	.L114:
1386:Generated_Source\PSoC4/RTC_1.c ****     {
1387:Generated_Source\PSoC4/RTC_1.c ****         unixTime -= tmpVar;
 2168              		.loc 2 1387 0
 2169 001a 7B6E     		ldr	r3, [r7, #100]
 2170 001c BB60     		str	r3, [r7, #8]
 2171 001e 0023     		movs	r3, #0
 2172 0020 FB60     		str	r3, [r7, #12]
 2173 0022 BB6C     		ldr	r3, [r7, #72]
 2174 0024 FC6C     		ldr	r4, [r7, #76]
 2175 0026 B968     		ldr	r1, [r7, #8]
 2176 0028 FA68     		ldr	r2, [r7, #12]
 2177 002a 5B1A     		subs	r3, r3, r1
 2178 002c 9441     		sbcs	r4, r4, r2
 2179 002e BB64     		str	r3, [r7, #72]
 2180 0030 FC64     		str	r4, [r7, #76]
1388:Generated_Source\PSoC4/RTC_1.c ****         tmpYear++;
 2181              		.loc 2 1388 0
 2182 0032 BB6E     		ldr	r3, [r7, #104]
 2183 0034 0133     		adds	r3, r3, #1
 2184 0036 BB66     		str	r3, [r7, #104]
1389:Generated_Source\PSoC4/RTC_1.c **** 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 86


1390:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(tmpYear))
 2185              		.loc 2 1390 0
 2186 0038 BB6E     		ldr	r3, [r7, #104]
 2187 003a 1800     		movs	r0, r3
 2188 003c FFF7FEFF 		bl	RTC_1_LeapYear
 2189 0040 031E     		subs	r3, r0, #0
 2190 0042 02D0     		beq	.L113
1391:Generated_Source\PSoC4/RTC_1.c ****         {
1392:Generated_Source\PSoC4/RTC_1.c ****             tmpVar = RTC_1_SECONDS_PER_LEAP_YEAR;
 2191              		.loc 2 1392 0
 2192 0044 914B     		ldr	r3, .L141+8
 2193 0046 7B66     		str	r3, [r7, #100]
 2194 0048 01E0     		b	.L112
 2195              	.L113:
1393:Generated_Source\PSoC4/RTC_1.c ****         }
1394:Generated_Source\PSoC4/RTC_1.c ****         else
1395:Generated_Source\PSoC4/RTC_1.c ****         {
1396:Generated_Source\PSoC4/RTC_1.c ****             tmpVar = RTC_1_SECONDS_PER_NONLEAP_YEAR;
 2196              		.loc 2 1396 0
 2197 004a 8F4B     		ldr	r3, .L141+4
 2198 004c 7B66     		str	r3, [r7, #100]
 2199              	.L112:
1385:Generated_Source\PSoC4/RTC_1.c ****     {
 2200              		.loc 2 1385 0
 2201 004e 7B6E     		ldr	r3, [r7, #100]
 2202 0050 1D00     		movs	r5, r3
 2203 0052 0023     		movs	r3, #0
 2204 0054 1E00     		movs	r6, r3
 2205 0056 FB6C     		ldr	r3, [r7, #76]
 2206 0058 B342     		cmp	r3, r6
 2207 005a DED8     		bhi	.L114
 2208 005c FB6C     		ldr	r3, [r7, #76]
 2209 005e B342     		cmp	r3, r6
 2210 0060 02D1     		bne	.L135
 2211 0062 BB6C     		ldr	r3, [r7, #72]
 2212 0064 AB42     		cmp	r3, r5
 2213 0066 D8D8     		bhi	.L114
 2214              	.L135:
1397:Generated_Source\PSoC4/RTC_1.c ****         }
1398:Generated_Source\PSoC4/RTC_1.c **** 
1399:Generated_Source\PSoC4/RTC_1.c ****     }
1400:Generated_Source\PSoC4/RTC_1.c **** 
1401:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current month value. tmpMonth variable increments
1402:Generated_Source\PSoC4/RTC_1.c ****      * while unixTime variable value is greater than time
1403:Generated_Source\PSoC4/RTC_1.c ****      * interval from beginning of current year to beginning of
1404:Generated_Source\PSoC4/RTC_1.c ****      * current month
1405:Generated_Source\PSoC4/RTC_1.c ****     */
1406:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = (uint32)RTC_1_JANUARY;
 2215              		.loc 2 1406 0
 2216 0068 0123     		movs	r3, #1
 2217 006a FB66     		str	r3, [r7, #108]
1407:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = RTC_1_DaysInMonth(tmpMonth, tmpYear) * RTC_1_SECONDS_PER_DAY;
 2218              		.loc 2 1407 0
 2219 006c BA6E     		ldr	r2, [r7, #104]
 2220 006e FB6E     		ldr	r3, [r7, #108]
 2221 0070 1100     		movs	r1, r2
 2222 0072 1800     		movs	r0, r3
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 87


 2223 0074 FFF7FEFF 		bl	RTC_1_DaysInMonth
 2224 0078 0200     		movs	r2, r0
 2225 007a 854B     		ldr	r3, .L141+12
 2226 007c 5343     		muls	r3, r2
 2227 007e 7B66     		str	r3, [r7, #100]
1408:Generated_Source\PSoC4/RTC_1.c **** 
1409:Generated_Source\PSoC4/RTC_1.c ****     while(unixTime >= tmpVar)
 2228              		.loc 2 1409 0
 2229 0080 18E0     		b	.L116
 2230              	.L117:
1410:Generated_Source\PSoC4/RTC_1.c ****     {
1411:Generated_Source\PSoC4/RTC_1.c ****         unixTime -= tmpVar;
 2231              		.loc 2 1411 0
 2232 0082 7B6E     		ldr	r3, [r7, #100]
 2233 0084 3B60     		str	r3, [r7]
 2234 0086 0023     		movs	r3, #0
 2235 0088 7B60     		str	r3, [r7, #4]
 2236 008a BB6C     		ldr	r3, [r7, #72]
 2237 008c FC6C     		ldr	r4, [r7, #76]
 2238 008e 3968     		ldr	r1, [r7]
 2239 0090 7A68     		ldr	r2, [r7, #4]
 2240 0092 5B1A     		subs	r3, r3, r1
 2241 0094 9441     		sbcs	r4, r4, r2
 2242 0096 BB64     		str	r3, [r7, #72]
 2243 0098 FC64     		str	r4, [r7, #76]
1412:Generated_Source\PSoC4/RTC_1.c ****         tmpMonth++;
 2244              		.loc 2 1412 0
 2245 009a FB6E     		ldr	r3, [r7, #108]
 2246 009c 0133     		adds	r3, r3, #1
 2247 009e FB66     		str	r3, [r7, #108]
1413:Generated_Source\PSoC4/RTC_1.c ****         tmpVar = RTC_1_DaysInMonth(tmpMonth, tmpYear) * RTC_1_SECONDS_PER_DAY;
 2248              		.loc 2 1413 0
 2249 00a0 BA6E     		ldr	r2, [r7, #104]
 2250 00a2 FB6E     		ldr	r3, [r7, #108]
 2251 00a4 1100     		movs	r1, r2
 2252 00a6 1800     		movs	r0, r3
 2253 00a8 FFF7FEFF 		bl	RTC_1_DaysInMonth
 2254 00ac 0200     		movs	r2, r0
 2255 00ae 784B     		ldr	r3, .L141+12
 2256 00b0 5343     		muls	r3, r2
 2257 00b2 7B66     		str	r3, [r7, #100]
 2258              	.L116:
1409:Generated_Source\PSoC4/RTC_1.c ****     {
 2259              		.loc 2 1409 0
 2260 00b4 7B6E     		ldr	r3, [r7, #100]
 2261 00b6 3B64     		str	r3, [r7, #64]
 2262 00b8 0023     		movs	r3, #0
 2263 00ba 7B64     		str	r3, [r7, #68]
 2264 00bc FB6C     		ldr	r3, [r7, #76]
 2265 00be 7A6C     		ldr	r2, [r7, #68]
 2266 00c0 9342     		cmp	r3, r2
 2267 00c2 07D3     		bcc	.L136
 2268 00c4 FB6C     		ldr	r3, [r7, #76]
 2269 00c6 7A6C     		ldr	r2, [r7, #68]
 2270 00c8 9342     		cmp	r3, r2
 2271 00ca DAD1     		bne	.L117
 2272 00cc BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 88


 2273 00ce 3A6C     		ldr	r2, [r7, #64]
 2274 00d0 9342     		cmp	r3, r2
 2275 00d2 D6D2     		bcs	.L117
 2276              	.L136:
1414:Generated_Source\PSoC4/RTC_1.c ****     }
1415:Generated_Source\PSoC4/RTC_1.c **** 
1416:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current day value. */
1417:Generated_Source\PSoC4/RTC_1.c ****     tmpDay = (unixTime / RTC_1_SECONDS_PER_DAY);
 2277              		.loc 2 1417 0
 2278 00d4 B86C     		ldr	r0, [r7, #72]
 2279 00d6 F96C     		ldr	r1, [r7, #76]
 2280 00d8 6D4A     		ldr	r2, .L141+12
 2281 00da 0023     		movs	r3, #0
 2282 00dc FFF7FEFF 		bl	__aeabi_uldivmod
 2283 00e0 0300     		movs	r3, r0
 2284 00e2 0C00     		movs	r4, r1
 2285 00e4 3B66     		str	r3, [r7, #96]
1418:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = tmpDay * RTC_1_SECONDS_PER_DAY;
 2286              		.loc 2 1418 0
 2287 00e6 3A6E     		ldr	r2, [r7, #96]
 2288 00e8 694B     		ldr	r3, .L141+12
 2289 00ea 5343     		muls	r3, r2
 2290 00ec 7B66     		str	r3, [r7, #100]
1419:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2291              		.loc 2 1419 0
 2292 00ee 7B6E     		ldr	r3, [r7, #100]
 2293 00f0 BB63     		str	r3, [r7, #56]
 2294 00f2 0023     		movs	r3, #0
 2295 00f4 FB63     		str	r3, [r7, #60]
 2296 00f6 FB6C     		ldr	r3, [r7, #76]
 2297 00f8 FA6B     		ldr	r2, [r7, #60]
 2298 00fa 9342     		cmp	r3, r2
 2299 00fc 0CD3     		bcc	.L119
 2300 00fe FB6C     		ldr	r3, [r7, #76]
 2301 0100 FA6B     		ldr	r2, [r7, #60]
 2302 0102 9342     		cmp	r3, r2
 2303 0104 03D1     		bne	.L137
 2304 0106 BB6C     		ldr	r3, [r7, #72]
 2305 0108 BA6B     		ldr	r2, [r7, #56]
 2306 010a 9342     		cmp	r3, r2
 2307 010c 04D3     		bcc	.L119
 2308              	.L137:
 2309              		.loc 2 1419 0 is_stmt 0 discriminator 1
 2310 010e 7B6E     		ldr	r3, [r7, #100]
 2311 0110 3B62     		str	r3, [r7, #32]
 2312 0112 0023     		movs	r3, #0
 2313 0114 7B62     		str	r3, [r7, #36]
 2314 0116 03E0     		b	.L121
 2315              	.L119:
 2316              		.loc 2 1419 0 discriminator 2
 2317 0118 0023     		movs	r3, #0
 2318 011a 0024     		movs	r4, #0
 2319 011c 3B62     		str	r3, [r7, #32]
 2320 011e 7C62     		str	r4, [r7, #36]
 2321              	.L121:
 2322              		.loc 2 1419 0 discriminator 4
 2323 0120 BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 89


 2324 0122 FC6C     		ldr	r4, [r7, #76]
 2325 0124 396A     		ldr	r1, [r7, #32]
 2326 0126 7A6A     		ldr	r2, [r7, #36]
 2327 0128 5B1A     		subs	r3, r3, r1
 2328 012a 9441     		sbcs	r4, r4, r2
 2329 012c BB64     		str	r3, [r7, #72]
 2330 012e FC64     		str	r4, [r7, #76]
1420:Generated_Source\PSoC4/RTC_1.c ****     tmpDay += 1u;
 2331              		.loc 2 1420 0 is_stmt 1 discriminator 4
 2332 0130 3B6E     		ldr	r3, [r7, #96]
 2333 0132 0133     		adds	r3, r3, #1
 2334 0134 3B66     		str	r3, [r7, #96]
1421:Generated_Source\PSoC4/RTC_1.c **** 
1422:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current hour value. If function works in 12-Hour mode,
1423:Generated_Source\PSoC4/RTC_1.c ****      * it converts time to 12-Hours mode and calculates AmPm status */
1424:Generated_Source\PSoC4/RTC_1.c ****     tmpHour = unixTime / RTC_1_SECONDS_PER_HOUR;
 2335              		.loc 2 1424 0 discriminator 4
 2336 0136 B86C     		ldr	r0, [r7, #72]
 2337 0138 F96C     		ldr	r1, [r7, #76]
 2338 013a E122     		movs	r2, #225
 2339 013c 1201     		lsls	r2, r2, #4
 2340 013e 0023     		movs	r3, #0
 2341 0140 FFF7FEFF 		bl	__aeabi_uldivmod
 2342 0144 0300     		movs	r3, r0
 2343 0146 0C00     		movs	r4, r1
 2344 0148 7B67     		str	r3, [r7, #116]
1425:Generated_Source\PSoC4/RTC_1.c ****     tmpVar  = tmpHour * RTC_1_SECONDS_PER_HOUR;
 2345              		.loc 2 1425 0 discriminator 4
 2346 014a 7B6F     		ldr	r3, [r7, #116]
 2347 014c E122     		movs	r2, #225
 2348 014e 1201     		lsls	r2, r2, #4
 2349 0150 5343     		muls	r3, r2
 2350 0152 7B66     		str	r3, [r7, #100]
1426:Generated_Source\PSoC4/RTC_1.c ****     if((uint32)RTC_1_24_HOURS_FORMAT != timeFormat)
 2351              		.loc 2 1426 0 discriminator 4
 2352 0154 9023     		movs	r3, #144
 2353 0156 FB18     		adds	r3, r7, r3
 2354 0158 1B68     		ldr	r3, [r3]
 2355 015a 002B     		cmp	r3, #0
 2356 015c 1DD0     		beq	.L122
1427:Generated_Source\PSoC4/RTC_1.c ****     {
1428:Generated_Source\PSoC4/RTC_1.c ****         if(unixTime > RTC_1_UNIX_TIME_PM)
 2357              		.loc 2 1428 0
 2358 015e FB6C     		ldr	r3, [r7, #76]
 2359 0160 002B     		cmp	r3, #0
 2360 0162 06D1     		bne	.L138
 2361 0164 FB6C     		ldr	r3, [r7, #76]
 2362 0166 002B     		cmp	r3, #0
 2363 0168 0ED1     		bne	.L123
 2364 016a BB6C     		ldr	r3, [r7, #72]
 2365 016c 494A     		ldr	r2, .L141+16
 2366 016e 9342     		cmp	r3, r2
 2367 0170 0AD9     		bls	.L123
 2368              	.L138:
1429:Generated_Source\PSoC4/RTC_1.c ****         {
1430:Generated_Source\PSoC4/RTC_1.c ****             tmpAmPmState = RTC_1_PM;
 2369              		.loc 2 1430 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 90


 2370 0172 0123     		movs	r3, #1
 2371 0174 3B67     		str	r3, [r7, #112]
1431:Generated_Source\PSoC4/RTC_1.c ****             tmpHour = (tmpHour > 12u) ? (tmpHour - 12u) : tmpHour;
 2372              		.loc 2 1431 0
 2373 0176 7B6F     		ldr	r3, [r7, #116]
 2374 0178 0C2B     		cmp	r3, #12
 2375 017a 02D9     		bls	.L125
 2376              		.loc 2 1431 0 is_stmt 0 discriminator 1
 2377 017c 7B6F     		ldr	r3, [r7, #116]
 2378 017e 0C3B     		subs	r3, r3, #12
 2379 0180 00E0     		b	.L126
 2380              	.L125:
 2381              		.loc 2 1431 0 discriminator 2
 2382 0182 7B6F     		ldr	r3, [r7, #116]
 2383              	.L126:
 2384              		.loc 2 1431 0 discriminator 4
 2385 0184 7B67     		str	r3, [r7, #116]
 2386 0186 08E0     		b	.L122
 2387              	.L123:
1432:Generated_Source\PSoC4/RTC_1.c ****         }
1433:Generated_Source\PSoC4/RTC_1.c ****         else
1434:Generated_Source\PSoC4/RTC_1.c ****         {
1435:Generated_Source\PSoC4/RTC_1.c ****             tmpAmPmState = RTC_1_AM;
 2388              		.loc 2 1435 0 is_stmt 1
 2389 0188 0023     		movs	r3, #0
 2390 018a 3B67     		str	r3, [r7, #112]
1436:Generated_Source\PSoC4/RTC_1.c ****             tmpHour = (0u != tmpHour) ? tmpHour : 12u;
 2391              		.loc 2 1436 0
 2392 018c 7B6F     		ldr	r3, [r7, #116]
 2393 018e 002B     		cmp	r3, #0
 2394 0190 01D0     		beq	.L127
 2395              		.loc 2 1436 0 is_stmt 0 discriminator 1
 2396 0192 7B6F     		ldr	r3, [r7, #116]
 2397 0194 00E0     		b	.L128
 2398              	.L127:
 2399              		.loc 2 1436 0 discriminator 2
 2400 0196 0C23     		movs	r3, #12
 2401              	.L128:
 2402              		.loc 2 1436 0 discriminator 4
 2403 0198 7B67     		str	r3, [r7, #116]
 2404              	.L122:
1437:Generated_Source\PSoC4/RTC_1.c ****         }
1438:Generated_Source\PSoC4/RTC_1.c ****     }
1439:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2405              		.loc 2 1439 0 is_stmt 1
 2406 019a 7B6E     		ldr	r3, [r7, #100]
 2407 019c 3B63     		str	r3, [r7, #48]
 2408 019e 0023     		movs	r3, #0
 2409 01a0 7B63     		str	r3, [r7, #52]
 2410 01a2 FB6C     		ldr	r3, [r7, #76]
 2411 01a4 7A6B     		ldr	r2, [r7, #52]
 2412 01a6 9342     		cmp	r3, r2
 2413 01a8 0CD3     		bcc	.L129
 2414 01aa FB6C     		ldr	r3, [r7, #76]
 2415 01ac 7A6B     		ldr	r2, [r7, #52]
 2416 01ae 9342     		cmp	r3, r2
 2417 01b0 03D1     		bne	.L139
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 91


 2418 01b2 BB6C     		ldr	r3, [r7, #72]
 2419 01b4 3A6B     		ldr	r2, [r7, #48]
 2420 01b6 9342     		cmp	r3, r2
 2421 01b8 04D3     		bcc	.L129
 2422              	.L139:
 2423              		.loc 2 1439 0 is_stmt 0 discriminator 1
 2424 01ba 7B6E     		ldr	r3, [r7, #100]
 2425 01bc BB61     		str	r3, [r7, #24]
 2426 01be 0023     		movs	r3, #0
 2427 01c0 FB61     		str	r3, [r7, #28]
 2428 01c2 03E0     		b	.L131
 2429              	.L129:
 2430              		.loc 2 1439 0 discriminator 2
 2431 01c4 0023     		movs	r3, #0
 2432 01c6 0024     		movs	r4, #0
 2433 01c8 BB61     		str	r3, [r7, #24]
 2434 01ca FC61     		str	r4, [r7, #28]
 2435              	.L131:
 2436              		.loc 2 1439 0 discriminator 4
 2437 01cc BB6C     		ldr	r3, [r7, #72]
 2438 01ce FC6C     		ldr	r4, [r7, #76]
 2439 01d0 B969     		ldr	r1, [r7, #24]
 2440 01d2 FA69     		ldr	r2, [r7, #28]
 2441 01d4 5B1A     		subs	r3, r3, r1
 2442 01d6 9441     		sbcs	r4, r4, r2
 2443 01d8 BB64     		str	r3, [r7, #72]
 2444 01da FC64     		str	r4, [r7, #76]
1440:Generated_Source\PSoC4/RTC_1.c **** 
1441:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current minute.  */
1442:Generated_Source\PSoC4/RTC_1.c ****     tmpMinute = unixTime / RTC_1_SECONDS_PER_MINUTE;
 2445              		.loc 2 1442 0 is_stmt 1 discriminator 4
 2446 01dc B86C     		ldr	r0, [r7, #72]
 2447 01de F96C     		ldr	r1, [r7, #76]
 2448 01e0 3C22     		movs	r2, #60
 2449 01e2 0023     		movs	r3, #0
 2450 01e4 FFF7FEFF 		bl	__aeabi_uldivmod
 2451 01e8 0300     		movs	r3, r0
 2452 01ea 0C00     		movs	r4, r1
 2453 01ec FB65     		str	r3, [r7, #92]
1443:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = tmpMinute * RTC_1_SECONDS_PER_MINUTE;
 2454              		.loc 2 1443 0 discriminator 4
 2455 01ee FA6D     		ldr	r2, [r7, #92]
 2456 01f0 1300     		movs	r3, r2
 2457 01f2 1B01     		lsls	r3, r3, #4
 2458 01f4 9B1A     		subs	r3, r3, r2
 2459 01f6 9B00     		lsls	r3, r3, #2
 2460 01f8 7B66     		str	r3, [r7, #100]
1444:Generated_Source\PSoC4/RTC_1.c **** 
1445:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current second. */
1446:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 2461              		.loc 2 1446 0 discriminator 4
 2462 01fa 7B6E     		ldr	r3, [r7, #100]
 2463 01fc BB62     		str	r3, [r7, #40]
 2464 01fe 0023     		movs	r3, #0
 2465 0200 FB62     		str	r3, [r7, #44]
 2466 0202 FB6C     		ldr	r3, [r7, #76]
 2467 0204 FA6A     		ldr	r2, [r7, #44]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 92


 2468 0206 9342     		cmp	r3, r2
 2469 0208 0CD3     		bcc	.L132
 2470 020a FB6C     		ldr	r3, [r7, #76]
 2471 020c FA6A     		ldr	r2, [r7, #44]
 2472 020e 9342     		cmp	r3, r2
 2473 0210 03D1     		bne	.L140
 2474 0212 BB6C     		ldr	r3, [r7, #72]
 2475 0214 BA6A     		ldr	r2, [r7, #40]
 2476 0216 9342     		cmp	r3, r2
 2477 0218 04D3     		bcc	.L132
 2478              	.L140:
 2479              		.loc 2 1446 0 is_stmt 0 discriminator 1
 2480 021a 7B6E     		ldr	r3, [r7, #100]
 2481 021c 3B61     		str	r3, [r7, #16]
 2482 021e 0023     		movs	r3, #0
 2483 0220 7B61     		str	r3, [r7, #20]
 2484 0222 03E0     		b	.L134
 2485              	.L132:
 2486              		.loc 2 1446 0 discriminator 2
 2487 0224 0023     		movs	r3, #0
 2488 0226 0024     		movs	r4, #0
 2489 0228 3B61     		str	r3, [r7, #16]
 2490 022a 7C61     		str	r4, [r7, #20]
 2491              	.L134:
 2492              		.loc 2 1446 0 discriminator 4
 2493 022c BB6C     		ldr	r3, [r7, #72]
 2494 022e FC6C     		ldr	r4, [r7, #76]
 2495 0230 3969     		ldr	r1, [r7, #16]
 2496 0232 7A69     		ldr	r2, [r7, #20]
 2497 0234 5B1A     		subs	r3, r3, r1
 2498 0236 9441     		sbcs	r4, r4, r2
 2499 0238 BB64     		str	r3, [r7, #72]
 2500 023a FC64     		str	r4, [r7, #76]
1447:Generated_Source\PSoC4/RTC_1.c **** 
1448:Generated_Source\PSoC4/RTC_1.c **** 
1449:Generated_Source\PSoC4/RTC_1.c ****     dateTime->date = RTC_1_ConstructDate(tmpMonth, tmpDay, tmpYear);
 2501              		.loc 2 1449 0 is_stmt 1 discriminator 4
 2502 023c BA6E     		ldr	r2, [r7, #104]
 2503 023e 396E     		ldr	r1, [r7, #96]
 2504 0240 FB6E     		ldr	r3, [r7, #108]
 2505 0242 1800     		movs	r0, r3
 2506 0244 FFF7FEFF 		bl	RTC_1_ConstructDate
 2507 0248 0200     		movs	r2, r0
 2508 024a 7B6D     		ldr	r3, [r7, #84]
 2509 024c 5A60     		str	r2, [r3, #4]
1450:Generated_Source\PSoC4/RTC_1.c ****     dateTime->time = RTC_1_ConstructTime(timeFormat, tmpAmPmState, tmpHour, tmpMinute, unixTime);
 2510              		.loc 2 1450 0 discriminator 4
 2511 024e BB6C     		ldr	r3, [r7, #72]
 2512 0250 FC6D     		ldr	r4, [r7, #92]
 2513 0252 7A6F     		ldr	r2, [r7, #116]
 2514 0254 396F     		ldr	r1, [r7, #112]
 2515 0256 9020     		movs	r0, #144
 2516 0258 3818     		adds	r0, r7, r0
 2517 025a 0068     		ldr	r0, [r0]
 2518 025c 0093     		str	r3, [sp]
 2519 025e 2300     		movs	r3, r4
 2520 0260 FFF7FEFF 		bl	RTC_1_ConstructTime
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 93


 2521 0264 0200     		movs	r2, r0
 2522 0266 7B6D     		ldr	r3, [r7, #84]
 2523 0268 1A60     		str	r2, [r3]
1451:Generated_Source\PSoC4/RTC_1.c ****     dateTime->dayOfWeek = RTC_1_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 2524              		.loc 2 1451 0 discriminator 4
 2525 026a BA6E     		ldr	r2, [r7, #104]
 2526 026c F96E     		ldr	r1, [r7, #108]
 2527 026e 3B6E     		ldr	r3, [r7, #96]
 2528 0270 1800     		movs	r0, r3
 2529 0272 FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 2530 0276 0200     		movs	r2, r0
 2531 0278 7B6D     		ldr	r3, [r7, #84]
 2532 027a 9A60     		str	r2, [r3, #8]
1452:Generated_Source\PSoC4/RTC_1.c **** }
 2533              		.loc 2 1452 0 discriminator 4
 2534 027c C046     		nop
 2535 027e BD46     		mov	sp, r7
 2536 0280 1FB0     		add	sp, sp, #124
 2537              		@ sp needed
 2538 0282 F0BD     		pop	{r4, r5, r6, r7, pc}
 2539              	.L142:
 2540              		.align	2
 2541              	.L141:
 2542 0284 B2070000 		.word	1970
 2543 0288 8033E101 		.word	31536000
 2544 028c 0085E201 		.word	31622400
 2545 0290 80510100 		.word	86400
 2546 0294 C1A80000 		.word	43201
 2547              		.cfi_endproc
 2548              	.LFE47:
 2549              		.size	RTC_1_UnixToDateTime, .-RTC_1_UnixToDateTime
 2550              		.section	.text.RTC_1_RelativeToFixed,"ax",%progbits
 2551              		.align	2
 2552              		.global	RTC_1_RelativeToFixed
 2553              		.code	16
 2554              		.thumb_func
 2555              		.type	RTC_1_RelativeToFixed, %function
 2556              	RTC_1_RelativeToFixed:
 2557              	.LFB48:
1453:Generated_Source\PSoC4/RTC_1.c **** 
1454:Generated_Source\PSoC4/RTC_1.c **** 
1455:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1456:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_RelativeToFixed
1457:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1458:Generated_Source\PSoC4/RTC_1.c **** *
1459:Generated_Source\PSoC4/RTC_1.c **** * \brief
1460:Generated_Source\PSoC4/RTC_1.c **** * This is an internal function to convert a relative date into
1461:Generated_Source\PSoC4/RTC_1.c **** * a fixed date.
1462:Generated_Source\PSoC4/RTC_1.c **** *
1463:Generated_Source\PSoC4/RTC_1.c **** * \param dayOfWeek A day of a week <br>
1464:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SUNDAY <br>
1465:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_MONDAY <br>
1466:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_TUESDAY <br>
1467:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_WEDNESDAY <br>
1468:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THURSDAY <br>
1469:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FRIDAY <br>
1470:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SATURDAY <br>
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 94


1471:Generated_Source\PSoC4/RTC_1.c **** *
1472:Generated_Source\PSoC4/RTC_1.c **** *  \param weekOfMonth A week of a month <br>
1473:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIRST <br>
1474:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SECOND <br>
1475:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THIRD <br>
1476:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FOURTH <br>
1477:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIFTH <br>
1478:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_LAST <br>
1479:Generated_Source\PSoC4/RTC_1.c **** *
1480:Generated_Source\PSoC4/RTC_1.c **** * \param month A month of a year <br>
1481:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JANUARY <br>
1482:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_FEBRUARY <br>
1483:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MARCH <br>
1484:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_APRIL <br>
1485:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MAY <br>
1486:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JUNE <br>
1487:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JULY <br>
1488:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_AUGUST <br>
1489:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_SEPTEMBER <br>
1490:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_OCTOBER <br>
1491:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_NOVEMBER <br>
1492:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_DECEMBER <br>
1493:Generated_Source\PSoC4/RTC_1.c **** *
1494:Generated_Source\PSoC4/RTC_1.c **** * \param year A year value.
1495:Generated_Source\PSoC4/RTC_1.c **** *
1496:Generated_Source\PSoC4/RTC_1.c **** * \return A date in the "date format".
1497:Generated_Source\PSoC4/RTC_1.c **** *
1498:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1499:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year)
1500:Generated_Source\PSoC4/RTC_1.c **** {
 2558              		.loc 2 1500 0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 40
 2561              		@ frame_needed = 1, uses_anonymous_args = 0
 2562 0000 80B5     		push	{r7, lr}
 2563              		.cfi_def_cfa_offset 8
 2564              		.cfi_offset 7, -8
 2565              		.cfi_offset 14, -4
 2566 0002 8AB0     		sub	sp, sp, #40
 2567              		.cfi_def_cfa_offset 48
 2568 0004 00AF     		add	r7, sp, #0
 2569              		.cfi_def_cfa_register 7
 2570 0006 F860     		str	r0, [r7, #12]
 2571 0008 B960     		str	r1, [r7, #8]
 2572 000a 7A60     		str	r2, [r7, #4]
 2573 000c 3B60     		str	r3, [r7]
1501:Generated_Source\PSoC4/RTC_1.c ****     uint32 curDay;
1502:Generated_Source\PSoC4/RTC_1.c ****     uint32 curWeek;
1503:Generated_Source\PSoC4/RTC_1.c ****     uint32 daysInMonth;
1504:Generated_Source\PSoC4/RTC_1.c ****     uint32 dayOfMonthTmp;
1505:Generated_Source\PSoC4/RTC_1.c **** 
1506:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1507:Generated_Source\PSoC4/RTC_1.c **** 
1508:Generated_Source\PSoC4/RTC_1.c ****     curDay      = 1u;
 2574              		.loc 2 1508 0
 2575 000e 0123     		movs	r3, #1
 2576 0010 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 95


1509:Generated_Source\PSoC4/RTC_1.c ****     curWeek     = (uint32)RTC_1_FIRST;
 2577              		.loc 2 1509 0
 2578 0012 0123     		movs	r3, #1
 2579 0014 3B62     		str	r3, [r7, #32]
1510:Generated_Source\PSoC4/RTC_1.c ****     daysInMonth = RTC_1_DaysInMonth(month, year);
 2580              		.loc 2 1510 0
 2581 0016 3A68     		ldr	r2, [r7]
 2582 0018 7B68     		ldr	r3, [r7, #4]
 2583 001a 1100     		movs	r1, r2
 2584 001c 1800     		movs	r0, r3
 2585 001e FFF7FEFF 		bl	RTC_1_DaysInMonth
 2586 0022 0300     		movs	r3, r0
 2587 0024 BB61     		str	r3, [r7, #24]
1511:Generated_Source\PSoC4/RTC_1.c ****     dayOfMonthTmp = curDay;
 2588              		.loc 2 1511 0
 2589 0026 7B6A     		ldr	r3, [r7, #36]
 2590 0028 FB61     		str	r3, [r7, #28]
1512:Generated_Source\PSoC4/RTC_1.c **** 
1513:Generated_Source\PSoC4/RTC_1.c ****     while((curWeek <= weekOfMonth) && (curDay <= daysInMonth))
 2591              		.loc 2 1513 0
 2592 002a 11E0     		b	.L144
 2593              	.L147:
1514:Generated_Source\PSoC4/RTC_1.c ****     {
1515:Generated_Source\PSoC4/RTC_1.c ****         if(dayOfWeek == RTC_1_GetDayOfWeek(curDay, month, year))
 2594              		.loc 2 1515 0
 2595 002c 3A68     		ldr	r2, [r7]
 2596 002e 7968     		ldr	r1, [r7, #4]
 2597 0030 7B6A     		ldr	r3, [r7, #36]
 2598 0032 1800     		movs	r0, r3
 2599 0034 FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 2600 0038 0200     		movs	r2, r0
 2601 003a FB68     		ldr	r3, [r7, #12]
 2602 003c 9A42     		cmp	r2, r3
 2603 003e 04D1     		bne	.L145
1516:Generated_Source\PSoC4/RTC_1.c ****         {
1517:Generated_Source\PSoC4/RTC_1.c ****             dayOfMonthTmp = curDay;
 2604              		.loc 2 1517 0
 2605 0040 7B6A     		ldr	r3, [r7, #36]
 2606 0042 FB61     		str	r3, [r7, #28]
1518:Generated_Source\PSoC4/RTC_1.c ****             curWeek++;
 2607              		.loc 2 1518 0
 2608 0044 3B6A     		ldr	r3, [r7, #32]
 2609 0046 0133     		adds	r3, r3, #1
 2610 0048 3B62     		str	r3, [r7, #32]
 2611              	.L145:
1519:Generated_Source\PSoC4/RTC_1.c ****         }
1520:Generated_Source\PSoC4/RTC_1.c ****         curDay++;
 2612              		.loc 2 1520 0
 2613 004a 7B6A     		ldr	r3, [r7, #36]
 2614 004c 0133     		adds	r3, r3, #1
 2615 004e 7B62     		str	r3, [r7, #36]
 2616              	.L144:
1513:Generated_Source\PSoC4/RTC_1.c ****     {
 2617              		.loc 2 1513 0
 2618 0050 3A6A     		ldr	r2, [r7, #32]
 2619 0052 BB68     		ldr	r3, [r7, #8]
 2620 0054 9A42     		cmp	r2, r3
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 96


 2621 0056 03D8     		bhi	.L146
1513:Generated_Source\PSoC4/RTC_1.c ****     {
 2622              		.loc 2 1513 0 is_stmt 0 discriminator 1
 2623 0058 7A6A     		ldr	r2, [r7, #36]
 2624 005a BB69     		ldr	r3, [r7, #24]
 2625 005c 9A42     		cmp	r2, r3
 2626 005e E5D9     		bls	.L147
 2627              	.L146:
1521:Generated_Source\PSoC4/RTC_1.c ****     }
1522:Generated_Source\PSoC4/RTC_1.c **** 
1523:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_ConstructDate(month, dayOfMonthTmp, year);
 2628              		.loc 2 1523 0 is_stmt 1
 2629 0060 3A68     		ldr	r2, [r7]
 2630 0062 F969     		ldr	r1, [r7, #28]
 2631 0064 7B68     		ldr	r3, [r7, #4]
 2632 0066 1800     		movs	r0, r3
 2633 0068 FFF7FEFF 		bl	RTC_1_ConstructDate
 2634 006c 0300     		movs	r3, r0
 2635 006e 7B61     		str	r3, [r7, #20]
1524:Generated_Source\PSoC4/RTC_1.c **** 
1525:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 2636              		.loc 2 1525 0
 2637 0070 7B69     		ldr	r3, [r7, #20]
1526:Generated_Source\PSoC4/RTC_1.c **** }
 2638              		.loc 2 1526 0
 2639 0072 1800     		movs	r0, r3
 2640 0074 BD46     		mov	sp, r7
 2641 0076 0AB0     		add	sp, sp, #40
 2642              		@ sp needed
 2643 0078 80BD     		pop	{r7, pc}
 2644              		.cfi_endproc
 2645              	.LFE48:
 2646              		.size	RTC_1_RelativeToFixed, .-RTC_1_RelativeToFixed
 2647 007a C046     		.section	.text.RTC_1_DaysInMonth,"ax",%progbits
 2648              		.align	2
 2649              		.global	RTC_1_DaysInMonth
 2650              		.code	16
 2651              		.thumb_func
 2652              		.type	RTC_1_DaysInMonth, %function
 2653              	RTC_1_DaysInMonth:
 2654              	.LFB49:
1527:Generated_Source\PSoC4/RTC_1.c **** 
1528:Generated_Source\PSoC4/RTC_1.c **** 
1529:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1530:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DaysInMonth
1531:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1532:Generated_Source\PSoC4/RTC_1.c **** *
1533:Generated_Source\PSoC4/RTC_1.c **** * \brief
1534:Generated_Source\PSoC4/RTC_1.c **** *  Returns a number of days in a month passed through the parameters.
1535:Generated_Source\PSoC4/RTC_1.c **** *
1536:Generated_Source\PSoC4/RTC_1.c **** * \param
1537:Generated_Source\PSoC4/RTC_1.c **** *  month A month of a year
1538:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JANUARY
1539:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_FEBRUARY
1540:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MARCH
1541:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_APRIL
1542:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MAY
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 97


1543:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JUNE
1544:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JULY
1545:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_AUGUST
1546:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_SEPTEMBER
1547:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_OCTOBER
1548:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_NOVEMBER
1549:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_DECEMBER
1550:Generated_Source\PSoC4/RTC_1.c **** *
1551:Generated_Source\PSoC4/RTC_1.c **** * \param
1552:Generated_Source\PSoC4/RTC_1.c **** * year A year value.
1553:Generated_Source\PSoC4/RTC_1.c **** *
1554:Generated_Source\PSoC4/RTC_1.c **** * \return
1555:Generated_Source\PSoC4/RTC_1.c **** *  A number of days in a month in the year passed through the parameters.
1556:Generated_Source\PSoC4/RTC_1.c **** *
1557:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1558:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_DaysInMonth(uint32 month, uint32 year)
1559:Generated_Source\PSoC4/RTC_1.c **** {
 2655              		.loc 2 1559 0
 2656              		.cfi_startproc
 2657              		@ args = 0, pretend = 0, frame = 16
 2658              		@ frame_needed = 1, uses_anonymous_args = 0
 2659 0000 80B5     		push	{r7, lr}
 2660              		.cfi_def_cfa_offset 8
 2661              		.cfi_offset 7, -8
 2662              		.cfi_offset 14, -4
 2663 0002 84B0     		sub	sp, sp, #16
 2664              		.cfi_def_cfa_offset 24
 2665 0004 00AF     		add	r7, sp, #0
 2666              		.cfi_def_cfa_register 7
 2667 0006 7860     		str	r0, [r7, #4]
 2668 0008 3960     		str	r1, [r7]
1560:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1561:Generated_Source\PSoC4/RTC_1.c **** 
1562:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_daysInMonthTbl[month - 1u];
 2669              		.loc 2 1562 0
 2670 000a 7B68     		ldr	r3, [r7, #4]
 2671 000c 013B     		subs	r3, r3, #1
 2672 000e 0A4A     		ldr	r2, .L152
 2673 0010 D35C     		ldrb	r3, [r2, r3]
 2674 0012 FB60     		str	r3, [r7, #12]
1563:Generated_Source\PSoC4/RTC_1.c ****     if((uint32)RTC_1_FEBRUARY == month)
 2675              		.loc 2 1563 0
 2676 0014 7B68     		ldr	r3, [r7, #4]
 2677 0016 022B     		cmp	r3, #2
 2678 0018 08D1     		bne	.L150
1564:Generated_Source\PSoC4/RTC_1.c ****     {
1565:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(year))
 2679              		.loc 2 1565 0
 2680 001a 3B68     		ldr	r3, [r7]
 2681 001c 1800     		movs	r0, r3
 2682 001e FFF7FEFF 		bl	RTC_1_LeapYear
 2683 0022 031E     		subs	r3, r0, #0
 2684 0024 02D0     		beq	.L150
1566:Generated_Source\PSoC4/RTC_1.c ****         {
1567:Generated_Source\PSoC4/RTC_1.c ****             retVal++;
 2685              		.loc 2 1567 0
 2686 0026 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 98


 2687 0028 0133     		adds	r3, r3, #1
 2688 002a FB60     		str	r3, [r7, #12]
 2689              	.L150:
1568:Generated_Source\PSoC4/RTC_1.c ****         }
1569:Generated_Source\PSoC4/RTC_1.c ****     }
1570:Generated_Source\PSoC4/RTC_1.c **** 
1571:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 2690              		.loc 2 1571 0
 2691 002c FB68     		ldr	r3, [r7, #12]
1572:Generated_Source\PSoC4/RTC_1.c **** }
 2692              		.loc 2 1572 0
 2693 002e 1800     		movs	r0, r3
 2694 0030 BD46     		mov	sp, r7
 2695 0032 04B0     		add	sp, sp, #16
 2696              		@ sp needed
 2697 0034 80BD     		pop	{r7, pc}
 2698              	.L153:
 2699 0036 C046     		.align	2
 2700              	.L152:
 2701 0038 00000000 		.word	RTC_1_daysInMonthTbl
 2702              		.cfi_endproc
 2703              	.LFE49:
 2704              		.size	RTC_1_DaysInMonth, .-RTC_1_DaysInMonth
 2705              		.section	.text.RTC_1_DaysBeforeMonth,"ax",%progbits
 2706              		.align	2
 2707              		.global	RTC_1_DaysBeforeMonth
 2708              		.code	16
 2709              		.thumb_func
 2710              		.type	RTC_1_DaysBeforeMonth, %function
 2711              	RTC_1_DaysBeforeMonth:
 2712              	.LFB50:
1573:Generated_Source\PSoC4/RTC_1.c **** 
1574:Generated_Source\PSoC4/RTC_1.c **** 
1575:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1576:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DaysBeforeMonth
1577:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1578:Generated_Source\PSoC4/RTC_1.c **** *
1579:Generated_Source\PSoC4/RTC_1.c **** * \brief
1580:Generated_Source\PSoC4/RTC_1.c **** *  Calculates how many days elapsed from the beginning of the year to the
1581:Generated_Source\PSoC4/RTC_1.c **** *  beginning of the current month.
1582:Generated_Source\PSoC4/RTC_1.c **** *
1583:Generated_Source\PSoC4/RTC_1.c **** * \param
1584:Generated_Source\PSoC4/RTC_1.c **** *  month A month of a year
1585:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JANUARY
1586:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_FEBRUARY
1587:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MARCH
1588:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_APRIL
1589:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MAY
1590:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JUNE
1591:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JULY
1592:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_AUGUST
1593:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_SEPTEMBER
1594:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_OCTOBER
1595:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_NOVEMBER
1596:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_DECEMBER
1597:Generated_Source\PSoC4/RTC_1.c **** *
1598:Generated_Source\PSoC4/RTC_1.c **** * \param
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 99


1599:Generated_Source\PSoC4/RTC_1.c **** * year A year value.
1600:Generated_Source\PSoC4/RTC_1.c **** *
1601:Generated_Source\PSoC4/RTC_1.c **** * \return
1602:Generated_Source\PSoC4/RTC_1.c **** *  A number of days elapsed from the beginning of the year to the
1603:Generated_Source\PSoC4/RTC_1.c **** *  beginning of the current month passed through the parameters.
1604:Generated_Source\PSoC4/RTC_1.c **** *
1605:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1606:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_DaysBeforeMonth(uint32 month, uint32 year)
1607:Generated_Source\PSoC4/RTC_1.c **** {
 2713              		.loc 2 1607 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 16
 2716              		@ frame_needed = 1, uses_anonymous_args = 0
 2717 0000 80B5     		push	{r7, lr}
 2718              		.cfi_def_cfa_offset 8
 2719              		.cfi_offset 7, -8
 2720              		.cfi_offset 14, -4
 2721 0002 84B0     		sub	sp, sp, #16
 2722              		.cfi_def_cfa_offset 24
 2723 0004 00AF     		add	r7, sp, #0
 2724              		.cfi_def_cfa_register 7
 2725 0006 7860     		str	r0, [r7, #4]
 2726 0008 3960     		str	r1, [r7]
1608:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1609:Generated_Source\PSoC4/RTC_1.c **** 
1610:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_daysBeforeMonthTbl[month];
 2727              		.loc 2 1610 0
 2728 000a 0B4B     		ldr	r3, .L157
 2729 000c 7A68     		ldr	r2, [r7, #4]
 2730 000e 5200     		lsls	r2, r2, #1
 2731 0010 D35A     		ldrh	r3, [r2, r3]
 2732 0012 FB60     		str	r3, [r7, #12]
1611:Generated_Source\PSoC4/RTC_1.c ****     if((0u == RTC_1_LeapYear(year)) && (month > (uint32)RTC_1_FEBRUARY))
 2733              		.loc 2 1611 0
 2734 0014 3B68     		ldr	r3, [r7]
 2735 0016 1800     		movs	r0, r3
 2736 0018 FFF7FEFF 		bl	RTC_1_LeapYear
 2737 001c 031E     		subs	r3, r0, #0
 2738 001e 05D1     		bne	.L155
 2739              		.loc 2 1611 0 is_stmt 0 discriminator 1
 2740 0020 7B68     		ldr	r3, [r7, #4]
 2741 0022 022B     		cmp	r3, #2
 2742 0024 02D9     		bls	.L155
1612:Generated_Source\PSoC4/RTC_1.c ****     {
1613:Generated_Source\PSoC4/RTC_1.c ****         retVal++;
 2743              		.loc 2 1613 0 is_stmt 1
 2744 0026 FB68     		ldr	r3, [r7, #12]
 2745 0028 0133     		adds	r3, r3, #1
 2746 002a FB60     		str	r3, [r7, #12]
 2747              	.L155:
1614:Generated_Source\PSoC4/RTC_1.c ****     }
1615:Generated_Source\PSoC4/RTC_1.c **** 
1616:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 2748              		.loc 2 1616 0
 2749 002c FB68     		ldr	r3, [r7, #12]
1617:Generated_Source\PSoC4/RTC_1.c **** }
 2750              		.loc 2 1617 0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 100


 2751 002e 1800     		movs	r0, r3
 2752 0030 BD46     		mov	sp, r7
 2753 0032 04B0     		add	sp, sp, #16
 2754              		@ sp needed
 2755 0034 80BD     		pop	{r7, pc}
 2756              	.L158:
 2757 0036 C046     		.align	2
 2758              	.L157:
 2759 0038 00000000 		.word	RTC_1_daysBeforeMonthTbl
 2760              		.cfi_endproc
 2761              	.LFE50:
 2762              		.size	RTC_1_DaysBeforeMonth, .-RTC_1_DaysBeforeMonth
 2763              		.bss
 2764              		.align	2
 2765              	RTC_1_currentTickNumber.5224:
 2766 000c 00000000 		.space	4
 2767              		.text
 2768              	.Letext0:
 2769              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 2770              		.section	.debug_info,"",%progbits
 2771              	.Ldebug_info0:
 2772 0000 A50A0000 		.4byte	0xaa5
 2773 0004 0400     		.2byte	0x4
 2774 0006 00000000 		.4byte	.Ldebug_abbrev0
 2775 000a 04       		.byte	0x4
 2776 000b 01       		.uleb128 0x1
 2777 000c 1E030000 		.4byte	.LASF105
 2778 0010 0C       		.byte	0xc
 2779 0011 13010000 		.4byte	.LASF106
 2780 0015 E0010000 		.4byte	.LASF107
 2781 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2782 001d 00000000 		.4byte	0
 2783 0021 00000000 		.4byte	.Ldebug_line0
 2784 0025 02       		.uleb128 0x2
 2785 0026 01       		.byte	0x1
 2786 0027 06       		.byte	0x6
 2787 0028 45000000 		.4byte	.LASF0
 2788 002c 02       		.uleb128 0x2
 2789 002d 01       		.byte	0x1
 2790 002e 08       		.byte	0x8
 2791 002f E2040000 		.4byte	.LASF1
 2792 0033 02       		.uleb128 0x2
 2793 0034 02       		.byte	0x2
 2794 0035 05       		.byte	0x5
 2795 0036 01050000 		.4byte	.LASF2
 2796 003a 02       		.uleb128 0x2
 2797 003b 02       		.byte	0x2
 2798 003c 07       		.byte	0x7
 2799 003d A9020000 		.4byte	.LASF3
 2800 0041 02       		.uleb128 0x2
 2801 0042 04       		.byte	0x4
 2802 0043 05       		.byte	0x5
 2803 0044 57010000 		.4byte	.LASF4
 2804 0048 02       		.uleb128 0x2
 2805 0049 04       		.byte	0x4
 2806 004a 07       		.byte	0x7
 2807 004b 87020000 		.4byte	.LASF5
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 101


 2808 004f 02       		.uleb128 0x2
 2809 0050 08       		.byte	0x8
 2810 0051 05       		.byte	0x5
 2811 0052 05010000 		.4byte	.LASF6
 2812 0056 02       		.uleb128 0x2
 2813 0057 08       		.byte	0x8
 2814 0058 07       		.byte	0x7
 2815 0059 86000000 		.4byte	.LASF7
 2816 005d 03       		.uleb128 0x3
 2817 005e 04       		.byte	0x4
 2818 005f 05       		.byte	0x5
 2819 0060 696E7400 		.ascii	"int\000"
 2820 0064 02       		.uleb128 0x2
 2821 0065 04       		.byte	0x4
 2822 0066 07       		.byte	0x7
 2823 0067 26020000 		.4byte	.LASF8
 2824 006b 04       		.uleb128 0x4
 2825 006c 76010000 		.4byte	.LASF9
 2826 0070 03       		.byte	0x3
 2827 0071 D201     		.2byte	0x1d2
 2828 0073 2C000000 		.4byte	0x2c
 2829 0077 04       		.uleb128 0x4
 2830 0078 10000000 		.4byte	.LASF10
 2831 007c 03       		.byte	0x3
 2832 007d D301     		.2byte	0x1d3
 2833 007f 3A000000 		.4byte	0x3a
 2834 0083 04       		.uleb128 0x4
 2835 0084 AD010000 		.4byte	.LASF11
 2836 0088 03       		.byte	0x3
 2837 0089 D401     		.2byte	0x1d4
 2838 008b 48000000 		.4byte	0x48
 2839 008f 02       		.uleb128 0x2
 2840 0090 04       		.byte	0x4
 2841 0091 04       		.byte	0x4
 2842 0092 B0040000 		.4byte	.LASF12
 2843 0096 02       		.uleb128 0x2
 2844 0097 08       		.byte	0x8
 2845 0098 04       		.byte	0x4
 2846 0099 A0010000 		.4byte	.LASF13
 2847 009d 04       		.uleb128 0x4
 2848 009e FA040000 		.4byte	.LASF14
 2849 00a2 03       		.byte	0x3
 2850 00a3 DE01     		.2byte	0x1de
 2851 00a5 56000000 		.4byte	0x56
 2852 00a9 02       		.uleb128 0x2
 2853 00aa 01       		.byte	0x1
 2854 00ab 08       		.byte	0x8
 2855 00ac 75050000 		.4byte	.LASF15
 2856 00b0 05       		.uleb128 0x5
 2857 00b1 83000000 		.4byte	0x83
 2858 00b5 02       		.uleb128 0x2
 2859 00b6 08       		.byte	0x8
 2860 00b7 04       		.byte	0x4
 2861 00b8 22040000 		.4byte	.LASF16
 2862 00bc 02       		.uleb128 0x2
 2863 00bd 04       		.byte	0x4
 2864 00be 07       		.byte	0x7
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 102


 2865 00bf 13040000 		.4byte	.LASF17
 2866 00c3 06       		.uleb128 0x6
 2867 00c4 10       		.byte	0x10
 2868 00c5 01       		.byte	0x1
 2869 00c6 29       		.byte	0x29
 2870 00c7 FC000000 		.4byte	0xfc
 2871 00cb 07       		.uleb128 0x7
 2872 00cc 6F040000 		.4byte	.LASF18
 2873 00d0 01       		.byte	0x1
 2874 00d1 2B       		.byte	0x2b
 2875 00d2 83000000 		.4byte	0x83
 2876 00d6 00       		.byte	0
 2877 00d7 07       		.uleb128 0x7
 2878 00d8 BC020000 		.4byte	.LASF19
 2879 00dc 01       		.byte	0x1
 2880 00dd 2C       		.byte	0x2c
 2881 00de 83000000 		.4byte	0x83
 2882 00e2 04       		.byte	0x4
 2883 00e3 07       		.uleb128 0x7
 2884 00e4 D3030000 		.4byte	.LASF20
 2885 00e8 01       		.byte	0x1
 2886 00e9 2D       		.byte	0x2d
 2887 00ea 83000000 		.4byte	0x83
 2888 00ee 08       		.byte	0x8
 2889 00ef 07       		.uleb128 0x7
 2890 00f0 D9050000 		.4byte	.LASF21
 2891 00f4 01       		.byte	0x1
 2892 00f5 2E       		.byte	0x2e
 2893 00f6 83000000 		.4byte	0x83
 2894 00fa 0C       		.byte	0xc
 2895 00fb 00       		.byte	0
 2896 00fc 08       		.uleb128 0x8
 2897 00fd 3C060000 		.4byte	.LASF22
 2898 0101 01       		.byte	0x1
 2899 0102 2F       		.byte	0x2f
 2900 0103 C3000000 		.4byte	0xc3
 2901 0107 09       		.uleb128 0x9
 2902 0108 CA000000 		.4byte	.LASF24
 2903 010c 01       		.byte	0x1
 2904 010d BA01     		.2byte	0x1ba
 2905 010f 83000000 		.4byte	0x83
 2906 0113 00000000 		.4byte	.LFB2
 2907 0117 24000000 		.4byte	.LFE2-.LFB2
 2908 011b 01       		.uleb128 0x1
 2909 011c 9C       		.byte	0x9c
 2910 011d 40010000 		.4byte	0x140
 2911 0121 0A       		.uleb128 0xa
 2912 0122 76617200 		.ascii	"var\000"
 2913 0126 01       		.byte	0x1
 2914 0127 BA01     		.2byte	0x1ba
 2915 0129 83000000 		.4byte	0x83
 2916 012d 02       		.uleb128 0x2
 2917 012e 91       		.byte	0x91
 2918 012f 74       		.sleb128 -12
 2919 0130 0B       		.uleb128 0xb
 2920 0131 BE010000 		.4byte	.LASF23
 2921 0135 01       		.byte	0x1
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 103


 2922 0136 BA01     		.2byte	0x1ba
 2923 0138 83000000 		.4byte	0x83
 2924 013c 02       		.uleb128 0x2
 2925 013d 91       		.byte	0x91
 2926 013e 70       		.sleb128 -16
 2927 013f 00       		.byte	0
 2928 0140 0C       		.uleb128 0xc
 2929 0141 C1020000 		.4byte	.LASF25
 2930 0145 01       		.byte	0x1
 2931 0146 D201     		.2byte	0x1d2
 2932 0148 83000000 		.4byte	0x83
 2933 014c 00000000 		.4byte	.LFB3
 2934 0150 42000000 		.4byte	.LFE3-.LFB3
 2935 0154 01       		.uleb128 0x1
 2936 0155 9C       		.byte	0x9c
 2937 0156 79010000 		.4byte	0x179
 2938 015a 0B       		.uleb128 0xb
 2939 015b 52010000 		.4byte	.LASF26
 2940 015f 01       		.byte	0x1
 2941 0160 D201     		.2byte	0x1d2
 2942 0162 83000000 		.4byte	0x83
 2943 0166 02       		.uleb128 0x2
 2944 0167 91       		.byte	0x91
 2945 0168 6C       		.sleb128 -20
 2946 0169 0D       		.uleb128 0xd
 2947 016a 17000000 		.4byte	.LASF29
 2948 016e 01       		.byte	0x1
 2949 016f D401     		.2byte	0x1d4
 2950 0171 83000000 		.4byte	0x83
 2951 0175 02       		.uleb128 0x2
 2952 0176 91       		.byte	0x91
 2953 0177 74       		.sleb128 -12
 2954 0178 00       		.byte	0
 2955 0179 09       		.uleb128 0x9
 2956 017a 37050000 		.4byte	.LASF27
 2957 017e 01       		.byte	0x1
 2958 017f F101     		.2byte	0x1f1
 2959 0181 83000000 		.4byte	0x83
 2960 0185 00000000 		.4byte	.LFB4
 2961 0189 30000000 		.4byte	.LFE4-.LFB4
 2962 018d 01       		.uleb128 0x1
 2963 018e 9C       		.byte	0x9c
 2964 018f B2010000 		.4byte	0x1b2
 2965 0193 0B       		.uleb128 0xb
 2966 0194 F0040000 		.4byte	.LASF28
 2967 0198 01       		.byte	0x1
 2968 0199 F101     		.2byte	0x1f1
 2969 019b 83000000 		.4byte	0x83
 2970 019f 02       		.uleb128 0x2
 2971 01a0 91       		.byte	0x91
 2972 01a1 6C       		.sleb128 -20
 2973 01a2 0D       		.uleb128 0xd
 2974 01a3 17000000 		.4byte	.LASF29
 2975 01a7 01       		.byte	0x1
 2976 01a8 F301     		.2byte	0x1f3
 2977 01aa 83000000 		.4byte	0x83
 2978 01ae 02       		.uleb128 0x2
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 104


 2979 01af 91       		.byte	0x91
 2980 01b0 74       		.sleb128 -12
 2981 01b1 00       		.byte	0
 2982 01b2 09       		.uleb128 0x9
 2983 01b3 32010000 		.4byte	.LASF30
 2984 01b7 01       		.byte	0x1
 2985 01b8 0B02     		.2byte	0x20b
 2986 01ba 83000000 		.4byte	0x83
 2987 01be 00000000 		.4byte	.LFB5
 2988 01c2 32000000 		.4byte	.LFE5-.LFB5
 2989 01c6 01       		.uleb128 0x1
 2990 01c7 9C       		.byte	0x9c
 2991 01c8 EB010000 		.4byte	0x1eb
 2992 01cc 0B       		.uleb128 0xb
 2993 01cd F0040000 		.4byte	.LASF28
 2994 01d1 01       		.byte	0x1
 2995 01d2 0B02     		.2byte	0x20b
 2996 01d4 83000000 		.4byte	0x83
 2997 01d8 02       		.uleb128 0x2
 2998 01d9 91       		.byte	0x91
 2999 01da 6C       		.sleb128 -20
 3000 01db 0D       		.uleb128 0xd
 3001 01dc 17000000 		.4byte	.LASF29
 3002 01e0 01       		.byte	0x1
 3003 01e1 0D02     		.2byte	0x20d
 3004 01e3 83000000 		.4byte	0x83
 3005 01e7 02       		.uleb128 0x2
 3006 01e8 91       		.byte	0x91
 3007 01e9 74       		.sleb128 -12
 3008 01ea 00       		.byte	0
 3009 01eb 09       		.uleb128 0x9
 3010 01ec C3010000 		.4byte	.LASF31
 3011 01f0 01       		.byte	0x1
 3012 01f1 2402     		.2byte	0x224
 3013 01f3 83000000 		.4byte	0x83
 3014 01f7 00000000 		.4byte	.LFB6
 3015 01fb 32000000 		.4byte	.LFE6-.LFB6
 3016 01ff 01       		.uleb128 0x1
 3017 0200 9C       		.byte	0x9c
 3018 0201 24020000 		.4byte	0x224
 3019 0205 0B       		.uleb128 0xb
 3020 0206 F0040000 		.4byte	.LASF28
 3021 020a 01       		.byte	0x1
 3022 020b 2402     		.2byte	0x224
 3023 020d 83000000 		.4byte	0x83
 3024 0211 02       		.uleb128 0x2
 3025 0212 91       		.byte	0x91
 3026 0213 6C       		.sleb128 -20
 3027 0214 0D       		.uleb128 0xd
 3028 0215 17000000 		.4byte	.LASF29
 3029 0219 01       		.byte	0x1
 3030 021a 2602     		.2byte	0x226
 3031 021c 83000000 		.4byte	0x83
 3032 0220 02       		.uleb128 0x2
 3033 0221 91       		.byte	0x91
 3034 0222 74       		.sleb128 -12
 3035 0223 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 105


 3036 0224 0C       		.uleb128 0xc
 3037 0225 92010000 		.4byte	.LASF32
 3038 0229 01       		.byte	0x1
 3039 022a 3F02     		.2byte	0x23f
 3040 022c 83000000 		.4byte	0x83
 3041 0230 00000000 		.4byte	.LFB7
 3042 0234 20000000 		.4byte	.LFE7-.LFB7
 3043 0238 01       		.uleb128 0x1
 3044 0239 9C       		.byte	0x9c
 3045 023a 4E020000 		.4byte	0x24e
 3046 023e 0B       		.uleb128 0xb
 3047 023f F0040000 		.4byte	.LASF28
 3048 0243 01       		.byte	0x1
 3049 0244 3F02     		.2byte	0x23f
 3050 0246 83000000 		.4byte	0x83
 3051 024a 02       		.uleb128 0x2
 3052 024b 91       		.byte	0x91
 3053 024c 74       		.sleb128 -12
 3054 024d 00       		.byte	0
 3055 024e 09       		.uleb128 0x9
 3056 024f B6040000 		.4byte	.LASF33
 3057 0253 01       		.byte	0x1
 3058 0254 5302     		.2byte	0x253
 3059 0256 83000000 		.4byte	0x83
 3060 025a 00000000 		.4byte	.LFB8
 3061 025e 32000000 		.4byte	.LFE8-.LFB8
 3062 0262 01       		.uleb128 0x1
 3063 0263 9C       		.byte	0x9c
 3064 0264 87020000 		.4byte	0x287
 3065 0268 0B       		.uleb128 0xb
 3066 0269 BC020000 		.4byte	.LASF19
 3067 026d 01       		.byte	0x1
 3068 026e 5302     		.2byte	0x253
 3069 0270 83000000 		.4byte	0x83
 3070 0274 02       		.uleb128 0x2
 3071 0275 91       		.byte	0x91
 3072 0276 6C       		.sleb128 -20
 3073 0277 0D       		.uleb128 0xd
 3074 0278 17000000 		.4byte	.LASF29
 3075 027c 01       		.byte	0x1
 3076 027d 5502     		.2byte	0x255
 3077 027f 83000000 		.4byte	0x83
 3078 0283 02       		.uleb128 0x2
 3079 0284 91       		.byte	0x91
 3080 0285 74       		.sleb128 -12
 3081 0286 00       		.byte	0
 3082 0287 09       		.uleb128 0x9
 3083 0288 43010000 		.4byte	.LASF34
 3084 028c 01       		.byte	0x1
 3085 028d 6C02     		.2byte	0x26c
 3086 028f 83000000 		.4byte	0x83
 3087 0293 00000000 		.4byte	.LFB9
 3088 0297 32000000 		.4byte	.LFE9-.LFB9
 3089 029b 01       		.uleb128 0x1
 3090 029c 9C       		.byte	0x9c
 3091 029d C0020000 		.4byte	0x2c0
 3092 02a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 106


 3093 02a2 BC020000 		.4byte	.LASF19
 3094 02a6 01       		.byte	0x1
 3095 02a7 6C02     		.2byte	0x26c
 3096 02a9 83000000 		.4byte	0x83
 3097 02ad 02       		.uleb128 0x2
 3098 02ae 91       		.byte	0x91
 3099 02af 6C       		.sleb128 -20
 3100 02b0 0D       		.uleb128 0xd
 3101 02b1 17000000 		.4byte	.LASF29
 3102 02b5 01       		.byte	0x1
 3103 02b6 6E02     		.2byte	0x26e
 3104 02b8 83000000 		.4byte	0x83
 3105 02bc 02       		.uleb128 0x2
 3106 02bd 91       		.byte	0x91
 3107 02be 74       		.sleb128 -12
 3108 02bf 00       		.byte	0
 3109 02c0 09       		.uleb128 0x9
 3110 02c1 D2010000 		.4byte	.LASF35
 3111 02c5 01       		.byte	0x1
 3112 02c6 8502     		.2byte	0x285
 3113 02c8 83000000 		.4byte	0x83
 3114 02cc 00000000 		.4byte	.LFB10
 3115 02d0 58000000 		.4byte	.LFE10-.LFB10
 3116 02d4 01       		.uleb128 0x1
 3117 02d5 9C       		.byte	0x9c
 3118 02d6 F9020000 		.4byte	0x2f9
 3119 02da 0B       		.uleb128 0xb
 3120 02db BC020000 		.4byte	.LASF19
 3121 02df 01       		.byte	0x1
 3122 02e0 8502     		.2byte	0x285
 3123 02e2 83000000 		.4byte	0x83
 3124 02e6 02       		.uleb128 0x2
 3125 02e7 91       		.byte	0x91
 3126 02e8 6C       		.sleb128 -20
 3127 02e9 0D       		.uleb128 0xd
 3128 02ea 17000000 		.4byte	.LASF29
 3129 02ee 01       		.byte	0x1
 3130 02ef 8702     		.2byte	0x287
 3131 02f1 83000000 		.4byte	0x83
 3132 02f5 02       		.uleb128 0x2
 3133 02f6 91       		.byte	0x91
 3134 02f7 74       		.sleb128 -12
 3135 02f8 00       		.byte	0
 3136 02f9 09       		.uleb128 0x9
 3137 02fa 79040000 		.4byte	.LASF36
 3138 02fe 01       		.byte	0x1
 3139 02ff 0304     		.2byte	0x403
 3140 0301 83000000 		.4byte	0x83
 3141 0305 00000000 		.4byte	.LFB24
 3142 0309 20000000 		.4byte	.LFE24-.LFB24
 3143 030d 01       		.uleb128 0x1
 3144 030e 9C       		.byte	0x9c
 3145 030f 23030000 		.4byte	0x323
 3146 0313 0B       		.uleb128 0xb
 3147 0314 F0040000 		.4byte	.LASF28
 3148 0318 01       		.byte	0x1
 3149 0319 0304     		.2byte	0x403
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 107


 3150 031b 83000000 		.4byte	0x83
 3151 031f 02       		.uleb128 0x2
 3152 0320 91       		.byte	0x91
 3153 0321 74       		.sleb128 -12
 3154 0322 00       		.byte	0
 3155 0323 0C       		.uleb128 0xc
 3156 0324 EE050000 		.4byte	.LASF37
 3157 0328 01       		.byte	0x1
 3158 0329 2904     		.2byte	0x429
 3159 032b 83000000 		.4byte	0x83
 3160 032f 00000000 		.4byte	.LFB25
 3161 0333 A0000000 		.4byte	.LFE25-.LFB25
 3162 0337 01       		.uleb128 0x1
 3163 0338 9C       		.byte	0x9c
 3164 0339 98030000 		.4byte	0x398
 3165 033d 0B       		.uleb128 0xb
 3166 033e 33020000 		.4byte	.LASF38
 3167 0342 01       		.byte	0x1
 3168 0343 2904     		.2byte	0x429
 3169 0345 83000000 		.4byte	0x83
 3170 0349 02       		.uleb128 0x2
 3171 034a 91       		.byte	0x91
 3172 034b 6C       		.sleb128 -20
 3173 034c 0B       		.uleb128 0xb
 3174 034d D8040000 		.4byte	.LASF39
 3175 0351 01       		.byte	0x1
 3176 0352 2904     		.2byte	0x429
 3177 0354 83000000 		.4byte	0x83
 3178 0358 02       		.uleb128 0x2
 3179 0359 91       		.byte	0x91
 3180 035a 68       		.sleb128 -24
 3181 035b 0B       		.uleb128 0xb
 3182 035c 74040000 		.4byte	.LASF40
 3183 0360 01       		.byte	0x1
 3184 0361 2904     		.2byte	0x429
 3185 0363 83000000 		.4byte	0x83
 3186 0367 02       		.uleb128 0x2
 3187 0368 91       		.byte	0x91
 3188 0369 64       		.sleb128 -28
 3189 036a 0A       		.uleb128 0xa
 3190 036b 6D696E00 		.ascii	"min\000"
 3191 036f 01       		.byte	0x1
 3192 0370 2904     		.2byte	0x429
 3193 0372 83000000 		.4byte	0x83
 3194 0376 02       		.uleb128 0x2
 3195 0377 91       		.byte	0x91
 3196 0378 60       		.sleb128 -32
 3197 0379 0A       		.uleb128 0xa
 3198 037a 73656300 		.ascii	"sec\000"
 3199 037e 01       		.byte	0x1
 3200 037f 2904     		.2byte	0x429
 3201 0381 83000000 		.4byte	0x83
 3202 0385 02       		.uleb128 0x2
 3203 0386 91       		.byte	0x91
 3204 0387 00       		.sleb128 0
 3205 0388 0D       		.uleb128 0xd
 3206 0389 17000000 		.4byte	.LASF29
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 108


 3207 038d 01       		.byte	0x1
 3208 038e 2B04     		.2byte	0x42b
 3209 0390 83000000 		.4byte	0x83
 3210 0394 02       		.uleb128 0x2
 3211 0395 91       		.byte	0x91
 3212 0396 74       		.sleb128 -12
 3213 0397 00       		.byte	0
 3214 0398 0C       		.uleb128 0xc
 3215 0399 29000000 		.4byte	.LASF41
 3216 039d 01       		.byte	0x1
 3217 039e 5204     		.2byte	0x452
 3218 03a0 83000000 		.4byte	0x83
 3219 03a4 00000000 		.4byte	.LFB26
 3220 03a8 D6000000 		.4byte	.LFE26-.LFB26
 3221 03ac 01       		.uleb128 0x1
 3222 03ad 9C       		.byte	0x9c
 3223 03ae FE030000 		.4byte	0x3fe
 3224 03b2 0B       		.uleb128 0xb
 3225 03b3 20020000 		.4byte	.LASF42
 3226 03b7 01       		.byte	0x1
 3227 03b8 5204     		.2byte	0x452
 3228 03ba 83000000 		.4byte	0x83
 3229 03be 02       		.uleb128 0x2
 3230 03bf 91       		.byte	0x91
 3231 03c0 6C       		.sleb128 -20
 3232 03c1 0A       		.uleb128 0xa
 3233 03c2 64617900 		.ascii	"day\000"
 3234 03c6 01       		.byte	0x1
 3235 03c7 5204     		.2byte	0x452
 3236 03c9 83000000 		.4byte	0x83
 3237 03cd 02       		.uleb128 0x2
 3238 03ce 91       		.byte	0x91
 3239 03cf 68       		.sleb128 -24
 3240 03d0 0B       		.uleb128 0xb
 3241 03d1 52010000 		.4byte	.LASF26
 3242 03d5 01       		.byte	0x1
 3243 03d6 5204     		.2byte	0x452
 3244 03d8 83000000 		.4byte	0x83
 3245 03dc 02       		.uleb128 0x2
 3246 03dd 91       		.byte	0x91
 3247 03de 64       		.sleb128 -28
 3248 03df 0D       		.uleb128 0xd
 3249 03e0 17000000 		.4byte	.LASF29
 3250 03e4 01       		.byte	0x1
 3251 03e5 5404     		.2byte	0x454
 3252 03e7 83000000 		.4byte	0x83
 3253 03eb 02       		.uleb128 0x2
 3254 03ec 91       		.byte	0x91
 3255 03ed 70       		.sleb128 -16
 3256 03ee 0D       		.uleb128 0xd
 3257 03ef 47050000 		.4byte	.LASF43
 3258 03f3 01       		.byte	0x1
 3259 03f4 5504     		.2byte	0x455
 3260 03f6 83000000 		.4byte	0x83
 3261 03fa 02       		.uleb128 0x2
 3262 03fb 91       		.byte	0x91
 3263 03fc 74       		.sleb128 -12
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 109


 3264 03fd 00       		.byte	0
 3265 03fe 0C       		.uleb128 0xc
 3266 03ff 8D040000 		.4byte	.LASF44
 3267 0403 01       		.byte	0x1
 3268 0404 A404     		.2byte	0x4a4
 3269 0406 83000000 		.4byte	0x83
 3270 040a 00000000 		.4byte	.LFB27
 3271 040e 88000000 		.4byte	.LFE27-.LFB27
 3272 0412 01       		.uleb128 0x1
 3273 0413 9C       		.byte	0x9c
 3274 0414 55040000 		.4byte	0x455
 3275 0418 0A       		.uleb128 0xa
 3276 0419 64617900 		.ascii	"day\000"
 3277 041d 01       		.byte	0x1
 3278 041e A404     		.2byte	0x4a4
 3279 0420 83000000 		.4byte	0x83
 3280 0424 02       		.uleb128 0x2
 3281 0425 91       		.byte	0x91
 3282 0426 64       		.sleb128 -28
 3283 0427 0B       		.uleb128 0xb
 3284 0428 20020000 		.4byte	.LASF42
 3285 042c 01       		.byte	0x1
 3286 042d A404     		.2byte	0x4a4
 3287 042f 83000000 		.4byte	0x83
 3288 0433 02       		.uleb128 0x2
 3289 0434 91       		.byte	0x91
 3290 0435 60       		.sleb128 -32
 3291 0436 0B       		.uleb128 0xb
 3292 0437 52010000 		.4byte	.LASF26
 3293 043b 01       		.byte	0x1
 3294 043c A404     		.2byte	0x4a4
 3295 043e 83000000 		.4byte	0x83
 3296 0442 02       		.uleb128 0x2
 3297 0443 91       		.byte	0x91
 3298 0444 5C       		.sleb128 -36
 3299 0445 0D       		.uleb128 0xd
 3300 0446 17000000 		.4byte	.LASF29
 3301 044a 01       		.byte	0x1
 3302 044b A604     		.2byte	0x4a6
 3303 044d 83000000 		.4byte	0x83
 3304 0451 02       		.uleb128 0x2
 3305 0452 91       		.byte	0x91
 3306 0453 6C       		.sleb128 -20
 3307 0454 00       		.byte	0
 3308 0455 0E       		.uleb128 0xe
 3309 0456 0B050000 		.4byte	.LASF46
 3310 045a 01       		.byte	0x1
 3311 045b D404     		.2byte	0x4d4
 3312 045d 00000000 		.4byte	.LFB28
 3313 0461 20000000 		.4byte	.LFE28-.LFB28
 3314 0465 01       		.uleb128 0x1
 3315 0466 9C       		.byte	0x9c
 3316 0467 7B040000 		.4byte	0x47b
 3317 046b 0B       		.uleb128 0xb
 3318 046c B4010000 		.4byte	.LASF45
 3319 0470 01       		.byte	0x1
 3320 0471 D404     		.2byte	0x4d4
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 110


 3321 0473 83000000 		.4byte	0x83
 3322 0477 02       		.uleb128 0x2
 3323 0478 91       		.byte	0x91
 3324 0479 74       		.sleb128 -12
 3325 047a 00       		.byte	0
 3326 047b 0E       		.uleb128 0xe
 3327 047c 4C060000 		.4byte	.LASF47
 3328 0480 01       		.byte	0x1
 3329 0481 EC04     		.2byte	0x4ec
 3330 0483 00000000 		.4byte	.LFB29
 3331 0487 1A000000 		.4byte	.LFE29-.LFB29
 3332 048b 01       		.uleb128 0x1
 3333 048c 9C       		.byte	0x9c
 3334 048d A1040000 		.4byte	0x4a1
 3335 0491 0B       		.uleb128 0xb
 3336 0492 B4010000 		.4byte	.LASF45
 3337 0496 01       		.byte	0x1
 3338 0497 EC04     		.2byte	0x4ec
 3339 0499 83000000 		.4byte	0x83
 3340 049d 02       		.uleb128 0x2
 3341 049e 91       		.byte	0x91
 3342 049f 74       		.sleb128 -12
 3343 04a0 00       		.byte	0
 3344 04a1 0F       		.uleb128 0xf
 3345 04a2 5B040000 		.4byte	.LASF48
 3346 04a6 02       		.byte	0x2
 3347 04a7 5A       		.byte	0x5a
 3348 04a8 00000000 		.4byte	.LFB30
 3349 04ac 20000000 		.4byte	.LFE30-.LFB30
 3350 04b0 01       		.uleb128 0x1
 3351 04b1 9C       		.byte	0x9c
 3352 04b2 0F       		.uleb128 0xf
 3353 04b3 1E000000 		.4byte	.LASF49
 3354 04b7 02       		.byte	0x2
 3355 04b8 71       		.byte	0x71
 3356 04b9 00000000 		.4byte	.LFB31
 3357 04bd 10000000 		.4byte	.LFE31-.LFB31
 3358 04c1 01       		.uleb128 0x1
 3359 04c2 9C       		.byte	0x9c
 3360 04c3 10       		.uleb128 0x10
 3361 04c4 F7020000 		.4byte	.LASF52
 3362 04c8 02       		.byte	0x2
 3363 04c9 8C       		.byte	0x8c
 3364 04ca 00000000 		.4byte	.LFB32
 3365 04ce 74000000 		.4byte	.LFE32-.LFB32
 3366 04d2 01       		.uleb128 0x1
 3367 04d3 9C       		.byte	0x9c
 3368 04d4 F5040000 		.4byte	0x4f5
 3369 04d8 11       		.uleb128 0x11
 3370 04d9 3D000000 		.4byte	.LASF50
 3371 04dd 02       		.byte	0x2
 3372 04de 8E       		.byte	0x8e
 3373 04df 83000000 		.4byte	0x83
 3374 04e3 02       		.uleb128 0x2
 3375 04e4 91       		.byte	0x91
 3376 04e5 74       		.sleb128 -12
 3377 04e6 11       		.uleb128 0x11
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 111


 3378 04e7 14060000 		.4byte	.LASF51
 3379 04eb 02       		.byte	0x2
 3380 04ec 8F       		.byte	0x8f
 3381 04ed 83000000 		.4byte	0x83
 3382 04f1 02       		.uleb128 0x2
 3383 04f2 91       		.byte	0x91
 3384 04f3 70       		.sleb128 -16
 3385 04f4 00       		.byte	0
 3386 04f5 10       		.uleb128 0x10
 3387 04f6 C3040000 		.4byte	.LASF53
 3388 04fa 02       		.byte	0x2
 3389 04fb E5       		.byte	0xe5
 3390 04fc 00000000 		.4byte	.LFB33
 3391 0500 74000000 		.4byte	.LFE33-.LFB33
 3392 0504 01       		.uleb128 0x1
 3393 0505 9C       		.byte	0x9c
 3394 0506 51050000 		.4byte	0x551
 3395 050a 12       		.uleb128 0x12
 3396 050b F0040000 		.4byte	.LASF28
 3397 050f 02       		.byte	0x2
 3398 0510 E5       		.byte	0xe5
 3399 0511 83000000 		.4byte	0x83
 3400 0515 02       		.uleb128 0x2
 3401 0516 91       		.byte	0x91
 3402 0517 5C       		.sleb128 -36
 3403 0518 12       		.uleb128 0x12
 3404 0519 7F050000 		.4byte	.LASF54
 3405 051d 02       		.byte	0x2
 3406 051e E5       		.byte	0xe5
 3407 051f 83000000 		.4byte	0x83
 3408 0523 02       		.uleb128 0x2
 3409 0524 91       		.byte	0x91
 3410 0525 58       		.sleb128 -40
 3411 0526 11       		.uleb128 0x11
 3412 0527 09000000 		.4byte	.LASF55
 3413 052b 02       		.byte	0x2
 3414 052c E7       		.byte	0xe7
 3415 052d 83000000 		.4byte	0x83
 3416 0531 02       		.uleb128 0x2
 3417 0532 91       		.byte	0x91
 3418 0533 6C       		.sleb128 -20
 3419 0534 11       		.uleb128 0x11
 3420 0535 C1000000 		.4byte	.LASF56
 3421 0539 02       		.byte	0x2
 3422 053a E8       		.byte	0xe8
 3423 053b 83000000 		.4byte	0x83
 3424 053f 02       		.uleb128 0x2
 3425 0540 91       		.byte	0x91
 3426 0541 68       		.sleb128 -24
 3427 0542 11       		.uleb128 0x11
 3428 0543 53040000 		.4byte	.LASF57
 3429 0547 02       		.byte	0x2
 3430 0548 E9       		.byte	0xe9
 3431 0549 83000000 		.4byte	0x83
 3432 054d 02       		.uleb128 0x2
 3433 054e 91       		.byte	0x91
 3434 054f 64       		.sleb128 -28
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 112


 3435 0550 00       		.byte	0
 3436 0551 13       		.uleb128 0x13
 3437 0552 25050000 		.4byte	.LASF58
 3438 0556 02       		.byte	0x2
 3439 0557 1901     		.2byte	0x119
 3440 0559 00000000 		.4byte	.LFB34
 3441 055d 38000000 		.4byte	.LFE34-.LFB34
 3442 0561 01       		.uleb128 0x1
 3443 0562 9C       		.byte	0x9c
 3444 0563 86050000 		.4byte	0x586
 3445 0567 0B       		.uleb128 0xb
 3446 0568 D0050000 		.4byte	.LASF59
 3447 056c 02       		.byte	0x2
 3448 056d 1901     		.2byte	0x119
 3449 056f 9D000000 		.4byte	0x9d
 3450 0573 02       		.uleb128 0x2
 3451 0574 91       		.byte	0x91
 3452 0575 58       		.sleb128 -40
 3453 0576 0D       		.uleb128 0xd
 3454 0577 1C060000 		.4byte	.LASF60
 3455 057b 02       		.byte	0x2
 3456 057c 1B01     		.2byte	0x11b
 3457 057e FC000000 		.4byte	0xfc
 3458 0582 02       		.uleb128 0x2
 3459 0583 91       		.byte	0x91
 3460 0584 60       		.sleb128 -32
 3461 0585 00       		.byte	0
 3462 0586 14       		.uleb128 0x14
 3463 0587 D0020000 		.4byte	.LASF64
 3464 058b 02       		.byte	0x2
 3465 058c 3E01     		.2byte	0x13e
 3466 058e 9D000000 		.4byte	0x9d
 3467 0592 00000000 		.4byte	.LFB35
 3468 0596 18000000 		.4byte	.LFE35-.LFB35
 3469 059a 01       		.uleb128 0x1
 3470 059b 9C       		.byte	0x9c
 3471 059c 15       		.uleb128 0x15
 3472 059d 99020000 		.4byte	.LASF61
 3473 05a1 02       		.byte	0x2
 3474 05a2 5A01     		.2byte	0x15a
 3475 05a4 00000000 		.4byte	.LFB36
 3476 05a8 28000000 		.4byte	.LFE36-.LFB36
 3477 05ac 01       		.uleb128 0x1
 3478 05ad 9C       		.byte	0x9c
 3479 05ae D1050000 		.4byte	0x5d1
 3480 05b2 0B       		.uleb128 0xb
 3481 05b3 1C040000 		.4byte	.LASF62
 3482 05b7 02       		.byte	0x2
 3483 05b8 5A01     		.2byte	0x15a
 3484 05ba 83000000 		.4byte	0x83
 3485 05be 02       		.uleb128 0x2
 3486 05bf 91       		.byte	0x91
 3487 05c0 74       		.sleb128 -12
 3488 05c1 0B       		.uleb128 0xb
 3489 05c2 7C010000 		.4byte	.LASF63
 3490 05c6 02       		.byte	0x2
 3491 05c7 5A01     		.2byte	0x15a
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 113


 3492 05c9 83000000 		.4byte	0x83
 3493 05cd 02       		.uleb128 0x2
 3494 05ce 91       		.byte	0x91
 3495 05cf 70       		.sleb128 -16
 3496 05d0 00       		.byte	0
 3497 05d1 14       		.uleb128 0x14
 3498 05d2 A0040000 		.4byte	.LASF65
 3499 05d6 02       		.byte	0x2
 3500 05d7 6B01     		.2byte	0x16b
 3501 05d9 83000000 		.4byte	0x83
 3502 05dd 00000000 		.4byte	.LFB37
 3503 05e1 14000000 		.4byte	.LFE37-.LFB37
 3504 05e5 01       		.uleb128 0x1
 3505 05e6 9C       		.byte	0x9c
 3506 05e7 14       		.uleb128 0x14
 3507 05e8 EB030000 		.4byte	.LASF66
 3508 05ec 02       		.byte	0x2
 3509 05ed 7C01     		.2byte	0x17c
 3510 05ef 83000000 		.4byte	0x83
 3511 05f3 00000000 		.4byte	.LFB38
 3512 05f7 14000000 		.4byte	.LFE38-.LFB38
 3513 05fb 01       		.uleb128 0x1
 3514 05fc 9C       		.byte	0x9c
 3515 05fd 13       		.uleb128 0x13
 3516 05fe 51000000 		.4byte	.LASF67
 3517 0602 02       		.byte	0x2
 3518 0603 8C01     		.2byte	0x18c
 3519 0605 00000000 		.4byte	.LFB39
 3520 0609 3C000000 		.4byte	.LFE39-.LFB39
 3521 060d 01       		.uleb128 0x1
 3522 060e 9C       		.byte	0x9c
 3523 060f 23060000 		.4byte	0x623
 3524 0613 0B       		.uleb128 0xb
 3525 0614 00000000 		.4byte	.LASF68
 3526 0618 02       		.byte	0x2
 3527 0619 8C01     		.2byte	0x18c
 3528 061b 23060000 		.4byte	0x623
 3529 061f 02       		.uleb128 0x2
 3530 0620 91       		.byte	0x91
 3531 0621 6C       		.sleb128 -20
 3532 0622 00       		.byte	0
 3533 0623 16       		.uleb128 0x16
 3534 0624 04       		.byte	0x4
 3535 0625 FC000000 		.4byte	0xfc
 3536 0629 17       		.uleb128 0x17
 3537 062a 2E040000 		.4byte	.LASF69
 3538 062e 02       		.byte	0x2
 3539 062f A301     		.2byte	0x1a3
 3540 0631 83000000 		.4byte	0x83
 3541 0635 00000000 		.4byte	.LFB40
 3542 0639 44000000 		.4byte	.LFE40-.LFB40
 3543 063d 01       		.uleb128 0x1
 3544 063e 9C       		.byte	0x9c
 3545 063f 17       		.uleb128 0x17
 3546 0640 89050000 		.4byte	.LASF70
 3547 0644 02       		.byte	0x2
 3548 0645 BD01     		.2byte	0x1bd
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 114


 3549 0647 83000000 		.4byte	0x83
 3550 064b 00000000 		.4byte	.LFB41
 3551 064f 44000000 		.4byte	.LFE41-.LFB41
 3552 0653 01       		.uleb128 0x1
 3553 0654 9C       		.byte	0x9c
 3554 0655 18       		.uleb128 0x18
 3555 0656 C2030000 		.4byte	.LASF72
 3556 065a 02       		.byte	0x2
 3557 065b 9B03     		.2byte	0x39b
 3558 065d 83000000 		.4byte	0x83
 3559 0661 00000000 		.4byte	.LFB42
 3560 0665 80000000 		.4byte	.LFE42-.LFB42
 3561 0669 01       		.uleb128 0x1
 3562 066a 9C       		.byte	0x9c
 3563 066b 8E060000 		.4byte	0x68e
 3564 066f 0D       		.uleb128 0xd
 3565 0670 53040000 		.4byte	.LASF57
 3566 0674 02       		.byte	0x2
 3567 0675 9D03     		.2byte	0x39d
 3568 0677 83000000 		.4byte	0x83
 3569 067b 02       		.uleb128 0x2
 3570 067c 91       		.byte	0x91
 3571 067d 74       		.sleb128 -12
 3572 067e 0D       		.uleb128 0xd
 3573 067f AC050000 		.4byte	.LASF71
 3574 0683 02       		.byte	0x2
 3575 0684 9E03     		.2byte	0x39e
 3576 0686 FC000000 		.4byte	0xfc
 3577 068a 02       		.uleb128 0x2
 3578 068b 91       		.byte	0x91
 3579 068c 64       		.sleb128 -28
 3580 068d 00       		.byte	0
 3581 068e 19       		.uleb128 0x19
 3582 068f 60010000 		.4byte	.LASF73
 3583 0693 02       		.byte	0x2
 3584 0694 5E04     		.2byte	0x45e
 3585 0696 83000000 		.4byte	0x83
 3586 069a 00000000 		.4byte	.LFB43
 3587 069e 4E000000 		.4byte	.LFE43-.LFB43
 3588 06a2 01       		.uleb128 0x1
 3589 06a3 9C       		.byte	0x9c
 3590 06a4 E3060000 		.4byte	0x6e3
 3591 06a8 0B       		.uleb128 0xb
 3592 06a9 F2000000 		.4byte	.LASF74
 3593 06ad 02       		.byte	0x2
 3594 06ae 5E04     		.2byte	0x45e
 3595 06b0 83000000 		.4byte	0x83
 3596 06b4 02       		.uleb128 0x2
 3597 06b5 91       		.byte	0x91
 3598 06b6 64       		.sleb128 -28
 3599 06b7 1A       		.uleb128 0x1a
 3600 06b8 6900     		.ascii	"i\000"
 3601 06ba 02       		.byte	0x2
 3602 06bb 6004     		.2byte	0x460
 3603 06bd 83000000 		.4byte	0x83
 3604 06c1 02       		.uleb128 0x2
 3605 06c2 91       		.byte	0x91
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 115


 3606 06c3 74       		.sleb128 -12
 3607 06c4 0D       		.uleb128 0xd
 3608 06c5 7A050000 		.4byte	.LASF75
 3609 06c9 02       		.byte	0x2
 3610 06ca 6104     		.2byte	0x461
 3611 06cc 83000000 		.4byte	0x83
 3612 06d0 02       		.uleb128 0x2
 3613 06d1 91       		.byte	0x91
 3614 06d2 70       		.sleb128 -16
 3615 06d3 0D       		.uleb128 0xd
 3616 06d4 17000000 		.4byte	.LASF29
 3617 06d8 02       		.byte	0x2
 3618 06d9 6204     		.2byte	0x462
 3619 06db 83000000 		.4byte	0x83
 3620 06df 02       		.uleb128 0x2
 3621 06e0 91       		.byte	0x91
 3622 06e1 6C       		.sleb128 -20
 3623 06e2 00       		.byte	0
 3624 06e3 18       		.uleb128 0x18
 3625 06e4 3E020000 		.4byte	.LASF76
 3626 06e8 02       		.byte	0x2
 3627 06e9 8404     		.2byte	0x484
 3628 06eb 83000000 		.4byte	0x83
 3629 06ef 00000000 		.4byte	.LFB44
 3630 06f3 60000000 		.4byte	.LFE44-.LFB44
 3631 06f7 01       		.uleb128 0x1
 3632 06f8 9C       		.byte	0x9c
 3633 06f9 3A070000 		.4byte	0x73a
 3634 06fd 0B       		.uleb128 0xb
 3635 06fe 55050000 		.4byte	.LASF77
 3636 0702 02       		.byte	0x2
 3637 0703 8404     		.2byte	0x484
 3638 0705 83000000 		.4byte	0x83
 3639 0709 02       		.uleb128 0x2
 3640 070a 91       		.byte	0x91
 3641 070b 64       		.sleb128 -28
 3642 070c 0D       		.uleb128 0xd
 3643 070d A7010000 		.4byte	.LASF78
 3644 0711 02       		.byte	0x2
 3645 0712 8604     		.2byte	0x486
 3646 0714 83000000 		.4byte	0x83
 3647 0718 02       		.uleb128 0x2
 3648 0719 91       		.byte	0x91
 3649 071a 74       		.sleb128 -12
 3650 071b 0D       		.uleb128 0xd
 3651 071c 47050000 		.4byte	.LASF43
 3652 0720 02       		.byte	0x2
 3653 0721 8704     		.2byte	0x487
 3654 0723 83000000 		.4byte	0x83
 3655 0727 02       		.uleb128 0x2
 3656 0728 91       		.byte	0x91
 3657 0729 70       		.sleb128 -16
 3658 072a 0D       		.uleb128 0xd
 3659 072b 17000000 		.4byte	.LASF29
 3660 072f 02       		.byte	0x2
 3661 0730 8804     		.2byte	0x488
 3662 0732 83000000 		.4byte	0x83
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 116


 3663 0736 02       		.uleb128 0x2
 3664 0737 91       		.byte	0x91
 3665 0738 6C       		.sleb128 -20
 3666 0739 00       		.byte	0
 3667 073a 15       		.uleb128 0x15
 3668 073b 02030000 		.4byte	.LASF79
 3669 073f 02       		.byte	0x2
 3670 0740 B704     		.2byte	0x4b7
 3671 0742 00000000 		.4byte	.LFB45
 3672 0746 50000000 		.4byte	.LFE45-.LFB45
 3673 074a 01       		.uleb128 0x1
 3674 074b 9C       		.byte	0x9c
 3675 074c 63070000 		.4byte	0x763
 3676 0750 0D       		.uleb128 0xd
 3677 0751 B8050000 		.4byte	.LASF80
 3678 0755 02       		.byte	0x2
 3679 0756 B904     		.2byte	0x4b9
 3680 0758 B0000000 		.4byte	0xb0
 3681 075c 05       		.uleb128 0x5
 3682 075d 03       		.byte	0x3
 3683 075e 0C000000 		.4byte	RTC_1_currentTickNumber.5224
 3684 0762 00       		.byte	0
 3685 0763 18       		.uleb128 0x18
 3686 0764 97050000 		.4byte	.LASF81
 3687 0768 02       		.byte	0x2
 3688 0769 F204     		.2byte	0x4f2
 3689 076b 9D000000 		.4byte	0x9d
 3690 076f 00000000 		.4byte	.LFB46
 3691 0773 90010000 		.4byte	.LFE46-.LFB46
 3692 0777 01       		.uleb128 0x1
 3693 0778 9C       		.byte	0x9c
 3694 0779 E5070000 		.4byte	0x7e5
 3695 077d 0B       		.uleb128 0xb
 3696 077e 7F050000 		.4byte	.LASF54
 3697 0782 02       		.byte	0x2
 3698 0783 F204     		.2byte	0x4f2
 3699 0785 83000000 		.4byte	0x83
 3700 0789 02       		.uleb128 0x2
 3701 078a 91       		.byte	0x91
 3702 078b 4C       		.sleb128 -52
 3703 078c 0B       		.uleb128 0xb
 3704 078d F0040000 		.4byte	.LASF28
 3705 0791 02       		.byte	0x2
 3706 0792 F204     		.2byte	0x4f2
 3707 0794 83000000 		.4byte	0x83
 3708 0798 02       		.uleb128 0x2
 3709 0799 91       		.byte	0x91
 3710 079a 48       		.sleb128 -56
 3711 079b 1A       		.uleb128 0x1a
 3712 079c 6900     		.ascii	"i\000"
 3713 079e 02       		.byte	0x2
 3714 079f F404     		.2byte	0x4f4
 3715 07a1 83000000 		.4byte	0x83
 3716 07a5 02       		.uleb128 0x2
 3717 07a6 91       		.byte	0x91
 3718 07a7 64       		.sleb128 -28
 3719 07a8 0D       		.uleb128 0xd
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 117


 3720 07a9 53040000 		.4byte	.LASF57
 3721 07ad 02       		.byte	0x2
 3722 07ae F504     		.2byte	0x4f5
 3723 07b0 83000000 		.4byte	0x83
 3724 07b4 02       		.uleb128 0x2
 3725 07b5 91       		.byte	0x91
 3726 07b6 54       		.sleb128 -44
 3727 07b7 0D       		.uleb128 0xd
 3728 07b8 C1000000 		.4byte	.LASF56
 3729 07bc 02       		.byte	0x2
 3730 07bd F604     		.2byte	0x4f6
 3731 07bf 83000000 		.4byte	0x83
 3732 07c3 02       		.uleb128 0x2
 3733 07c4 91       		.byte	0x91
 3734 07c5 50       		.sleb128 -48
 3735 07c6 0D       		.uleb128 0xd
 3736 07c7 47050000 		.4byte	.LASF43
 3737 07cb 02       		.byte	0x2
 3738 07cc F704     		.2byte	0x4f7
 3739 07ce 83000000 		.4byte	0x83
 3740 07d2 02       		.uleb128 0x2
 3741 07d3 91       		.byte	0x91
 3742 07d4 60       		.sleb128 -32
 3743 07d5 0D       		.uleb128 0xd
 3744 07d6 D0050000 		.4byte	.LASF59
 3745 07da 02       		.byte	0x2
 3746 07db F804     		.2byte	0x4f8
 3747 07dd 9D000000 		.4byte	0x9d
 3748 07e1 02       		.uleb128 0x2
 3749 07e2 91       		.byte	0x91
 3750 07e3 58       		.sleb128 -40
 3751 07e4 00       		.byte	0
 3752 07e5 13       		.uleb128 0x13
 3753 07e6 FE030000 		.4byte	.LASF82
 3754 07ea 02       		.byte	0x2
 3755 07eb 5505     		.2byte	0x555
 3756 07ed 00000000 		.4byte	.LFB47
 3757 07f1 98020000 		.4byte	.LFE47-.LFB47
 3758 07f5 01       		.uleb128 0x1
 3759 07f6 9C       		.byte	0x9c
 3760 07f7 93080000 		.4byte	0x893
 3761 07fb 0B       		.uleb128 0xb
 3762 07fc 00000000 		.4byte	.LASF68
 3763 0800 02       		.byte	0x2
 3764 0801 5505     		.2byte	0x555
 3765 0803 23060000 		.4byte	0x623
 3766 0807 02       		.uleb128 0x2
 3767 0808 91       		.byte	0x91
 3768 0809 44       		.sleb128 -60
 3769 080a 0B       		.uleb128 0xb
 3770 080b D0050000 		.4byte	.LASF59
 3771 080f 02       		.byte	0x2
 3772 0810 5505     		.2byte	0x555
 3773 0812 9D000000 		.4byte	0x9d
 3774 0816 03       		.uleb128 0x3
 3775 0817 91       		.byte	0x91
 3776 0818 B87F     		.sleb128 -72
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 118


 3777 081a 0B       		.uleb128 0xb
 3778 081b 33020000 		.4byte	.LASF38
 3779 081f 02       		.byte	0x2
 3780 0820 5505     		.2byte	0x555
 3781 0822 83000000 		.4byte	0x83
 3782 0826 02       		.uleb128 0x2
 3783 0827 91       		.byte	0x91
 3784 0828 00       		.sleb128 0
 3785 0829 0D       		.uleb128 0xd
 3786 082a 66000000 		.4byte	.LASF83
 3787 082e 02       		.byte	0x2
 3788 082f 5705     		.2byte	0x557
 3789 0831 83000000 		.4byte	0x83
 3790 0835 02       		.uleb128 0x2
 3791 0836 91       		.byte	0x91
 3792 0837 4C       		.sleb128 -52
 3793 0838 0D       		.uleb128 0xd
 3794 0839 67040000 		.4byte	.LASF84
 3795 083d 02       		.byte	0x2
 3796 083e 5805     		.2byte	0x558
 3797 0840 83000000 		.4byte	0x83
 3798 0844 02       		.uleb128 0x2
 3799 0845 91       		.byte	0x91
 3800 0846 64       		.sleb128 -28
 3801 0847 0D       		.uleb128 0xd
 3802 0848 E5000000 		.4byte	.LASF85
 3803 084c 02       		.byte	0x2
 3804 084d 5905     		.2byte	0x559
 3805 084f 83000000 		.4byte	0x83
 3806 0853 02       		.uleb128 0x2
 3807 0854 91       		.byte	0x91
 3808 0855 60       		.sleb128 -32
 3809 0856 0D       		.uleb128 0xd
 3810 0857 09000000 		.4byte	.LASF55
 3811 085b 02       		.byte	0x2
 3812 085c 5B05     		.2byte	0x55b
 3813 085e 83000000 		.4byte	0x83
 3814 0862 02       		.uleb128 0x2
 3815 0863 91       		.byte	0x91
 3816 0864 50       		.sleb128 -48
 3817 0865 0D       		.uleb128 0xd
 3818 0866 C1000000 		.4byte	.LASF56
 3819 086a 02       		.byte	0x2
 3820 086b 5C05     		.2byte	0x55c
 3821 086d 83000000 		.4byte	0x83
 3822 0871 02       		.uleb128 0x2
 3823 0872 91       		.byte	0x91
 3824 0873 5C       		.sleb128 -36
 3825 0874 0D       		.uleb128 0xd
 3826 0875 53040000 		.4byte	.LASF57
 3827 0879 02       		.byte	0x2
 3828 087a 5D05     		.2byte	0x55d
 3829 087c 83000000 		.4byte	0x83
 3830 0880 02       		.uleb128 0x2
 3831 0881 91       		.byte	0x91
 3832 0882 58       		.sleb128 -40
 3833 0883 0D       		.uleb128 0xd
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 119


 3834 0884 4E050000 		.4byte	.LASF86
 3835 0888 02       		.byte	0x2
 3836 0889 5F05     		.2byte	0x55f
 3837 088b 83000000 		.4byte	0x83
 3838 088f 02       		.uleb128 0x2
 3839 0890 91       		.byte	0x91
 3840 0891 54       		.sleb128 -44
 3841 0892 00       		.byte	0
 3842 0893 18       		.uleb128 0x18
 3843 0894 AC030000 		.4byte	.LASF87
 3844 0898 02       		.byte	0x2
 3845 0899 DB05     		.2byte	0x5db
 3846 089b 83000000 		.4byte	0x83
 3847 089f 00000000 		.4byte	.LFB48
 3848 08a3 7A000000 		.4byte	.LFE48-.LFB48
 3849 08a7 01       		.uleb128 0x1
 3850 08a8 9C       		.byte	0x9c
 3851 08a9 35090000 		.4byte	0x935
 3852 08ad 0B       		.uleb128 0xb
 3853 08ae D3030000 		.4byte	.LASF20
 3854 08b2 02       		.byte	0x2
 3855 08b3 DB05     		.2byte	0x5db
 3856 08b5 83000000 		.4byte	0x83
 3857 08b9 02       		.uleb128 0x2
 3858 08ba 91       		.byte	0x91
 3859 08bb 5C       		.sleb128 -36
 3860 08bc 0B       		.uleb128 0xb
 3861 08bd D9000000 		.4byte	.LASF88
 3862 08c1 02       		.byte	0x2
 3863 08c2 DB05     		.2byte	0x5db
 3864 08c4 83000000 		.4byte	0x83
 3865 08c8 02       		.uleb128 0x2
 3866 08c9 91       		.byte	0x91
 3867 08ca 58       		.sleb128 -40
 3868 08cb 0B       		.uleb128 0xb
 3869 08cc 20020000 		.4byte	.LASF42
 3870 08d0 02       		.byte	0x2
 3871 08d1 DB05     		.2byte	0x5db
 3872 08d3 83000000 		.4byte	0x83
 3873 08d7 02       		.uleb128 0x2
 3874 08d8 91       		.byte	0x91
 3875 08d9 54       		.sleb128 -44
 3876 08da 0B       		.uleb128 0xb
 3877 08db 52010000 		.4byte	.LASF26
 3878 08df 02       		.byte	0x2
 3879 08e0 DB05     		.2byte	0x5db
 3880 08e2 83000000 		.4byte	0x83
 3881 08e6 02       		.uleb128 0x2
 3882 08e7 91       		.byte	0x91
 3883 08e8 50       		.sleb128 -48
 3884 08e9 0D       		.uleb128 0xd
 3885 08ea 8B010000 		.4byte	.LASF89
 3886 08ee 02       		.byte	0x2
 3887 08ef DD05     		.2byte	0x5dd
 3888 08f1 83000000 		.4byte	0x83
 3889 08f5 02       		.uleb128 0x2
 3890 08f6 91       		.byte	0x91
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 120


 3891 08f7 74       		.sleb128 -12
 3892 08f8 0D       		.uleb128 0xd
 3893 08f9 6A020000 		.4byte	.LASF90
 3894 08fd 02       		.byte	0x2
 3895 08fe DE05     		.2byte	0x5de
 3896 0900 83000000 		.4byte	0x83
 3897 0904 02       		.uleb128 0x2
 3898 0905 91       		.byte	0x91
 3899 0906 70       		.sleb128 -16
 3900 0907 0D       		.uleb128 0xd
 3901 0908 F9000000 		.4byte	.LASF91
 3902 090c 02       		.byte	0x2
 3903 090d DF05     		.2byte	0x5df
 3904 090f 83000000 		.4byte	0x83
 3905 0913 02       		.uleb128 0x2
 3906 0914 91       		.byte	0x91
 3907 0915 68       		.sleb128 -24
 3908 0916 0D       		.uleb128 0xd
 3909 0917 DD030000 		.4byte	.LASF92
 3910 091b 02       		.byte	0x2
 3911 091c E005     		.2byte	0x5e0
 3912 091e 83000000 		.4byte	0x83
 3913 0922 02       		.uleb128 0x2
 3914 0923 91       		.byte	0x91
 3915 0924 6C       		.sleb128 -20
 3916 0925 0D       		.uleb128 0xd
 3917 0926 17000000 		.4byte	.LASF29
 3918 092a 02       		.byte	0x2
 3919 092b E205     		.2byte	0x5e2
 3920 092d 83000000 		.4byte	0x83
 3921 0931 02       		.uleb128 0x2
 3922 0932 91       		.byte	0x91
 3923 0933 64       		.sleb128 -28
 3924 0934 00       		.byte	0
 3925 0935 18       		.uleb128 0x18
 3926 0936 02060000 		.4byte	.LASF93
 3927 093a 02       		.byte	0x2
 3928 093b 1606     		.2byte	0x616
 3929 093d 83000000 		.4byte	0x83
 3930 0941 00000000 		.4byte	.LFB49
 3931 0945 3C000000 		.4byte	.LFE49-.LFB49
 3932 0949 01       		.uleb128 0x1
 3933 094a 9C       		.byte	0x9c
 3934 094b 7D090000 		.4byte	0x97d
 3935 094f 0B       		.uleb128 0xb
 3936 0950 20020000 		.4byte	.LASF42
 3937 0954 02       		.byte	0x2
 3938 0955 1606     		.2byte	0x616
 3939 0957 83000000 		.4byte	0x83
 3940 095b 02       		.uleb128 0x2
 3941 095c 91       		.byte	0x91
 3942 095d 6C       		.sleb128 -20
 3943 095e 0B       		.uleb128 0xb
 3944 095f 52010000 		.4byte	.LASF26
 3945 0963 02       		.byte	0x2
 3946 0964 1606     		.2byte	0x616
 3947 0966 83000000 		.4byte	0x83
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 121


 3948 096a 02       		.uleb128 0x2
 3949 096b 91       		.byte	0x91
 3950 096c 68       		.sleb128 -24
 3951 096d 0D       		.uleb128 0xd
 3952 096e 17000000 		.4byte	.LASF29
 3953 0972 02       		.byte	0x2
 3954 0973 1806     		.2byte	0x618
 3955 0975 83000000 		.4byte	0x83
 3956 0979 02       		.uleb128 0x2
 3957 097a 91       		.byte	0x91
 3958 097b 74       		.sleb128 -12
 3959 097c 00       		.byte	0
 3960 097d 18       		.uleb128 0x18
 3961 097e 70000000 		.4byte	.LASF94
 3962 0982 02       		.byte	0x2
 3963 0983 4606     		.2byte	0x646
 3964 0985 83000000 		.4byte	0x83
 3965 0989 00000000 		.4byte	.LFB50
 3966 098d 3C000000 		.4byte	.LFE50-.LFB50
 3967 0991 01       		.uleb128 0x1
 3968 0992 9C       		.byte	0x9c
 3969 0993 C5090000 		.4byte	0x9c5
 3970 0997 0B       		.uleb128 0xb
 3971 0998 20020000 		.4byte	.LASF42
 3972 099c 02       		.byte	0x2
 3973 099d 4606     		.2byte	0x646
 3974 099f 83000000 		.4byte	0x83
 3975 09a3 02       		.uleb128 0x2
 3976 09a4 91       		.byte	0x91
 3977 09a5 6C       		.sleb128 -20
 3978 09a6 0B       		.uleb128 0xb
 3979 09a7 52010000 		.4byte	.LASF26
 3980 09ab 02       		.byte	0x2
 3981 09ac 4606     		.2byte	0x646
 3982 09ae 83000000 		.4byte	0x83
 3983 09b2 02       		.uleb128 0x2
 3984 09b3 91       		.byte	0x91
 3985 09b4 68       		.sleb128 -24
 3986 09b5 0D       		.uleb128 0xd
 3987 09b6 17000000 		.4byte	.LASF29
 3988 09ba 02       		.byte	0x2
 3989 09bb 4806     		.2byte	0x648
 3990 09bd 83000000 		.4byte	0x83
 3991 09c1 02       		.uleb128 0x2
 3992 09c2 91       		.byte	0x91
 3993 09c3 74       		.sleb128 -12
 3994 09c4 00       		.byte	0
 3995 09c5 11       		.uleb128 0x11
 3996 09c6 3C040000 		.4byte	.LASF95
 3997 09ca 02       		.byte	0x2
 3998 09cb 17       		.byte	0x17
 3999 09cc 83000000 		.4byte	0x83
 4000 09d0 05       		.uleb128 0x5
 4001 09d1 03       		.byte	0x3
 4002 09d2 00000000 		.4byte	RTC_1_updateTimePeriod
 4003 09d6 11       		.uleb128 0x11
 4004 09d7 28060000 		.4byte	.LASF96
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 122


 4005 09db 02       		.byte	0x2
 4006 09dc 18       		.byte	0x18
 4007 09dd 83000000 		.4byte	0x83
 4008 09e1 05       		.uleb128 0x5
 4009 09e2 03       		.byte	0x3
 4010 09e3 04000000 		.4byte	RTC_1_tickRefOneSec
 4011 09e7 11       		.uleb128 0x11
 4012 09e8 9D000000 		.4byte	.LASF97
 4013 09ec 02       		.byte	0x2
 4014 09ed 1B       		.byte	0x1b
 4015 09ee 83000000 		.4byte	0x83
 4016 09f2 05       		.uleb128 0x5
 4017 09f3 03       		.byte	0x3
 4018 09f4 08000000 		.4byte	RTC_1_dstTimeOffset
 4019 09f8 1B       		.uleb128 0x1b
 4020 09f9 E0050000 		.4byte	.LASF98
 4021 09fd 02       		.byte	0x2
 4022 09fe 12       		.byte	0x12
 4023 09ff 6B000000 		.4byte	0x6b
 4024 0a03 05       		.uleb128 0x5
 4025 0a04 03       		.byte	0x3
 4026 0a05 00000000 		.4byte	RTC_1_initVar
 4027 0a09 1B       		.uleb128 0x1b
 4028 0a0a B1000000 		.4byte	.LASF99
 4029 0a0e 02       		.byte	0x2
 4030 0a0f 1A       		.byte	0x1a
 4031 0a10 6B000000 		.4byte	0x6b
 4032 0a14 05       		.uleb128 0x5
 4033 0a15 03       		.byte	0x3
 4034 0a16 00000000 		.4byte	RTC_1_dstStatus
 4035 0a1a 1B       		.uleb128 0x1b
 4036 0a1b 0F030000 		.4byte	.LASF100
 4037 0a1f 02       		.byte	0x2
 4038 0a20 14       		.byte	0x14
 4039 0a21 2B0A0000 		.4byte	0xa2b
 4040 0a25 05       		.uleb128 0x5
 4041 0a26 03       		.byte	0x3
 4042 0a27 00000000 		.4byte	RTC_1_unixTime
 4043 0a2b 05       		.uleb128 0x5
 4044 0a2c 9D000000 		.4byte	0x9d
 4045 0a30 1B       		.uleb128 0x1b
 4046 0a31 54020000 		.4byte	.LASF101
 4047 0a35 02       		.byte	0x2
 4048 0a36 15       		.byte	0x15
 4049 0a37 FC000000 		.4byte	0xfc
 4050 0a3b 05       		.uleb128 0x5
 4051 0a3c 03       		.byte	0x3
 4052 0a3d 00000000 		.4byte	RTC_1_currentTimeDate
 4053 0a41 1B       		.uleb128 0x1b
 4054 0a42 72020000 		.4byte	.LASF102
 4055 0a46 02       		.byte	0x2
 4056 0a47 23       		.byte	0x23
 4057 0a48 83000000 		.4byte	0x83
 4058 0a4c 05       		.uleb128 0x5
 4059 0a4d 03       		.byte	0x3
 4060 0a4e 00000000 		.4byte	RTC_1_alarmCurStatus
 4061 0a52 1C       		.uleb128 0x1c
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 123


 4062 0a53 620A0000 		.4byte	0xa62
 4063 0a57 620A0000 		.4byte	0xa62
 4064 0a5b 1D       		.uleb128 0x1d
 4065 0a5c BC000000 		.4byte	0xbc
 4066 0a60 0B       		.byte	0xb
 4067 0a61 00       		.byte	0
 4068 0a62 1E       		.uleb128 0x1e
 4069 0a63 77000000 		.4byte	0x77
 4070 0a67 1B       		.uleb128 0x1b
 4071 0a68 5C050000 		.4byte	.LASF103
 4072 0a6c 02       		.byte	0x2
 4073 0a6d 2B       		.byte	0x2b
 4074 0a6e 780A0000 		.4byte	0xa78
 4075 0a72 05       		.uleb128 0x5
 4076 0a73 03       		.byte	0x3
 4077 0a74 00000000 		.4byte	RTC_1_daysBeforeMonthTbl
 4078 0a78 1E       		.uleb128 0x1e
 4079 0a79 520A0000 		.4byte	0xa52
 4080 0a7d 1C       		.uleb128 0x1c
 4081 0a7e 8D0A0000 		.4byte	0xa8d
 4082 0a82 8D0A0000 		.4byte	0xa8d
 4083 0a86 1D       		.uleb128 0x1d
 4084 0a87 BC000000 		.4byte	0xbc
 4085 0a8b 0B       		.byte	0xb
 4086 0a8c 00       		.byte	0
 4087 0a8d 1E       		.uleb128 0x1e
 4088 0a8e 6B000000 		.4byte	0x6b
 4089 0a92 1B       		.uleb128 0x1b
 4090 0a93 E2020000 		.4byte	.LASF104
 4091 0a97 02       		.byte	0x2
 4092 0a98 39       		.byte	0x39
 4093 0a99 A30A0000 		.4byte	0xaa3
 4094 0a9d 05       		.uleb128 0x5
 4095 0a9e 03       		.byte	0x3
 4096 0a9f 00000000 		.4byte	RTC_1_daysInMonthTbl
 4097 0aa3 1E       		.uleb128 0x1e
 4098 0aa4 7D0A0000 		.4byte	0xa7d
 4099 0aa8 00       		.byte	0
 4100              		.section	.debug_abbrev,"",%progbits
 4101              	.Ldebug_abbrev0:
 4102 0000 01       		.uleb128 0x1
 4103 0001 11       		.uleb128 0x11
 4104 0002 01       		.byte	0x1
 4105 0003 25       		.uleb128 0x25
 4106 0004 0E       		.uleb128 0xe
 4107 0005 13       		.uleb128 0x13
 4108 0006 0B       		.uleb128 0xb
 4109 0007 03       		.uleb128 0x3
 4110 0008 0E       		.uleb128 0xe
 4111 0009 1B       		.uleb128 0x1b
 4112 000a 0E       		.uleb128 0xe
 4113 000b 55       		.uleb128 0x55
 4114 000c 17       		.uleb128 0x17
 4115 000d 11       		.uleb128 0x11
 4116 000e 01       		.uleb128 0x1
 4117 000f 10       		.uleb128 0x10
 4118 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 124


 4119 0011 00       		.byte	0
 4120 0012 00       		.byte	0
 4121 0013 02       		.uleb128 0x2
 4122 0014 24       		.uleb128 0x24
 4123 0015 00       		.byte	0
 4124 0016 0B       		.uleb128 0xb
 4125 0017 0B       		.uleb128 0xb
 4126 0018 3E       		.uleb128 0x3e
 4127 0019 0B       		.uleb128 0xb
 4128 001a 03       		.uleb128 0x3
 4129 001b 0E       		.uleb128 0xe
 4130 001c 00       		.byte	0
 4131 001d 00       		.byte	0
 4132 001e 03       		.uleb128 0x3
 4133 001f 24       		.uleb128 0x24
 4134 0020 00       		.byte	0
 4135 0021 0B       		.uleb128 0xb
 4136 0022 0B       		.uleb128 0xb
 4137 0023 3E       		.uleb128 0x3e
 4138 0024 0B       		.uleb128 0xb
 4139 0025 03       		.uleb128 0x3
 4140 0026 08       		.uleb128 0x8
 4141 0027 00       		.byte	0
 4142 0028 00       		.byte	0
 4143 0029 04       		.uleb128 0x4
 4144 002a 16       		.uleb128 0x16
 4145 002b 00       		.byte	0
 4146 002c 03       		.uleb128 0x3
 4147 002d 0E       		.uleb128 0xe
 4148 002e 3A       		.uleb128 0x3a
 4149 002f 0B       		.uleb128 0xb
 4150 0030 3B       		.uleb128 0x3b
 4151 0031 05       		.uleb128 0x5
 4152 0032 49       		.uleb128 0x49
 4153 0033 13       		.uleb128 0x13
 4154 0034 00       		.byte	0
 4155 0035 00       		.byte	0
 4156 0036 05       		.uleb128 0x5
 4157 0037 35       		.uleb128 0x35
 4158 0038 00       		.byte	0
 4159 0039 49       		.uleb128 0x49
 4160 003a 13       		.uleb128 0x13
 4161 003b 00       		.byte	0
 4162 003c 00       		.byte	0
 4163 003d 06       		.uleb128 0x6
 4164 003e 13       		.uleb128 0x13
 4165 003f 01       		.byte	0x1
 4166 0040 0B       		.uleb128 0xb
 4167 0041 0B       		.uleb128 0xb
 4168 0042 3A       		.uleb128 0x3a
 4169 0043 0B       		.uleb128 0xb
 4170 0044 3B       		.uleb128 0x3b
 4171 0045 0B       		.uleb128 0xb
 4172 0046 01       		.uleb128 0x1
 4173 0047 13       		.uleb128 0x13
 4174 0048 00       		.byte	0
 4175 0049 00       		.byte	0
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 125


 4176 004a 07       		.uleb128 0x7
 4177 004b 0D       		.uleb128 0xd
 4178 004c 00       		.byte	0
 4179 004d 03       		.uleb128 0x3
 4180 004e 0E       		.uleb128 0xe
 4181 004f 3A       		.uleb128 0x3a
 4182 0050 0B       		.uleb128 0xb
 4183 0051 3B       		.uleb128 0x3b
 4184 0052 0B       		.uleb128 0xb
 4185 0053 49       		.uleb128 0x49
 4186 0054 13       		.uleb128 0x13
 4187 0055 38       		.uleb128 0x38
 4188 0056 0B       		.uleb128 0xb
 4189 0057 00       		.byte	0
 4190 0058 00       		.byte	0
 4191 0059 08       		.uleb128 0x8
 4192 005a 16       		.uleb128 0x16
 4193 005b 00       		.byte	0
 4194 005c 03       		.uleb128 0x3
 4195 005d 0E       		.uleb128 0xe
 4196 005e 3A       		.uleb128 0x3a
 4197 005f 0B       		.uleb128 0xb
 4198 0060 3B       		.uleb128 0x3b
 4199 0061 0B       		.uleb128 0xb
 4200 0062 49       		.uleb128 0x49
 4201 0063 13       		.uleb128 0x13
 4202 0064 00       		.byte	0
 4203 0065 00       		.byte	0
 4204 0066 09       		.uleb128 0x9
 4205 0067 2E       		.uleb128 0x2e
 4206 0068 01       		.byte	0x1
 4207 0069 03       		.uleb128 0x3
 4208 006a 0E       		.uleb128 0xe
 4209 006b 3A       		.uleb128 0x3a
 4210 006c 0B       		.uleb128 0xb
 4211 006d 3B       		.uleb128 0x3b
 4212 006e 05       		.uleb128 0x5
 4213 006f 27       		.uleb128 0x27
 4214 0070 19       		.uleb128 0x19
 4215 0071 49       		.uleb128 0x49
 4216 0072 13       		.uleb128 0x13
 4217 0073 11       		.uleb128 0x11
 4218 0074 01       		.uleb128 0x1
 4219 0075 12       		.uleb128 0x12
 4220 0076 06       		.uleb128 0x6
 4221 0077 40       		.uleb128 0x40
 4222 0078 18       		.uleb128 0x18
 4223 0079 9742     		.uleb128 0x2117
 4224 007b 19       		.uleb128 0x19
 4225 007c 01       		.uleb128 0x1
 4226 007d 13       		.uleb128 0x13
 4227 007e 00       		.byte	0
 4228 007f 00       		.byte	0
 4229 0080 0A       		.uleb128 0xa
 4230 0081 05       		.uleb128 0x5
 4231 0082 00       		.byte	0
 4232 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 126


 4233 0084 08       		.uleb128 0x8
 4234 0085 3A       		.uleb128 0x3a
 4235 0086 0B       		.uleb128 0xb
 4236 0087 3B       		.uleb128 0x3b
 4237 0088 05       		.uleb128 0x5
 4238 0089 49       		.uleb128 0x49
 4239 008a 13       		.uleb128 0x13
 4240 008b 02       		.uleb128 0x2
 4241 008c 18       		.uleb128 0x18
 4242 008d 00       		.byte	0
 4243 008e 00       		.byte	0
 4244 008f 0B       		.uleb128 0xb
 4245 0090 05       		.uleb128 0x5
 4246 0091 00       		.byte	0
 4247 0092 03       		.uleb128 0x3
 4248 0093 0E       		.uleb128 0xe
 4249 0094 3A       		.uleb128 0x3a
 4250 0095 0B       		.uleb128 0xb
 4251 0096 3B       		.uleb128 0x3b
 4252 0097 05       		.uleb128 0x5
 4253 0098 49       		.uleb128 0x49
 4254 0099 13       		.uleb128 0x13
 4255 009a 02       		.uleb128 0x2
 4256 009b 18       		.uleb128 0x18
 4257 009c 00       		.byte	0
 4258 009d 00       		.byte	0
 4259 009e 0C       		.uleb128 0xc
 4260 009f 2E       		.uleb128 0x2e
 4261 00a0 01       		.byte	0x1
 4262 00a1 03       		.uleb128 0x3
 4263 00a2 0E       		.uleb128 0xe
 4264 00a3 3A       		.uleb128 0x3a
 4265 00a4 0B       		.uleb128 0xb
 4266 00a5 3B       		.uleb128 0x3b
 4267 00a6 05       		.uleb128 0x5
 4268 00a7 27       		.uleb128 0x27
 4269 00a8 19       		.uleb128 0x19
 4270 00a9 49       		.uleb128 0x49
 4271 00aa 13       		.uleb128 0x13
 4272 00ab 11       		.uleb128 0x11
 4273 00ac 01       		.uleb128 0x1
 4274 00ad 12       		.uleb128 0x12
 4275 00ae 06       		.uleb128 0x6
 4276 00af 40       		.uleb128 0x40
 4277 00b0 18       		.uleb128 0x18
 4278 00b1 9642     		.uleb128 0x2116
 4279 00b3 19       		.uleb128 0x19
 4280 00b4 01       		.uleb128 0x1
 4281 00b5 13       		.uleb128 0x13
 4282 00b6 00       		.byte	0
 4283 00b7 00       		.byte	0
 4284 00b8 0D       		.uleb128 0xd
 4285 00b9 34       		.uleb128 0x34
 4286 00ba 00       		.byte	0
 4287 00bb 03       		.uleb128 0x3
 4288 00bc 0E       		.uleb128 0xe
 4289 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 127


 4290 00be 0B       		.uleb128 0xb
 4291 00bf 3B       		.uleb128 0x3b
 4292 00c0 05       		.uleb128 0x5
 4293 00c1 49       		.uleb128 0x49
 4294 00c2 13       		.uleb128 0x13
 4295 00c3 02       		.uleb128 0x2
 4296 00c4 18       		.uleb128 0x18
 4297 00c5 00       		.byte	0
 4298 00c6 00       		.byte	0
 4299 00c7 0E       		.uleb128 0xe
 4300 00c8 2E       		.uleb128 0x2e
 4301 00c9 01       		.byte	0x1
 4302 00ca 03       		.uleb128 0x3
 4303 00cb 0E       		.uleb128 0xe
 4304 00cc 3A       		.uleb128 0x3a
 4305 00cd 0B       		.uleb128 0xb
 4306 00ce 3B       		.uleb128 0x3b
 4307 00cf 05       		.uleb128 0x5
 4308 00d0 27       		.uleb128 0x27
 4309 00d1 19       		.uleb128 0x19
 4310 00d2 11       		.uleb128 0x11
 4311 00d3 01       		.uleb128 0x1
 4312 00d4 12       		.uleb128 0x12
 4313 00d5 06       		.uleb128 0x6
 4314 00d6 40       		.uleb128 0x40
 4315 00d7 18       		.uleb128 0x18
 4316 00d8 9642     		.uleb128 0x2116
 4317 00da 19       		.uleb128 0x19
 4318 00db 01       		.uleb128 0x1
 4319 00dc 13       		.uleb128 0x13
 4320 00dd 00       		.byte	0
 4321 00de 00       		.byte	0
 4322 00df 0F       		.uleb128 0xf
 4323 00e0 2E       		.uleb128 0x2e
 4324 00e1 00       		.byte	0
 4325 00e2 3F       		.uleb128 0x3f
 4326 00e3 19       		.uleb128 0x19
 4327 00e4 03       		.uleb128 0x3
 4328 00e5 0E       		.uleb128 0xe
 4329 00e6 3A       		.uleb128 0x3a
 4330 00e7 0B       		.uleb128 0xb
 4331 00e8 3B       		.uleb128 0x3b
 4332 00e9 0B       		.uleb128 0xb
 4333 00ea 27       		.uleb128 0x27
 4334 00eb 19       		.uleb128 0x19
 4335 00ec 11       		.uleb128 0x11
 4336 00ed 01       		.uleb128 0x1
 4337 00ee 12       		.uleb128 0x12
 4338 00ef 06       		.uleb128 0x6
 4339 00f0 40       		.uleb128 0x40
 4340 00f1 18       		.uleb128 0x18
 4341 00f2 9642     		.uleb128 0x2116
 4342 00f4 19       		.uleb128 0x19
 4343 00f5 00       		.byte	0
 4344 00f6 00       		.byte	0
 4345 00f7 10       		.uleb128 0x10
 4346 00f8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 128


 4347 00f9 01       		.byte	0x1
 4348 00fa 3F       		.uleb128 0x3f
 4349 00fb 19       		.uleb128 0x19
 4350 00fc 03       		.uleb128 0x3
 4351 00fd 0E       		.uleb128 0xe
 4352 00fe 3A       		.uleb128 0x3a
 4353 00ff 0B       		.uleb128 0xb
 4354 0100 3B       		.uleb128 0x3b
 4355 0101 0B       		.uleb128 0xb
 4356 0102 27       		.uleb128 0x27
 4357 0103 19       		.uleb128 0x19
 4358 0104 11       		.uleb128 0x11
 4359 0105 01       		.uleb128 0x1
 4360 0106 12       		.uleb128 0x12
 4361 0107 06       		.uleb128 0x6
 4362 0108 40       		.uleb128 0x40
 4363 0109 18       		.uleb128 0x18
 4364 010a 9642     		.uleb128 0x2116
 4365 010c 19       		.uleb128 0x19
 4366 010d 01       		.uleb128 0x1
 4367 010e 13       		.uleb128 0x13
 4368 010f 00       		.byte	0
 4369 0110 00       		.byte	0
 4370 0111 11       		.uleb128 0x11
 4371 0112 34       		.uleb128 0x34
 4372 0113 00       		.byte	0
 4373 0114 03       		.uleb128 0x3
 4374 0115 0E       		.uleb128 0xe
 4375 0116 3A       		.uleb128 0x3a
 4376 0117 0B       		.uleb128 0xb
 4377 0118 3B       		.uleb128 0x3b
 4378 0119 0B       		.uleb128 0xb
 4379 011a 49       		.uleb128 0x49
 4380 011b 13       		.uleb128 0x13
 4381 011c 02       		.uleb128 0x2
 4382 011d 18       		.uleb128 0x18
 4383 011e 00       		.byte	0
 4384 011f 00       		.byte	0
 4385 0120 12       		.uleb128 0x12
 4386 0121 05       		.uleb128 0x5
 4387 0122 00       		.byte	0
 4388 0123 03       		.uleb128 0x3
 4389 0124 0E       		.uleb128 0xe
 4390 0125 3A       		.uleb128 0x3a
 4391 0126 0B       		.uleb128 0xb
 4392 0127 3B       		.uleb128 0x3b
 4393 0128 0B       		.uleb128 0xb
 4394 0129 49       		.uleb128 0x49
 4395 012a 13       		.uleb128 0x13
 4396 012b 02       		.uleb128 0x2
 4397 012c 18       		.uleb128 0x18
 4398 012d 00       		.byte	0
 4399 012e 00       		.byte	0
 4400 012f 13       		.uleb128 0x13
 4401 0130 2E       		.uleb128 0x2e
 4402 0131 01       		.byte	0x1
 4403 0132 3F       		.uleb128 0x3f
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 129


 4404 0133 19       		.uleb128 0x19
 4405 0134 03       		.uleb128 0x3
 4406 0135 0E       		.uleb128 0xe
 4407 0136 3A       		.uleb128 0x3a
 4408 0137 0B       		.uleb128 0xb
 4409 0138 3B       		.uleb128 0x3b
 4410 0139 05       		.uleb128 0x5
 4411 013a 27       		.uleb128 0x27
 4412 013b 19       		.uleb128 0x19
 4413 013c 11       		.uleb128 0x11
 4414 013d 01       		.uleb128 0x1
 4415 013e 12       		.uleb128 0x12
 4416 013f 06       		.uleb128 0x6
 4417 0140 40       		.uleb128 0x40
 4418 0141 18       		.uleb128 0x18
 4419 0142 9642     		.uleb128 0x2116
 4420 0144 19       		.uleb128 0x19
 4421 0145 01       		.uleb128 0x1
 4422 0146 13       		.uleb128 0x13
 4423 0147 00       		.byte	0
 4424 0148 00       		.byte	0
 4425 0149 14       		.uleb128 0x14
 4426 014a 2E       		.uleb128 0x2e
 4427 014b 00       		.byte	0
 4428 014c 3F       		.uleb128 0x3f
 4429 014d 19       		.uleb128 0x19
 4430 014e 03       		.uleb128 0x3
 4431 014f 0E       		.uleb128 0xe
 4432 0150 3A       		.uleb128 0x3a
 4433 0151 0B       		.uleb128 0xb
 4434 0152 3B       		.uleb128 0x3b
 4435 0153 05       		.uleb128 0x5
 4436 0154 27       		.uleb128 0x27
 4437 0155 19       		.uleb128 0x19
 4438 0156 49       		.uleb128 0x49
 4439 0157 13       		.uleb128 0x13
 4440 0158 11       		.uleb128 0x11
 4441 0159 01       		.uleb128 0x1
 4442 015a 12       		.uleb128 0x12
 4443 015b 06       		.uleb128 0x6
 4444 015c 40       		.uleb128 0x40
 4445 015d 18       		.uleb128 0x18
 4446 015e 9742     		.uleb128 0x2117
 4447 0160 19       		.uleb128 0x19
 4448 0161 00       		.byte	0
 4449 0162 00       		.byte	0
 4450 0163 15       		.uleb128 0x15
 4451 0164 2E       		.uleb128 0x2e
 4452 0165 01       		.byte	0x1
 4453 0166 3F       		.uleb128 0x3f
 4454 0167 19       		.uleb128 0x19
 4455 0168 03       		.uleb128 0x3
 4456 0169 0E       		.uleb128 0xe
 4457 016a 3A       		.uleb128 0x3a
 4458 016b 0B       		.uleb128 0xb
 4459 016c 3B       		.uleb128 0x3b
 4460 016d 05       		.uleb128 0x5
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 130


 4461 016e 27       		.uleb128 0x27
 4462 016f 19       		.uleb128 0x19
 4463 0170 11       		.uleb128 0x11
 4464 0171 01       		.uleb128 0x1
 4465 0172 12       		.uleb128 0x12
 4466 0173 06       		.uleb128 0x6
 4467 0174 40       		.uleb128 0x40
 4468 0175 18       		.uleb128 0x18
 4469 0176 9742     		.uleb128 0x2117
 4470 0178 19       		.uleb128 0x19
 4471 0179 01       		.uleb128 0x1
 4472 017a 13       		.uleb128 0x13
 4473 017b 00       		.byte	0
 4474 017c 00       		.byte	0
 4475 017d 16       		.uleb128 0x16
 4476 017e 0F       		.uleb128 0xf
 4477 017f 00       		.byte	0
 4478 0180 0B       		.uleb128 0xb
 4479 0181 0B       		.uleb128 0xb
 4480 0182 49       		.uleb128 0x49
 4481 0183 13       		.uleb128 0x13
 4482 0184 00       		.byte	0
 4483 0185 00       		.byte	0
 4484 0186 17       		.uleb128 0x17
 4485 0187 2E       		.uleb128 0x2e
 4486 0188 00       		.byte	0
 4487 0189 3F       		.uleb128 0x3f
 4488 018a 19       		.uleb128 0x19
 4489 018b 03       		.uleb128 0x3
 4490 018c 0E       		.uleb128 0xe
 4491 018d 3A       		.uleb128 0x3a
 4492 018e 0B       		.uleb128 0xb
 4493 018f 3B       		.uleb128 0x3b
 4494 0190 05       		.uleb128 0x5
 4495 0191 27       		.uleb128 0x27
 4496 0192 19       		.uleb128 0x19
 4497 0193 49       		.uleb128 0x49
 4498 0194 13       		.uleb128 0x13
 4499 0195 11       		.uleb128 0x11
 4500 0196 01       		.uleb128 0x1
 4501 0197 12       		.uleb128 0x12
 4502 0198 06       		.uleb128 0x6
 4503 0199 40       		.uleb128 0x40
 4504 019a 18       		.uleb128 0x18
 4505 019b 9642     		.uleb128 0x2116
 4506 019d 19       		.uleb128 0x19
 4507 019e 00       		.byte	0
 4508 019f 00       		.byte	0
 4509 01a0 18       		.uleb128 0x18
 4510 01a1 2E       		.uleb128 0x2e
 4511 01a2 01       		.byte	0x1
 4512 01a3 3F       		.uleb128 0x3f
 4513 01a4 19       		.uleb128 0x19
 4514 01a5 03       		.uleb128 0x3
 4515 01a6 0E       		.uleb128 0xe
 4516 01a7 3A       		.uleb128 0x3a
 4517 01a8 0B       		.uleb128 0xb
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 131


 4518 01a9 3B       		.uleb128 0x3b
 4519 01aa 05       		.uleb128 0x5
 4520 01ab 27       		.uleb128 0x27
 4521 01ac 19       		.uleb128 0x19
 4522 01ad 49       		.uleb128 0x49
 4523 01ae 13       		.uleb128 0x13
 4524 01af 11       		.uleb128 0x11
 4525 01b0 01       		.uleb128 0x1
 4526 01b1 12       		.uleb128 0x12
 4527 01b2 06       		.uleb128 0x6
 4528 01b3 40       		.uleb128 0x40
 4529 01b4 18       		.uleb128 0x18
 4530 01b5 9642     		.uleb128 0x2116
 4531 01b7 19       		.uleb128 0x19
 4532 01b8 01       		.uleb128 0x1
 4533 01b9 13       		.uleb128 0x13
 4534 01ba 00       		.byte	0
 4535 01bb 00       		.byte	0
 4536 01bc 19       		.uleb128 0x19
 4537 01bd 2E       		.uleb128 0x2e
 4538 01be 01       		.byte	0x1
 4539 01bf 3F       		.uleb128 0x3f
 4540 01c0 19       		.uleb128 0x19
 4541 01c1 03       		.uleb128 0x3
 4542 01c2 0E       		.uleb128 0xe
 4543 01c3 3A       		.uleb128 0x3a
 4544 01c4 0B       		.uleb128 0xb
 4545 01c5 3B       		.uleb128 0x3b
 4546 01c6 05       		.uleb128 0x5
 4547 01c7 27       		.uleb128 0x27
 4548 01c8 19       		.uleb128 0x19
 4549 01c9 49       		.uleb128 0x49
 4550 01ca 13       		.uleb128 0x13
 4551 01cb 11       		.uleb128 0x11
 4552 01cc 01       		.uleb128 0x1
 4553 01cd 12       		.uleb128 0x12
 4554 01ce 06       		.uleb128 0x6
 4555 01cf 40       		.uleb128 0x40
 4556 01d0 18       		.uleb128 0x18
 4557 01d1 9742     		.uleb128 0x2117
 4558 01d3 19       		.uleb128 0x19
 4559 01d4 01       		.uleb128 0x1
 4560 01d5 13       		.uleb128 0x13
 4561 01d6 00       		.byte	0
 4562 01d7 00       		.byte	0
 4563 01d8 1A       		.uleb128 0x1a
 4564 01d9 34       		.uleb128 0x34
 4565 01da 00       		.byte	0
 4566 01db 03       		.uleb128 0x3
 4567 01dc 08       		.uleb128 0x8
 4568 01dd 3A       		.uleb128 0x3a
 4569 01de 0B       		.uleb128 0xb
 4570 01df 3B       		.uleb128 0x3b
 4571 01e0 05       		.uleb128 0x5
 4572 01e1 49       		.uleb128 0x49
 4573 01e2 13       		.uleb128 0x13
 4574 01e3 02       		.uleb128 0x2
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 132


 4575 01e4 18       		.uleb128 0x18
 4576 01e5 00       		.byte	0
 4577 01e6 00       		.byte	0
 4578 01e7 1B       		.uleb128 0x1b
 4579 01e8 34       		.uleb128 0x34
 4580 01e9 00       		.byte	0
 4581 01ea 03       		.uleb128 0x3
 4582 01eb 0E       		.uleb128 0xe
 4583 01ec 3A       		.uleb128 0x3a
 4584 01ed 0B       		.uleb128 0xb
 4585 01ee 3B       		.uleb128 0x3b
 4586 01ef 0B       		.uleb128 0xb
 4587 01f0 49       		.uleb128 0x49
 4588 01f1 13       		.uleb128 0x13
 4589 01f2 3F       		.uleb128 0x3f
 4590 01f3 19       		.uleb128 0x19
 4591 01f4 02       		.uleb128 0x2
 4592 01f5 18       		.uleb128 0x18
 4593 01f6 00       		.byte	0
 4594 01f7 00       		.byte	0
 4595 01f8 1C       		.uleb128 0x1c
 4596 01f9 01       		.uleb128 0x1
 4597 01fa 01       		.byte	0x1
 4598 01fb 49       		.uleb128 0x49
 4599 01fc 13       		.uleb128 0x13
 4600 01fd 01       		.uleb128 0x1
 4601 01fe 13       		.uleb128 0x13
 4602 01ff 00       		.byte	0
 4603 0200 00       		.byte	0
 4604 0201 1D       		.uleb128 0x1d
 4605 0202 21       		.uleb128 0x21
 4606 0203 00       		.byte	0
 4607 0204 49       		.uleb128 0x49
 4608 0205 13       		.uleb128 0x13
 4609 0206 2F       		.uleb128 0x2f
 4610 0207 0B       		.uleb128 0xb
 4611 0208 00       		.byte	0
 4612 0209 00       		.byte	0
 4613 020a 1E       		.uleb128 0x1e
 4614 020b 26       		.uleb128 0x26
 4615 020c 00       		.byte	0
 4616 020d 49       		.uleb128 0x49
 4617 020e 13       		.uleb128 0x13
 4618 020f 00       		.byte	0
 4619 0210 00       		.byte	0
 4620 0211 00       		.byte	0
 4621              		.section	.debug_aranges,"",%progbits
 4622 0000 34010000 		.4byte	0x134
 4623 0004 0200     		.2byte	0x2
 4624 0006 00000000 		.4byte	.Ldebug_info0
 4625 000a 04       		.byte	0x4
 4626 000b 00       		.byte	0
 4627 000c 0000     		.2byte	0
 4628 000e 0000     		.2byte	0
 4629 0010 00000000 		.4byte	.LFB2
 4630 0014 24000000 		.4byte	.LFE2-.LFB2
 4631 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 133


 4632 001c 42000000 		.4byte	.LFE3-.LFB3
 4633 0020 00000000 		.4byte	.LFB4
 4634 0024 30000000 		.4byte	.LFE4-.LFB4
 4635 0028 00000000 		.4byte	.LFB5
 4636 002c 32000000 		.4byte	.LFE5-.LFB5
 4637 0030 00000000 		.4byte	.LFB6
 4638 0034 32000000 		.4byte	.LFE6-.LFB6
 4639 0038 00000000 		.4byte	.LFB7
 4640 003c 20000000 		.4byte	.LFE7-.LFB7
 4641 0040 00000000 		.4byte	.LFB8
 4642 0044 32000000 		.4byte	.LFE8-.LFB8
 4643 0048 00000000 		.4byte	.LFB9
 4644 004c 32000000 		.4byte	.LFE9-.LFB9
 4645 0050 00000000 		.4byte	.LFB10
 4646 0054 58000000 		.4byte	.LFE10-.LFB10
 4647 0058 00000000 		.4byte	.LFB24
 4648 005c 20000000 		.4byte	.LFE24-.LFB24
 4649 0060 00000000 		.4byte	.LFB25
 4650 0064 A0000000 		.4byte	.LFE25-.LFB25
 4651 0068 00000000 		.4byte	.LFB26
 4652 006c D6000000 		.4byte	.LFE26-.LFB26
 4653 0070 00000000 		.4byte	.LFB27
 4654 0074 88000000 		.4byte	.LFE27-.LFB27
 4655 0078 00000000 		.4byte	.LFB28
 4656 007c 20000000 		.4byte	.LFE28-.LFB28
 4657 0080 00000000 		.4byte	.LFB29
 4658 0084 1A000000 		.4byte	.LFE29-.LFB29
 4659 0088 00000000 		.4byte	.LFB30
 4660 008c 20000000 		.4byte	.LFE30-.LFB30
 4661 0090 00000000 		.4byte	.LFB31
 4662 0094 10000000 		.4byte	.LFE31-.LFB31
 4663 0098 00000000 		.4byte	.LFB32
 4664 009c 74000000 		.4byte	.LFE32-.LFB32
 4665 00a0 00000000 		.4byte	.LFB33
 4666 00a4 74000000 		.4byte	.LFE33-.LFB33
 4667 00a8 00000000 		.4byte	.LFB34
 4668 00ac 38000000 		.4byte	.LFE34-.LFB34
 4669 00b0 00000000 		.4byte	.LFB35
 4670 00b4 18000000 		.4byte	.LFE35-.LFB35
 4671 00b8 00000000 		.4byte	.LFB36
 4672 00bc 28000000 		.4byte	.LFE36-.LFB36
 4673 00c0 00000000 		.4byte	.LFB37
 4674 00c4 14000000 		.4byte	.LFE37-.LFB37
 4675 00c8 00000000 		.4byte	.LFB38
 4676 00cc 14000000 		.4byte	.LFE38-.LFB38
 4677 00d0 00000000 		.4byte	.LFB39
 4678 00d4 3C000000 		.4byte	.LFE39-.LFB39
 4679 00d8 00000000 		.4byte	.LFB40
 4680 00dc 44000000 		.4byte	.LFE40-.LFB40
 4681 00e0 00000000 		.4byte	.LFB41
 4682 00e4 44000000 		.4byte	.LFE41-.LFB41
 4683 00e8 00000000 		.4byte	.LFB42
 4684 00ec 80000000 		.4byte	.LFE42-.LFB42
 4685 00f0 00000000 		.4byte	.LFB43
 4686 00f4 4E000000 		.4byte	.LFE43-.LFB43
 4687 00f8 00000000 		.4byte	.LFB44
 4688 00fc 60000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 134


 4689 0100 00000000 		.4byte	.LFB45
 4690 0104 50000000 		.4byte	.LFE45-.LFB45
 4691 0108 00000000 		.4byte	.LFB46
 4692 010c 90010000 		.4byte	.LFE46-.LFB46
 4693 0110 00000000 		.4byte	.LFB47
 4694 0114 98020000 		.4byte	.LFE47-.LFB47
 4695 0118 00000000 		.4byte	.LFB48
 4696 011c 7A000000 		.4byte	.LFE48-.LFB48
 4697 0120 00000000 		.4byte	.LFB49
 4698 0124 3C000000 		.4byte	.LFE49-.LFB49
 4699 0128 00000000 		.4byte	.LFB50
 4700 012c 3C000000 		.4byte	.LFE50-.LFB50
 4701 0130 00000000 		.4byte	0
 4702 0134 00000000 		.4byte	0
 4703              		.section	.debug_ranges,"",%progbits
 4704              	.Ldebug_ranges0:
 4705 0000 00000000 		.4byte	.LFB2
 4706 0004 24000000 		.4byte	.LFE2
 4707 0008 00000000 		.4byte	.LFB3
 4708 000c 42000000 		.4byte	.LFE3
 4709 0010 00000000 		.4byte	.LFB4
 4710 0014 30000000 		.4byte	.LFE4
 4711 0018 00000000 		.4byte	.LFB5
 4712 001c 32000000 		.4byte	.LFE5
 4713 0020 00000000 		.4byte	.LFB6
 4714 0024 32000000 		.4byte	.LFE6
 4715 0028 00000000 		.4byte	.LFB7
 4716 002c 20000000 		.4byte	.LFE7
 4717 0030 00000000 		.4byte	.LFB8
 4718 0034 32000000 		.4byte	.LFE8
 4719 0038 00000000 		.4byte	.LFB9
 4720 003c 32000000 		.4byte	.LFE9
 4721 0040 00000000 		.4byte	.LFB10
 4722 0044 58000000 		.4byte	.LFE10
 4723 0048 00000000 		.4byte	.LFB24
 4724 004c 20000000 		.4byte	.LFE24
 4725 0050 00000000 		.4byte	.LFB25
 4726 0054 A0000000 		.4byte	.LFE25
 4727 0058 00000000 		.4byte	.LFB26
 4728 005c D6000000 		.4byte	.LFE26
 4729 0060 00000000 		.4byte	.LFB27
 4730 0064 88000000 		.4byte	.LFE27
 4731 0068 00000000 		.4byte	.LFB28
 4732 006c 20000000 		.4byte	.LFE28
 4733 0070 00000000 		.4byte	.LFB29
 4734 0074 1A000000 		.4byte	.LFE29
 4735 0078 00000000 		.4byte	.LFB30
 4736 007c 20000000 		.4byte	.LFE30
 4737 0080 00000000 		.4byte	.LFB31
 4738 0084 10000000 		.4byte	.LFE31
 4739 0088 00000000 		.4byte	.LFB32
 4740 008c 74000000 		.4byte	.LFE32
 4741 0090 00000000 		.4byte	.LFB33
 4742 0094 74000000 		.4byte	.LFE33
 4743 0098 00000000 		.4byte	.LFB34
 4744 009c 38000000 		.4byte	.LFE34
 4745 00a0 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 135


 4746 00a4 18000000 		.4byte	.LFE35
 4747 00a8 00000000 		.4byte	.LFB36
 4748 00ac 28000000 		.4byte	.LFE36
 4749 00b0 00000000 		.4byte	.LFB37
 4750 00b4 14000000 		.4byte	.LFE37
 4751 00b8 00000000 		.4byte	.LFB38
 4752 00bc 14000000 		.4byte	.LFE38
 4753 00c0 00000000 		.4byte	.LFB39
 4754 00c4 3C000000 		.4byte	.LFE39
 4755 00c8 00000000 		.4byte	.LFB40
 4756 00cc 44000000 		.4byte	.LFE40
 4757 00d0 00000000 		.4byte	.LFB41
 4758 00d4 44000000 		.4byte	.LFE41
 4759 00d8 00000000 		.4byte	.LFB42
 4760 00dc 80000000 		.4byte	.LFE42
 4761 00e0 00000000 		.4byte	.LFB43
 4762 00e4 4E000000 		.4byte	.LFE43
 4763 00e8 00000000 		.4byte	.LFB44
 4764 00ec 60000000 		.4byte	.LFE44
 4765 00f0 00000000 		.4byte	.LFB45
 4766 00f4 50000000 		.4byte	.LFE45
 4767 00f8 00000000 		.4byte	.LFB46
 4768 00fc 90010000 		.4byte	.LFE46
 4769 0100 00000000 		.4byte	.LFB47
 4770 0104 98020000 		.4byte	.LFE47
 4771 0108 00000000 		.4byte	.LFB48
 4772 010c 7A000000 		.4byte	.LFE48
 4773 0110 00000000 		.4byte	.LFB49
 4774 0114 3C000000 		.4byte	.LFE49
 4775 0118 00000000 		.4byte	.LFB50
 4776 011c 3C000000 		.4byte	.LFE50
 4777 0120 00000000 		.4byte	0
 4778 0124 00000000 		.4byte	0
 4779              		.section	.debug_line,"",%progbits
 4780              	.Ldebug_line0:
 4781 0000 C0040000 		.section	.debug_str,"MS",%progbits,1
 4781      02004D00 
 4781      00000201 
 4781      FB0E0D00 
 4781      01010101 
 4782              	.LASF68:
 4783 0000 64617465 		.ascii	"dateTime\000"
 4783      54696D65 
 4783      00
 4784              	.LASF55:
 4785 0009 746D7044 		.ascii	"tmpDay\000"
 4785      617900
 4786              	.LASF10:
 4787 0010 75696E74 		.ascii	"uint16\000"
 4787      313600
 4788              	.LASF29:
 4789 0017 72657456 		.ascii	"retVal\000"
 4789      616C00
 4790              	.LASF49:
 4791 001e 5254435F 		.ascii	"RTC_1_Stop\000"
 4791      315F5374 
 4791      6F7000
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 136


 4792              	.LASF41:
 4793 0029 5254435F 		.ascii	"RTC_1_ConstructDate\000"
 4793      315F436F 
 4793      6E737472 
 4793      75637444 
 4793      61746500 
 4794              	.LASF50:
 4795 003d 746D7044 		.ascii	"tmpDate\000"
 4795      61746500 
 4796              	.LASF0:
 4797 0045 7369676E 		.ascii	"signed char\000"
 4797      65642063 
 4797      68617200 
 4798              	.LASF67:
 4799 0051 5254435F 		.ascii	"RTC_1_GetDateAndTime\000"
 4799      315F4765 
 4799      74446174 
 4799      65416E64 
 4799      54696D65 
 4800              	.LASF83:
 4801 0066 746D704D 		.ascii	"tmpMinute\000"
 4801      696E7574 
 4801      6500
 4802              	.LASF94:
 4803 0070 5254435F 		.ascii	"RTC_1_DaysBeforeMonth\000"
 4803      315F4461 
 4803      79734265 
 4803      666F7265 
 4803      4D6F6E74 
 4804              	.LASF7:
 4805 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 4805      206C6F6E 
 4805      6720756E 
 4805      7369676E 
 4805      65642069 
 4806              	.LASF97:
 4807 009d 5254435F 		.ascii	"RTC_1_dstTimeOffset\000"
 4807      315F6473 
 4807      7454696D 
 4807      654F6666 
 4807      73657400 
 4808              	.LASF99:
 4809 00b1 5254435F 		.ascii	"RTC_1_dstStatus\000"
 4809      315F6473 
 4809      74537461 
 4809      74757300 
 4810              	.LASF56:
 4811 00c1 746D704D 		.ascii	"tmpMonth\000"
 4811      6F6E7468 
 4811      00
 4812              	.LASF24:
 4813 00ca 5254435F 		.ascii	"RTC_1_IsBitSet\000"
 4813      315F4973 
 4813      42697453 
 4813      657400
 4814              	.LASF88:
 4815 00d9 7765656B 		.ascii	"weekOfMonth\000"
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 137


 4815      4F664D6F 
 4815      6E746800 
 4816              	.LASF85:
 4817 00e5 746D7041 		.ascii	"tmpAmPmState\000"
 4817      6D506D53 
 4817      74617465 
 4817      00
 4818              	.LASF74:
 4819 00f2 6263644E 		.ascii	"bcdNum\000"
 4819      756D00
 4820              	.LASF91:
 4821 00f9 64617973 		.ascii	"daysInMonth\000"
 4821      496E4D6F 
 4821      6E746800 
 4822              	.LASF6:
 4823 0105 6C6F6E67 		.ascii	"long long int\000"
 4823      206C6F6E 
 4823      6720696E 
 4823      7400
 4824              	.LASF106:
 4825 0113 47656E65 		.ascii	"Generated_Source\\PSoC4\\RTC_1.c\000"
 4825      72617465 
 4825      645F536F 
 4825      75726365 
 4825      5C50536F 
 4826              	.LASF30:
 4827 0132 5254435F 		.ascii	"RTC_1_GetMinutes\000"
 4827      315F4765 
 4827      744D696E 
 4827      75746573 
 4827      00
 4828              	.LASF34:
 4829 0143 5254435F 		.ascii	"RTC_1_GetMonth\000"
 4829      315F4765 
 4829      744D6F6E 
 4829      746800
 4830              	.LASF26:
 4831 0152 79656172 		.ascii	"year\000"
 4831      00
 4832              	.LASF4:
 4833 0157 6C6F6E67 		.ascii	"long int\000"
 4833      20696E74 
 4833      00
 4834              	.LASF73:
 4835 0160 5254435F 		.ascii	"RTC_1_ConvertBCDToDec\000"
 4835      315F436F 
 4835      6E766572 
 4835      74424344 
 4835      546F4465 
 4836              	.LASF9:
 4837 0176 75696E74 		.ascii	"uint8\000"
 4837      3800
 4838              	.LASF63:
 4839 017c 7265664F 		.ascii	"refOneSecTicks\000"
 4839      6E655365 
 4839      63546963 
 4839      6B7300
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 138


 4840              	.LASF89:
 4841 018b 63757244 		.ascii	"curDay\000"
 4841      617900
 4842              	.LASF32:
 4843 0192 5254435F 		.ascii	"RTC_1_GetAmPm\000"
 4843      315F4765 
 4843      74416D50 
 4843      6D00
 4844              	.LASF13:
 4845 01a0 646F7562 		.ascii	"double\000"
 4845      6C6500
 4846              	.LASF78:
 4847 01a7 73686966 		.ascii	"shift\000"
 4847      7400
 4848              	.LASF11:
 4849 01ad 75696E74 		.ascii	"uint32\000"
 4849      333200
 4850              	.LASF45:
 4851 01b4 7764744E 		.ascii	"wdtNumber\000"
 4851      756D6265 
 4851      7200
 4852              	.LASF23:
 4853 01be 6D61736B 		.ascii	"mask\000"
 4853      00
 4854              	.LASF31:
 4855 01c3 5254435F 		.ascii	"RTC_1_GetHours\000"
 4855      315F4765 
 4855      74486F75 
 4855      727300
 4856              	.LASF35:
 4857 01d2 5254435F 		.ascii	"RTC_1_GetYear\000"
 4857      315F4765 
 4857      74596561 
 4857      7200
 4858              	.LASF107:
 4859 01e0 433A5C55 		.ascii	"C:\\Users\\7709\\Desktop\\BLE\\central\\BLE_Central"
 4859      73657273 
 4859      5C373730 
 4859      395C4465 
 4859      736B746F 
 4860 020d 5C424C45 		.ascii	"\\BLE_Central.cydsn\000"
 4860      5F43656E 
 4860      7472616C 
 4860      2E637964 
 4860      736E00
 4861              	.LASF42:
 4862 0220 6D6F6E74 		.ascii	"month\000"
 4862      6800
 4863              	.LASF8:
 4864 0226 756E7369 		.ascii	"unsigned int\000"
 4864      676E6564 
 4864      20696E74 
 4864      00
 4865              	.LASF38:
 4866 0233 74696D65 		.ascii	"timeFormat\000"
 4866      466F726D 
 4866      617400
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 139


 4867              	.LASF76:
 4868 023e 5254435F 		.ascii	"RTC_1_ConvertDecToBCD\000"
 4868      315F436F 
 4868      6E766572 
 4868      74446563 
 4868      546F4243 
 4869              	.LASF101:
 4870 0254 5254435F 		.ascii	"RTC_1_currentTimeDate\000"
 4870      315F6375 
 4870      7272656E 
 4870      7454696D 
 4870      65446174 
 4871              	.LASF90:
 4872 026a 63757257 		.ascii	"curWeek\000"
 4872      65656B00 
 4873              	.LASF102:
 4874 0272 5254435F 		.ascii	"RTC_1_alarmCurStatus\000"
 4874      315F616C 
 4874      61726D43 
 4874      75725374 
 4874      61747573 
 4875              	.LASF5:
 4876 0287 6C6F6E67 		.ascii	"long unsigned int\000"
 4876      20756E73 
 4876      69676E65 
 4876      6420696E 
 4876      7400
 4877              	.LASF61:
 4878 0299 5254435F 		.ascii	"RTC_1_SetPeriod\000"
 4878      315F5365 
 4878      74506572 
 4878      696F6400 
 4879              	.LASF3:
 4880 02a9 73686F72 		.ascii	"short unsigned int\000"
 4880      7420756E 
 4880      7369676E 
 4880      65642069 
 4880      6E7400
 4881              	.LASF19:
 4882 02bc 64617465 		.ascii	"date\000"
 4882      00
 4883              	.LASF25:
 4884 02c1 5254435F 		.ascii	"RTC_1_LeapYear\000"
 4884      315F4C65 
 4884      61705965 
 4884      617200
 4885              	.LASF64:
 4886 02d0 5254435F 		.ascii	"RTC_1_GetUnixTime\000"
 4886      315F4765 
 4886      74556E69 
 4886      7854696D 
 4886      6500
 4887              	.LASF104:
 4888 02e2 5254435F 		.ascii	"RTC_1_daysInMonthTbl\000"
 4888      315F6461 
 4888      7973496E 
 4888      4D6F6E74 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 140


 4888      6854626C 
 4889              	.LASF52:
 4890 02f7 5254435F 		.ascii	"RTC_1_Init\000"
 4890      315F496E 
 4890      697400
 4891              	.LASF79:
 4892 0302 5254435F 		.ascii	"RTC_1_Update\000"
 4892      315F5570 
 4892      64617465 
 4892      00
 4893              	.LASF100:
 4894 030f 5254435F 		.ascii	"RTC_1_unixTime\000"
 4894      315F756E 
 4894      69785469 
 4894      6D6500
 4895              	.LASF105:
 4896 031e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4896      43313120 
 4896      352E342E 
 4896      31203230 
 4896      31363036 
 4897 0351 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4897      20726576 
 4897      6973696F 
 4897      6E203233 
 4897      37373135 
 4898 0384 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4898      66756E63 
 4898      74696F6E 
 4898      2D736563 
 4898      74696F6E 
 4899              	.LASF87:
 4900 03ac 5254435F 		.ascii	"RTC_1_RelativeToFixed\000"
 4900      315F5265 
 4900      6C617469 
 4900      7665546F 
 4900      46697865 
 4901              	.LASF72:
 4902 03c2 5254435F 		.ascii	"RTC_1_ReadStatus\000"
 4902      315F5265 
 4902      61645374 
 4902      61747573 
 4902      00
 4903              	.LASF20:
 4904 03d3 6461794F 		.ascii	"dayOfWeek\000"
 4904      66576565 
 4904      6B00
 4905              	.LASF92:
 4906 03dd 6461794F 		.ascii	"dayOfMonthTmp\000"
 4906      664D6F6E 
 4906      7468546D 
 4906      7000
 4907              	.LASF66:
 4908 03eb 5254435F 		.ascii	"RTC_1_GetRefOneSec\000"
 4908      315F4765 
 4908      74526566 
 4908      4F6E6553 
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 141


 4908      656300
 4909              	.LASF82:
 4910 03fe 5254435F 		.ascii	"RTC_1_UnixToDateTime\000"
 4910      315F556E 
 4910      6978546F 
 4910      44617465 
 4910      54696D65 
 4911              	.LASF17:
 4912 0413 73697A65 		.ascii	"sizetype\000"
 4912      74797065 
 4912      00
 4913              	.LASF62:
 4914 041c 7469636B 		.ascii	"ticks\000"
 4914      7300
 4915              	.LASF16:
 4916 0422 6C6F6E67 		.ascii	"long double\000"
 4916      20646F75 
 4916      626C6500 
 4917              	.LASF69:
 4918 042e 5254435F 		.ascii	"RTC_1_GetTime\000"
 4918      315F4765 
 4918      7454696D 
 4918      6500
 4919              	.LASF95:
 4920 043c 5254435F 		.ascii	"RTC_1_updateTimePeriod\000"
 4920      315F7570 
 4920      64617465 
 4920      54696D65 
 4920      50657269 
 4921              	.LASF57:
 4922 0453 746D7059 		.ascii	"tmpYear\000"
 4922      65617200 
 4923              	.LASF48:
 4924 045b 5254435F 		.ascii	"RTC_1_Start\000"
 4924      315F5374 
 4924      61727400 
 4925              	.LASF84:
 4926 0467 746D7048 		.ascii	"tmpHour\000"
 4926      6F757200 
 4927              	.LASF18:
 4928 046f 74696D65 		.ascii	"time\000"
 4928      00
 4929              	.LASF40:
 4930 0474 686F7572 		.ascii	"hour\000"
 4930      00
 4931              	.LASF36:
 4932 0479 5254435F 		.ascii	"RTC_1_GetTimeFormat\000"
 4932      315F4765 
 4932      7454696D 
 4932      65466F72 
 4932      6D617400 
 4933              	.LASF44:
 4934 048d 5254435F 		.ascii	"RTC_1_GetDayOfWeek\000"
 4934      315F4765 
 4934      74446179 
 4934      4F665765 
 4934      656B00
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 142


 4935              	.LASF65:
 4936 04a0 5254435F 		.ascii	"RTC_1_GetPeriod\000"
 4936      315F4765 
 4936      74506572 
 4936      696F6400 
 4937              	.LASF12:
 4938 04b0 666C6F61 		.ascii	"float\000"
 4938      7400
 4939              	.LASF33:
 4940 04b6 5254435F 		.ascii	"RTC_1_GetDay\000"
 4940      315F4765 
 4940      74446179 
 4940      00
 4941              	.LASF53:
 4942 04c3 5254435F 		.ascii	"RTC_1_SetDateAndTime\000"
 4942      315F5365 
 4942      74446174 
 4942      65416E64 
 4942      54696D65 
 4943              	.LASF39:
 4944 04d8 73746174 		.ascii	"stateAmPm\000"
 4944      65416D50 
 4944      6D00
 4945              	.LASF1:
 4946 04e2 756E7369 		.ascii	"unsigned char\000"
 4946      676E6564 
 4946      20636861 
 4946      7200
 4947              	.LASF28:
 4948 04f0 696E7075 		.ascii	"inputTime\000"
 4948      7454696D 
 4948      6500
 4949              	.LASF14:
 4950 04fa 75696E74 		.ascii	"uint64\000"
 4950      363400
 4951              	.LASF2:
 4952 0501 73686F72 		.ascii	"short int\000"
 4952      7420696E 
 4952      7400
 4953              	.LASF46:
 4954 050b 5254435F 		.ascii	"RTC_1_CySysRtcSetCallback\000"
 4954      315F4379 
 4954      53797352 
 4954      74635365 
 4954      7443616C 
 4955              	.LASF58:
 4956 0525 5254435F 		.ascii	"RTC_1_SetUnixTime\000"
 4956      315F5365 
 4956      74556E69 
 4956      7854696D 
 4956      6500
 4957              	.LASF27:
 4958 0537 5254435F 		.ascii	"RTC_1_GetSecond\000"
 4958      315F4765 
 4958      74536563 
 4958      6F6E6400 
 4959              	.LASF43:
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 143


 4960 0547 746D7056 		.ascii	"tmpVal\000"
 4960      616C00
 4961              	.LASF86:
 4962 054e 746D7056 		.ascii	"tmpVar\000"
 4962      617200
 4963              	.LASF77:
 4964 0555 6465634E 		.ascii	"decNum\000"
 4964      756D00
 4965              	.LASF103:
 4966 055c 5254435F 		.ascii	"RTC_1_daysBeforeMonthTbl\000"
 4966      315F6461 
 4966      79734265 
 4966      666F7265 
 4966      4D6F6E74 
 4967              	.LASF15:
 4968 0575 63686172 		.ascii	"char\000"
 4968      00
 4969              	.LASF75:
 4970 057a 6D756C74 		.ascii	"mult\000"
 4970      00
 4971              	.LASF54:
 4972 057f 696E7075 		.ascii	"inputDate\000"
 4972      74446174 
 4972      6500
 4973              	.LASF70:
 4974 0589 5254435F 		.ascii	"RTC_1_GetDate\000"
 4974      315F4765 
 4974      74446174 
 4974      6500
 4975              	.LASF81:
 4976 0597 5254435F 		.ascii	"RTC_1_DateTimeToUnix\000"
 4976      315F4461 
 4976      74655469 
 4976      6D65546F 
 4976      556E6978 
 4977              	.LASF71:
 4978 05ac 746D7054 		.ascii	"tmpTimeDate\000"
 4978      696D6544 
 4978      61746500 
 4979              	.LASF80:
 4980 05b8 5254435F 		.ascii	"RTC_1_currentTickNumber\000"
 4980      315F6375 
 4980      7272656E 
 4980      74546963 
 4980      6B4E756D 
 4981              	.LASF59:
 4982 05d0 756E6978 		.ascii	"unixTime\000"
 4982      54696D65 
 4982      00
 4983              	.LASF21:
 4984 05d9 73746174 		.ascii	"status\000"
 4984      757300
 4985              	.LASF98:
 4986 05e0 5254435F 		.ascii	"RTC_1_initVar\000"
 4986      315F696E 
 4986      69745661 
 4986      7200
ARM GAS  C:\Users\7709\AppData\Local\Temp\ccYsxBBo.s 			page 144


 4987              	.LASF37:
 4988 05ee 5254435F 		.ascii	"RTC_1_ConstructTime\000"
 4988      315F436F 
 4988      6E737472 
 4988      75637454 
 4988      696D6500 
 4989              	.LASF93:
 4990 0602 5254435F 		.ascii	"RTC_1_DaysInMonth\000"
 4990      315F4461 
 4990      7973496E 
 4990      4D6F6E74 
 4990      6800
 4991              	.LASF51:
 4992 0614 746D7054 		.ascii	"tmpTime\000"
 4992      696D6500 
 4993              	.LASF60:
 4994 061c 746D7044 		.ascii	"tmpDateTime\000"
 4994      61746554 
 4994      696D6500 
 4995              	.LASF96:
 4996 0628 5254435F 		.ascii	"RTC_1_tickRefOneSec\000"
 4996      315F7469 
 4996      636B5265 
 4996      664F6E65 
 4996      53656300 
 4997              	.LASF22:
 4998 063c 5254435F 		.ascii	"RTC_1_DATE_TIME\000"
 4998      315F4441 
 4998      54455F54 
 4998      494D4500 
 4999              	.LASF47:
 5000 064c 5254435F 		.ascii	"RTC_1_CySysRtcResetCallback\000"
 5000      315F4379 
 5000      53797352 
 5000      74635265 
 5000      73657443 
 5001              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
